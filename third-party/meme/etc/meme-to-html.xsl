<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE xsl:stylesheet [
<!ENTITY nbsp "&#160;">
<!ENTITY space " ">
<!ENTITY newline "&#10;">
<!ENTITY tab "&#9;">
]><!-- define nbsp as it is not defined in xml, only lt, gt and amp are defined by default -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<!-- 
  This file is automatically built from meme.xsl.in at MAKE time.

  This stylesheet transforms the XML output of MEME into HTML closely matching
  the appearance of the HTML generated by previous versions of MEME.
-->

  <xsl:output method="html" indent="yes" 
    doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN"
    doctype-system="http://www.w3.org/TR/html4/loose.dtd"
    />
  <!-- contains constant site_url -->
  <xsl:include href="constants.xsl"/>
  <xsl:include href="meme.css.xsl"/>
  <xsl:include href="motif_logo.js.xsl"/>
  <xsl:include href="block-diagram.xsl"/>
  <!-- Stylesheet processing starts here -->
  <xsl:template match="/MEME">
    <html>
      <xsl:call-template name="html-head"/>
      <body onload="javascript:setup()">
        <form 
          enctype="application/x-www-form-urlencoded"
          method = "post"
          target = "_blank"
          action = "{$site_url}/cgi-bin/meme_request.cgi"
        >
        <!-- Create the various sub-sections of the document -->
        <xsl:call-template name="hidden"/>
        <xsl:call-template name="top"/>
        <xsl:call-template name="overview"/>
        <xsl:call-template name="motifs"/>
        <xsl:call-template name="combined" />
        <xsl:call-template name="info" />
        <xsl:call-template name="explanation" />
      </form>
      </body>
    </html>
  </xsl:template>

  <xsl:template name="html-head">
    <!-- This template prints the HTML head block, including the document level CSS. -->
    <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
      <title>MEME</title>
      <style type="text/css">
        <xsl:call-template name="meme.css" />
      </style>

      <script type="text/javascript">
        <xsl:call-template name="motif_logo.js" />
        function setup() {
          var motif_count = <xsl:value-of select="count(/MEME/motifs/motif)"/>;
          //create canvas logos
          var alphabet = new Alphabet(document.getElementById("alphabet").value, document.getElementById("bgfreq").value);
          for (var i = 1; i &lt;= motif_count; i++) {
            var pspm = new Pspm(document.getElementById("pspm" + i).value);
            var logo = logo_1(alphabet, "MEME", pspm);
            alternate_logo(logo, "thumbnail_logo_" + i, 0.5);
            alternate_logo(logo, "logo_img_" + i, 1);
          <xsl:if test="/MEME/training_set/alphabet/@id='nucleotide'">
            var logo_rc = logo_1(alphabet, "MEME", pspm.copy().reverse_complement(alphabet));
            alternate_logo(logo_rc, "thumbnail_logo_rc_" + i, 0.5);
            alternate_logo(logo_rc, "logo_rc_img_" + i, 1);
          </xsl:if>
          }
          
          //ensure radio buttons have data generated for them by fireing events
          var allInputs = document.getElementsByTagName("input");
          for (var i = 0; i &lt; allInputs.length; i++) {
            var input = allInputs[i];
            if (input.type == "radio" &amp;&amp; input.checked) {
              var evt = document.createEvent("MouseEvents");
              evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
              input.dispatchEvent(evt);
            }
          }
          <xsl:if test="count(/MEME/motifs/motif) &gt; 1">
          var tbl = document.getElementById("tbl_blocks_combined");
          wireUpTable(tbl, true);
          </xsl:if>
          for (var i = 1; i &lt;= motif_count; i++) {
            tbl = document.getElementById("tbl_sites_" + i);
            wireUpTable(tbl, false);
            tbl = document.getElementById("tbl_blocks_" + i);
            wireUpTable(tbl, true);
          }
        }
        function showDesc(source, targetid) {
          document.getElementById(targetid).childNodes[0].nodeValue = source.title;
        }
        function hideDesc(targetid) {
          document.getElementById(targetid).childNodes[0].nodeValue = "Mouse-over buttons for more information.";
        }
        function showEmbededFormat(motifnum, format) {
          var source = document.getElementById(format + motifnum);
          var txtarea = document.getElementById("format_display_area_" + motifnum);
          txtarea.value = source.value;
          txtarea.style.display = 'block';
        }
        function hideFormat(motifnum) {
          var txtarea = document.getElementById("format_display_area_" + motifnum);
          txtarea.style.display = 'none';
        }
        function block2raw(block) {
          var raw = "";
          var endpat = /\/\//;
          var wordpat = /\S+/gi;
          var lines = block.split("\n");
          for (i = 2; i &lt; lines.length; ++i) {
            if (lines[i].match(endpat) != null) break;
            var words = lines[i].match(wordpat);
            raw += words[3] + "\n";
          }
          return raw;
        }
        function block2fasta(block) {
          var fasta = "";
          var endpat = /\/\//;
          var wordpat = /\S+/gi;
          var lines = block.split("\n");
          for (i = 2; i &lt; lines.length; ++i) {
            if (lines[i].match(endpat) != null) break;
            var words = lines[i].match(wordpat);
            var start = words[2].substring(0, words[2].length - 1);
            fasta += ">" + words[0] + " ( start= " + start + " )\n" + words[3] + "\n";
          }
          return fasta;
        }
        function showRaw(motifnum) {
          var source = document.getElementById('blocks' + motifnum);
          var txtarea = document.getElementById("format_display_area_" + motifnum);
          txtarea.value = block2raw(source.value);
          txtarea.style.display = 'block';
        }
        function showFasta(motifnum) {
          var source = document.getElementById('blocks' + motifnum);
          var txtarea = document.getElementById("format_display_area_" + motifnum);
          txtarea.value = block2fasta(source.value);
          txtarea.style.display = 'block';
        }
        function showHidden(prefix) {
          document.getElementById(prefix + '_activator').style.display = 'none';
          document.getElementById(prefix + '_deactivator').style.display = 'block';
          document.getElementById(prefix + '_data').style.display = 'block';
        }
        function hideShown(prefix) {
          document.getElementById(prefix + '_activator').style.display = 'block';
          document.getElementById(prefix + '_deactivator').style.display = 'none';
          document.getElementById(prefix + '_data').style.display = 'none';
        }
        function wireUpTable(table, skiplast) {
          if (table &amp;&amp; table.rows) {
            var nRows = table.rows.length;
            if (skiplast) {nRows--;}
            for (var i = 1; i &lt; nRows; i++) {
              var row = table.rows[i];
              row.style.cursor = 'pointer';
              row.onclick = function()
              {
                processHighlight(this);
              }
            }
          } else {
            alert(table);
          }
        }
        function processHighlight(sourceRow) {
          var name = sourceRow.cells[0].firstChild.nodeValue;
          <xsl:if test="count(/MEME/motifs/motif) &gt; 1">
          var tbl = document.getElementById("tbl_blocks_combined");
          highlightTable(name, tbl);
          </xsl:if>
          for (var i = 1; i &lt;= <xsl:value-of select="count(/MEME/motifs/motif)"/>; i++) {
            tbl = document.getElementById("tbl_sites_" + i);
            highlightTable(name, tbl);
            tbl = document.getElementById("tbl_blocks_" + i);
            highlightTable(name, tbl);
          }
        }
        function highlightTable(name, table) {
          if (table == null) return;
          nRows = table.rows.length;
          for (var i = 0; i &lt; nRows; i++) {
            var row = table.rows[i];
            if(row.cells[0].firstChild.nodeValue == name) {
              row.style.backgroundColor = "#aaffaa";
            } else {
              row.style.backgroundColor = "white";
            }
          }
        }
        function warnExternal() {
          if (confirm("Using BLOCKS requires the data to be sent to an external webservice even if you have setup your own meme installation. Continue?")) {
            return true;
          }
          return false;
        }
        function clickLogoTab(is_rc, num) {
          var stdTab = document.getElementById("logo_tab_std_" + num);
          var rcTab = document.getElementById("logo_tab_rc_" + num);
          var logoImg = document.getElementById("logo_img_" + num);
          var logoRcImg = document.getElementById("logo_rc_img_" + num);
          if (is_rc) {
            logoImg.style.display = 'none';
            logoRcImg.style.display = 'block';
            rcTab.setAttribute("class", "tab activeTab");
            stdTab.setAttribute("class", "tab");
          } else {
            logoRcImg.style.display = 'none';
            logoImg.style.display = 'block';
            rcTab.setAttribute("class", "tab");
            stdTab.setAttribute("class", "tab activeTab");
          }
        }
      </script>
    </head>
  </xsl:template>

  <!-- replaces characters that might cause problems in file names, allows motif names to be used in logo file names-->
  <xsl:template name="sanatize-text">
    <xsl:param name="text"/>
    <xsl:param name="pos" select="0"/>

    <xsl:variable name="len" select="string-length($text)"/>
    <xsl:choose>
      <xsl:when test="$pos &lt; 0 or $pos &gt;= $len">
        <xsl:value-of select="$text"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="char" select="substring($text, $pos, 1)"/>
        <xsl:choose>
          <xsl:when test="contains('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_', $char)">
            <xsl:call-template name="sanatize-text">
              <xsl:with-param name="text" select="$text"/>
              <xsl:with-param name="pos" select="$pos + 1"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="text2">
              <xsl:value-of select="substring($text, 0, $pos)"/>
              <xsl:text>_</xsl:text>
              <xsl:value-of select="substring($text, $pos+1)"/>
            </xsl:variable>
            <xsl:call-template name="sanatize-text">
              <xsl:with-param name="text" select="$text2"/>
              <xsl:with-param name="pos" select="$pos + 1"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template name="hidden">
    <xsl:comment><xsl:text>+++++++++++++++++++++++START DATA+++++++++++++++++++++++++++++++++++++</xsl:text></xsl:comment>
    <xsl:text>&newline;</xsl:text>
    <!-- the version is the first hidden input on the page parsed by meme-io -->
    <input type="hidden" name="version" value="MEME version {/MEME/@version}"/><xsl:text>&newline;</xsl:text>
    <xsl:variable name="alphabet">
      <xsl:call-template name="alphabet"/>
    </xsl:variable>
    <input type="hidden" name="alphabet" id="alphabet" value="{$alphabet}"/><xsl:text>&newline;</xsl:text>
    <input type="hidden" name="strands" value="{/MEME/model/strands}"/><xsl:text>&newline;</xsl:text>
    <xsl:variable name="bgfreq">
      <xsl:for-each select="/MEME/model/background_frequencies/alphabet_array/value">
        <xsl:value-of select="id(@letter_id)/@symbol"/><xsl:text> </xsl:text>
        <xsl:value-of select="format-number(., '0.000')"/>
        <xsl:if test="position() != last()"><xsl:text> </xsl:text></xsl:if>
        <!-- For amino acids insert a line break very 9 characters. -->
        <xsl:variable name="letter_index" select="position()" />
        <xsl:if test="$letter_index mod 9 = 0">
          <xsl:text>&newline;</xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="combinedblock">
      <xsl:text>&newline;</xsl:text>
      <xsl:for-each select="scanned_sites_summary/scanned_sites">
        <xsl:sort select="position" data-type="number" order="ascending"/>
        <xsl:value-of select="id(@sequence_id)/@name"/><xsl:text> </xsl:text>
        <xsl:value-of select="@pvalue"/><xsl:text> </xsl:text>
        <xsl:value-of select="@num_sites"/><xsl:text> </xsl:text>
        <xsl:value-of select="id(@sequence_id)/@length"/><xsl:text> </xsl:text>
        <xsl:for-each select="./scanned_site">
          <xsl:variable name="motif_num" select="count(id(@motif_id)/preceding-sibling::*) + 1" />
          <xsl:choose>
            <xsl:when test="@strand='plus'">
              <xsl:text>+</xsl:text>
            </xsl:when>
            <xsl:when test="@strand='minus'">
              <xsl:text>-</xsl:text>
            </xsl:when>
          </xsl:choose>
          <xsl:value-of select="$motif_num"/><xsl:text> </xsl:text>
          <xsl:value-of select="@position"/><xsl:text> </xsl:text>
          <xsl:value-of select="@pvalue"/><xsl:text> </xsl:text>
        </xsl:for-each>
        <xsl:text>&newline;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <input type="hidden" name="bgfreq" id="bgfreq" value="{$bgfreq}"/><xsl:text>&newline;</xsl:text>
    <input type="hidden" name="name" value="{/MEME/training_set/@datafile}"/><xsl:text>&newline;</xsl:text>
    <input type="hidden" name="combinedblock" value="{$combinedblock}"/><xsl:text>&newline;</xsl:text>
    <input type="hidden" name="nmotifs" value="{count(/MEME/motifs/motif)}"/><xsl:text>&newline;</xsl:text>
    <xsl:for-each select="/MEME/motifs/motif">
      <xsl:comment><xsl:text>data for motif </xsl:text><xsl:value-of select="position()"/></xsl:comment><xsl:text>&newline;</xsl:text>
      <xsl:call-template name="motif-data"/>
    </xsl:for-each>
    <xsl:comment><xsl:text>++++++++++++++++++++++++++++FINISHED DATA++++++++++++++++++++++++++++++++</xsl:text></xsl:comment>
    <xsl:text>&newline;</xsl:text>
  </xsl:template>

  <xsl:template name="motif-data">
    <!-- For future reference, xml will ignore white space as long as it is not next to non-white space so
    non-whitespace data should be surrounded in <xsl:text></xsl:text> tags to split it from the whitespace-->
    <!-- construct motif block value -->
    <xsl:variable name="sane_name">
      <xsl:call-template name="sanatize-text">
        <xsl:with-param name="text" select="@name"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="motifblock" >
      <xsl:text>&newline;</xsl:text>
      <xsl:text>BL   MOTIF </xsl:text><xsl:value-of select="$sane_name"/>
      <xsl:text> width=</xsl:text><xsl:value-of select="@width"/>
      <xsl:text> seqs=</xsl:text><xsl:value-of select="@sites"/>
      <xsl:text>&newline;</xsl:text>
    </xsl:variable>
    <!-- finish constructing motif block value -->
    <!-- construct pssm value -->
    <xsl:variable name="pssm">
      <xsl:text>&newline;</xsl:text>
      <xsl:text>log-odds matrix: alength= </xsl:text><xsl:value-of select="/MEME/training_set/alphabet/@length"/>
      <xsl:text> w= </xsl:text><xsl:value-of select="@width"/>
      <xsl:text> n= </xsl:text><xsl:value-of select="@sites"/>
      <xsl:text> bayes= </xsl:text><xsl:value-of select="@bayes_threshold"/>
      <xsl:text> E= </xsl:text><xsl:value-of select="@e_value"/><xsl:text>&newline;</xsl:text>
      <xsl:for-each select="scores/alphabet_matrix/alphabet_array">
        <xsl:for-each select="value">
          <xsl:value-of select="."/><xsl:text>&space;</xsl:text>
        </xsl:for-each><xsl:text>&newline;</xsl:text>
      </xsl:for-each>
      <xsl:text>&newline;</xsl:text>
    </xsl:variable>
    <!-- finish constructing pssm value -->
    <!-- construct pspm value, ascii 10 is line feed -->
    <xsl:variable name="pspm">
      <xsl:text>&newline;</xsl:text>
      <xsl:text>letter-probability matrix: alength= </xsl:text><xsl:value-of select="/MEME/training_set/alphabet/@length"/>
      <xsl:text> w= </xsl:text><xsl:value-of select="@width"/>
      <xsl:text> nsites= </xsl:text><xsl:value-of select="@sites"/>
      <xsl:text> E= </xsl:text><xsl:value-of select="@e_value"/><xsl:text>&newline;</xsl:text>
      <xsl:for-each select="probabilities/alphabet_matrix/alphabet_array">
        <xsl:for-each select="value">
          <xsl:value-of select="."/><xsl:text>&space;</xsl:text>
        </xsl:for-each><xsl:text>&newline;</xsl:text>
      </xsl:for-each>
      <xsl:text>&newline;</xsl:text>
    </xsl:variable>
    <!-- finish constructing pspm value -->
    <!-- construct blocks value -->
    <xsl:variable name="blocks">
      <xsl:value-of select="$motifblock"/>
      <xsl:for-each select="contributing_sites/contributing_site">
        <xsl:value-of select="id(@sequence_id)/@name"/>
        <xsl:text>  ( </xsl:text><xsl:value-of select="@position"/><xsl:text>) </xsl:text> 
        <xsl:for-each select="site/letter_ref">
          <xsl:value-of select="id(@letter_id)/@symbol"/>
        </xsl:for-each> 
        <xsl:text> 1&newline;</xsl:text>
      </xsl:for-each>
      <xsl:text>//&newline;&newline;</xsl:text>
    </xsl:variable>
    <!-- finish constructing blocks value -->

    <input type="hidden" id="motifblock{position()}" name="motifblock{position()}" value="{$motifblock}" /><xsl:text>&newline;</xsl:text>
    <input type="hidden" id="pssm{position()}" name="pssm{position()}" value="{$pssm}" /><xsl:text>&newline;</xsl:text>
    <input type="hidden" id="pspm{position()}" name="pspm{position()}" value="{$pspm}" /><xsl:text>&newline;</xsl:text>
    <input type="hidden" id="blocks{position()}" name="BLOCKS{position()}" value="{$blocks}" /><xsl:text>&newline;</xsl:text>
    
  </xsl:template>

  <xsl:template name="top">
    <!-- title graphics -->
    <a name="top_buttons"/>
    <div class="pad1">
      <h1><img src="http://meme.nbcr.net/meme/images/meme.png" alt="MEME" /></h1>
      <p>
        For further information on how to interpret these results or to get a 
        copy of the MEME software please access 
        <a href="http://meme.nbcr.net/">http://meme.nbcr.net</a>. 
      </p>
      <p>If you use MEME in your research, please cite the following paper:<br />
        <span class="citation">
          Timothy L. Bailey and Charles Elkan,
          &quot;Fitting a mixture model by expectation maximization to discover motifs in biopolymers&quot;,
          <em>Proceedings of the Second International Conference on Intelligent Systems
          for Molecular Biology</em>, pp. 28-36, AAAI Press, Menlo Park, California, 1994.
        </span>
      </p>
    </div>
    <!-- navigation -->
    <div class="pad2">
      <a class="jump" href="#overview">Discovered Motifs</a>
      &nbsp;&nbsp;|&nbsp;&nbsp;
      <a class="jump" href="#combined">Block diagrams of Motifs</a>
      &nbsp;&nbsp;|&nbsp;&nbsp;
      <a class="jump" href="#version">Program information</a>
      &nbsp;&nbsp;|&nbsp;&nbsp;
      <a class="jump" href="#explanation">Explanation</a>
    </div>
  </xsl:template>

  <xsl:template name="overview">
    <a name="overview"/>
		<h2 class="mainh pad2">Discovered Motifs</h2>
    <div class="box">
      <h4>Motif Overview</h4>
      <div class="pad">
        <table>
          <col style="text-align: center" />
          <col style="text-align: right" />
          <col style="text-align: right" />
          <col/>
          <xsl:if test="/MEME/training_set/alphabet/@id='nucleotide'">
            <col/>
          </xsl:if>
          <tbody>
            <xsl:for-each select="/MEME/motifs/motif">
              <xsl:variable name="sane_name">
                <xsl:call-template name="sanatize-text">
                  <xsl:with-param name="text" select="@name"/>
                </xsl:call-template>
              </xsl:variable>
              <tr>
                <td><a href="#motif_{position()}">Motif <xsl:value-of select="@name"/></a></td>
                <td style="padding-left:20px">
                  <ul>
                    <li><xsl:value-of select="@e_value"/></li>
                    <li><xsl:value-of select="@sites"/> sites</li>
                  </ul>
                </td>
                <td style="padding-left:20px"></td>
                <td style="padding-left:20px;">
                  <a href="#motif_{position()}">
                    <img style="display:block; height:75px" 
                      src="logo{$sane_name}.png"
                      id="thumbnail_logo_{position()}" 
                      alt="Motif {@name} Logo"/>
                  </a>
                </td>
                <xsl:if test="/MEME/training_set/alphabet/@id='nucleotide'">
                  <td style="padding-left:20px;">
                    <a href="#motif_{position()}">
                      <img style="display:block; height:75px" 
                        src="logo_rc{$sane_name}.png"
                        id="thumbnail_logo_rc_{position()}" 
                        alt="Motif {@name} Logo"/>
                    </a>
                  </td>
                </xsl:if>
              </tr>
            </xsl:for-each>
          </tbody>
        </table>
      </div>
      <h4>Further Analysis</h4>
      <div class="pad">
        Submit all motifs to 
        <input name="do_MAST_all" value="MAST" type="submit"
          title="Search sequence databases for the best combined matches with these motifs using MAST." 
          onmouseover="javascript:showDesc(this, 'overview_action_desc')" 
          onmouseout="javascript:hideDesc('overview_action_desc')"/>&nbsp;
        <a href="#MAST_doc" title="Click for more information on MAST."
          class="help"><div class="help"/></a>
        &nbsp;&nbsp;&nbsp;&nbsp;
        <input name="do_FIMO_all" value="FIMO" type="submit"
          title="Search sequence databases for all matches with these motifs using FIMO." 
          onmouseover="javascript:showDesc(this, 'overview_action_desc')" 
          onmouseout="javascript:hideDesc('overview_action_desc')"/>&nbsp;
        <a href="#FIMO_doc" title="Click for more information on FIMO."
          class="help"><div class="help"/></a>
        <xsl:choose> 
          <xsl:when test="/MEME/training_set/alphabet/@id='nucleotide'">
            &nbsp;&nbsp;&nbsp;&nbsp;
            <input name="do_GOMO_all" value="GOMO" type="submit"
              title="Find Genome Ontology terms associated with upstream sequences matching these motifs using GOMO." 
              onmouseover="javascript:showDesc(this, 'overview_action_desc')" 
              onmouseout="javascript:hideDesc('overview_action_desc')"/>&nbsp;
            <a href="#GOMO_doc" title="Click for more information on GOMO."
              class="help"><div class="help"/></a>
          </xsl:when>
        </xsl:choose>
        &nbsp;&nbsp;&nbsp;&nbsp;
        <input name="do_BLOCKS_all" value="BLOCKS" type="submit"
          title="Submit these motifs to BLOCKS multiple alignment processor." 
          onclick="return warnExternal()"
          onmouseover="javascript:showDesc(this, 'overview_action_desc')" 
          onmouseout="javascript:hideDesc('overview_action_desc')"/>&nbsp;
        <a href="#BLOCKS_doc" title="Click for more information on BLOCKS."
          class="help"><div class="help"/></a>
        &nbsp;<span id="overview_action_desc">Mouse-over buttons for more information.</span>
      </div>
    </div>
  </xsl:template>


  <xsl:template name="motifs">
    <xsl:for-each select="/MEME/motifs/motif">
      <xsl:call-template name="motif"/>
    </xsl:for-each>
  </xsl:template>


  <xsl:template name="motif">
    <xsl:call-template name="motif-header"/>
    <div class="box">
      <xsl:call-template name="motif-logo"/>
      <xsl:call-template name="motif-regexp"/>
      <xsl:call-template name="motif-actions"/>
      <xsl:call-template name="motif-formats"/>
      <xsl:call-template name="motif-sites"/>
      <h4>Block Diagrams <a href="#diagrams_doc" class="help"><div class="help"/></a></h4>
      <xsl:call-template name="motif-block-diagrams"/>
      <xsl:call-template name="motif-time"/>
    </div>
  </xsl:template>

  <xsl:template name="motif-header">
    <xsl:variable name="prev_motif" select="preceding-sibling::motif[1]"/>
    <xsl:variable name="next_motif" select="following-sibling::motif[1]"/>

    <!-- There is no elegent way to remove this layout table -->
    <a name="motif_{position()}"/>
    <table width="100%" border="0" cellspacing="1" cellpadding="4" bgcolor="#FFFFFF">
      <tr>
        <td>
          <h2 class="mainh">Motif <xsl:value-of select="@name" /></h2>
        </td>
        <td align="right" valign="bottom">
          <xsl:if test="$prev_motif"><a href="#motif_{position()-1}">Previous</a>&nbsp;</xsl:if>
          <xsl:if test="$next_motif"><a href="#motif_{position()+1}">Next</a>&nbsp;</xsl:if>
          <a href="#top_buttons">Top</a>
        </td>
      </tr>
    </table>
  </xsl:template>


  <xsl:template name="motif-logo">
    <xsl:variable name="sane_name">
      <xsl:call-template name="sanatize-text">
        <xsl:with-param name="text" select="@name"/>
      </xsl:call-template>
    </xsl:variable>
    <table style="width:100%; background-color:#ddddff">
      <tr>
        <th class="majorth"><h4>Summary <a href="#summary_doc"><div class="help"/></a></h4></th>
        <th class="majorth"><h4>Sequence Logo <a href="#logo_doc"><div class="help"/></a></h4></th>
      </tr>
      <tr>
        <td style="width:15em; vertical-align:text-top;">
          <table style="width:100%; " cellspacing="0">
            <col/>
            <col style="text-align:left;"/>
            <tr>
              <th class="minorth">E-value</th>
              <td><xsl:value-of select="@e_value"/></td>
            </tr>
            <tr>
              <th class="minorth">Width</th>
              <td><xsl:value-of select="@width"/></td>
            </tr>
            <tr>
              <th class="minorth">Sites</th>
              <td><xsl:value-of select="@sites"/></td>
            </tr>
          </table>
          <a href="javascript:showHidden('summary_extra_{position()}')" id="summary_extra_{position()}_activator">show more</a>
          <div id="summary_extra_{position()}_data" style="display:none" >
            <table style="width:100%;" cellspacing="0">
              <tr><th colspan="2" class="minorth">Log Likelihood Ratio <a href="#llr_doc"><div class="help"/></a></th></tr>
              <tr>
                <td style="width:8em;">&nbsp;</td>
                <td><xsl:value-of select="@llr"/></td>
              </tr>
              <tr><th colspan="2" class="minorth">Information Content <a href="#ic_doc"><div class="help"/></a></th></tr>
              <tr>
                <td>&nbsp;</td>
                <td><xsl:value-of select="@ic"/>&nbsp;(bits)</td>
              </tr>
              <tr><th colspan="2" class="minorth">Relative Entropy <a href="#re_doc"><div class="help"/></a></th></tr>
              <tr>
                <td>&nbsp;</td>
                <td><xsl:value-of select="@re"/>&nbsp;(bits)</td>
              </tr>
            </table>
          </div>
          <a href="javascript:hideShown('summary_extra_{position()}')" id="summary_extra_{position()}_deactivator" style="display:none;">show less</a>
        </td>
        <td>

          <div class="tabMain">
            <img src="logo{$sane_name}.png" style="display:block;" id="logo_img_{position()}" height="140" width="{@width*20+40}"
            alt="PNG LOGOS require CONVERT from ImageMagick; see MEME installation guide" />
            <xsl:if test="/MEME/training_set/alphabet/@id='nucleotide'">
              <img src="logo_rc{$sane_name}.png" style="display:none;" id="logo_rc_img_{position()}" height="140" width="{@width*20+40}"
                alt="PNG LOGOS require CONVERT from ImageMagick; see MEME installation guide" />
            </xsl:if>
          </div>
          <div class="tabArea base">
            <a id="logo_tab_std_{position()}" href="javascript:clickLogoTab(false,{position()})" class="tab activeTab">Standard</a>
            <xsl:if test="/MEME/training_set/alphabet/@id='nucleotide'">
              <a id="logo_tab_rc_{position()}" href="javascript:clickLogoTab(true,{position()})" class="tab">Reverse Complement</a>
            </xsl:if>
          </div>
          <br />
          Download LOGO <a href="#download_doc" class="help"><div class="help"/></a>
          &nbsp;&nbsp;
          Orientation:
          <select name="logorc_{position()}">
            <option value="false">standard</option>
            <xsl:choose>
              <xsl:when test="/MEME/training_set/alphabet/@id='nucleotide'">
                <option value="true">reverse complement</option>
              </xsl:when>
              <xsl:otherwise>
                <option value="true" disabled="disabled">reverse complement</option>
              </xsl:otherwise>
            </xsl:choose>
          </select>
          &nbsp;&nbsp;
          SSC:
          <select name="logossc_{position()}">
            <option value="false">off</option>
            <option value="true">on</option>
          </select>
          &nbsp;&nbsp;
          Format:
          <select name="logoformat_{position()}">
            <option value="png">web (png)</option>
            <option value="eps">publication (eps)</option>
          </select>
          &nbsp;&nbsp;
          Width: 
          <input type="text" size="2" maxlength="5" value="{@width}" title="Width of logo in cm." name="logowidth_{position()}"/> cm 
          &nbsp;&nbsp;
          Height: 
          <input type="text" size="2" maxlength="5" value="7.5" title="Height of logo in cm." name="logoheight_{position()}"/> cm 
          &nbsp;&nbsp;
          <input type="submit" value="Download" title="Download a logo" name="do_LOGO_{position()}"/>
        </td>
      </tr>
    </table>
  </xsl:template>

  <xsl:template name="motif-regexp">
    <h4>Regular expression <a href="#regular_expression_doc" class="help"><div class="help"/></a></h4>
    <p class="pad"><xsl:value-of select="./regular_expression"/></p>
  </xsl:template>

  <xsl:template name="motif-actions">
    <h4>Further Analysis <a href="#further_analysis_doc" class="help"><div class="help"/></a></h4>
    <div class="pad">
      Submit this motif to
      <input type="submit" name="do_MAST_{position()}" value="MAST"
        title="Scan sequence databases for the best match in each sequence using MAST."
        onmouseover="javascript:showDesc(this, 'motif{position()}_action_desc')" 
        onmouseout="javascript:hideDesc('motif{position()}_action_desc')"/>&nbsp;
      <a href="#MAST_doc" title="Click for more information on MAST."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input type="submit" name="do_FIMO_{position()}" value="FIMO"
        title="Scan sequence databases for all matches with this motif using FIMO."
        onmouseover="javascript:showDesc(this, 'motif{position()}_action_desc')" 
        onmouseout="javascript:hideDesc('motif{position()}_action_desc')"/>&nbsp;
      <a href="#FIMO_doc" title="Click for more information on FIMO." 
        class="help"><div class="help"/></a>
      <xsl:choose> 
        <xsl:when test="/MEME/training_set/alphabet/@id='nucleotide'">
          &nbsp;&nbsp;&nbsp;&nbsp;
          <input type="submit" name="do_TOMTOM_{position()}" value="TOMTOM"
            title="Compare to known motifs in motif databases using TOMTOM."
            onmouseover="javascript:showDesc(this, 'motif{position()}_action_desc')" 
            onmouseout="javascript:hideDesc('motif{position()}_action_desc')"/>&nbsp;
          <a href="#TOMTOM_doc" title="Click for more information on TOMTOM."
            class="help"><div class="help"/></a>
          &nbsp;&nbsp;&nbsp;&nbsp;
          <input type="submit" name="do_GOMO_{position()}" value="GOMO"
            title="Find Genome Ontology terms associated with upstream regions matching this motif using GOMO."
            onmouseover="javascript:showDesc(this, 'motif{position()}_action_desc')" 
            onmouseout="javascript:hideDesc('motif{position()}_action_desc')"/>&nbsp;
          <a href="#GOMO_doc" title="Click for more information on GOMO."
            class="help"><div class="help"/></a>
        </xsl:when>
      </xsl:choose>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input type="submit" name="do_BLOCKS_{position()}" value="BLOCKS"
        title="Submit this motif to BLOCKS multiple alignment processor."
        onclick="return warnExternal()"
        onmouseover="javascript:showDesc(this, 'motif{position()}_action_desc')" 
        onmouseout="javascript:hideDesc('motif{position()}_action_desc')"/>&nbsp;
      <a href="#BLOCKS_doc" title="Click for more information on BLOCKS."
        class="help"><div class="help"/></a>
      &nbsp;<span id="motif{position()}_action_desc">Mouse-over buttons for more information.</span>
    </div>
  </xsl:template>
  
  <xsl:template name="motif-formats">
    <h4>Data Formats <a href="#formats_doc" class="help"><div class="help"/></a></h4>
    <div class="pad">
      View the motif in 
      <input name="format_display_{position()}" type="radio" onclick="javascript:showEmbededFormat({position()}, 'pspm')" />PSPM Format&nbsp;
      <a href="#format_PSPM_doc" title="Click for more information on PSPMs."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input name="format_display_{position()}" type="radio" onclick="javascript:showEmbededFormat({position()}, 'pssm')" />PSSM Format&nbsp;
      <a href="#format_PSSM_doc" title="Click for more information on PSSMs."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input name="format_display_{position()}" type="radio" onclick="javascript:showEmbededFormat({position()}, 'blocks')" />BLOCKS Format&nbsp;
      <a href="#format_BLOCKS_doc" title="Click for more information on BLOCKS format."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input name="format_display_{position()}" type="radio" onclick="javascript:showFasta({position()})" />FASTA Format&nbsp;
      <a href="#format_FASTA_doc" title="Click for more information on FASTA format."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input name="format_display_{position()}" type="radio" onclick="javascript:showRaw({position()})" />Raw Format&nbsp;
      <a href="#format_raw_doc" title="Click for more information on raw format."
        class="help"><div class="help"/></a>
      &nbsp;&nbsp;&nbsp;&nbsp;
      or
      <input name="format_display_{position()}" type="radio" onclick="javascript:hideFormat({position()})" checked="checked"/>Hide<br />
      <textarea id="format_display_area_{position()}" rows="20" style="display:none; width:100%;" readonly="readonly"></textarea>
      <noscript>This feature requires javascript.</noscript>
    </div>
  </xsl:template>

  <xsl:template name="motif-sites">
    <h4>Sites <a href="#sites_doc" class="help"><div class="help"/></a></h4>
    <div class="pad">
      <p>Click on any row to highlight sequence in all motifs.</p>
      <table id="tbl_sites_{position()}" cellpadding="0.5cm">
        <col style=""/>
        <xsl:if test="/MEME/model/strands='both'">
          <col style=""/>
        </xsl:if>
        <col style="" />
        <col style="" />
        <col style="" />
        <col style=""/>
        <col style="" />
        <thead>
          <tr>
            <th>Name <a name="sites1"></a></th>
            <xsl:if test="/MEME/model/strands='both'">
              <th>Strand</th>
            </xsl:if>
            <th>Start</th>
            <th><i>p</i>-value</th>
            <th colspan="3">Sites <a href="#sites_doc" class="help"><div class="help"/></a></th>
          </tr>
        </thead>
        <tbody>
          <xsl:for-each select="contributing_sites/contributing_site">
            <xsl:sort select="@pvalue" data-type="number"/>
            <xsl:variable name="sequence_id" select="@sequence_id" />
            <tr>
              <td class="strand_name">
                <xsl:value-of select="/MEME/training_set/sequence[@id=$sequence_id]/@name"/>
              </td>
              <xsl:if test="/MEME/model/strands='both'">
                <td class="strand_side"><xsl:if test="@strand='plus'">+</xsl:if><xsl:if test="@strand='minus'">-</xsl:if></td>
              </xsl:if>
              <td class="strand_start"><xsl:value-of select="@position + 1"/></td>
              <td class="strand_pvalue"><xsl:value-of select="@pvalue"/></td>
              <td class="strand_lflank"><xsl:value-of select="left_flank"/></td>
              <td class="strand_seq">
                <xsl:apply-templates select="site"/>
              </td>
              <td class="strand_rflank"><xsl:value-of select="right_flank"/></td>
            </tr>
          </xsl:for-each>
        </tbody>
      </table>
    </div>

  </xsl:template>

  <xsl:template name="motif-block-diagrams">
    <xsl:param name="all_sites" select="contributing_sites/contributing_site" />
    <xsl:variable name="motif_index" select="position()"/>
    <xsl:variable name="max_seq_len_options">
      <xsl:for-each select="/MEME/training_set/sequence">
        <xsl:sort data-type="number" order="descending" select="@length"/>
        <xsl:variable name="seqid" select="@id"/>
        <xsl:if test="count($all_sites[@sequence_id = $seqid]) != 0">
          <xsl:value-of select="@length" /><xsl:text> </xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="max_seq_len" select="substring-before($max_seq_len_options, ' ')"/>
    <xsl:variable name="max_log_pvalue">
      <xsl:call-template name="ln-approx">
        <xsl:with-param name="base" select="0.0000000001"/>
      </xsl:call-template>
    </xsl:variable>
    <div class="pad">
      <p>
        The height of the motif "block" is proportional to -log(p-value), truncated at the height for a motif with a p-value of 1e-10.<br />
        Click on any row to highlight sequence in all motifs. Mouse over the center of the motif blocks to see more information.
      </p>
      <table id="tbl_blocks_{position()}" style="width:100%;" border="0">
        <col style="width:10em;" />
        <col style="width:5em;" />
        <col />
        <thead>
          <tr>
            <th>Name</th>
            <th>Lowest <i>p</i>-value</th>
            <th>Motif Location</th>
          </tr>
        </thead>
        <tbody>
          <xsl:for-each select="/MEME/training_set/sequence">
            <xsl:variable name="sequence" select="@id" />
            <xsl:variable name="seq_fract" select="(@length div $max_seq_len) * 100" />
            <xsl:variable name="sites" select="$all_sites[@sequence_id = $sequence]" />
            <xsl:if test="$sites">
            <tr>
              <td><xsl:value-of select="@name"/></td>
              <td>
                <xsl:for-each select="$sites">
                  <xsl:sort data-type="number" order="ascending" select="@pvalue"/>
                  <xsl:if test="position() = 1">
                    <xsl:value-of select="@pvalue"/>
                  </xsl:if>
                </xsl:for-each>
              </td>
              <td class="block_td">
                <div class="block_container" >
                  <xsl:if test="/MEME/model/strands='both'">
                    <div class="block_plus_sym" >+</div>
                    <div class="block_minus_sym" >-</div>
                  </xsl:if>
                  <div class="block_rule" style="width:{$seq_fract}%"></div>
                  <xsl:for-each select="$sites">
                    <xsl:sort data-type="number" order="ascending" select="@position"/>
                    <xsl:call-template name="site">
                      <xsl:with-param name="diagram_len" select="$max_seq_len"/>
                      <xsl:with-param name="best_log_pvalue" select="$max_log_pvalue"/>
                     <!-- meme positions are zero indexed whereas mast positions are one indexed, this resolves the conflict -->
                      <xsl:with-param name="position" select="@position + 1"/>
                      <xsl:with-param name="width" select="../../@width"/>
                      <xsl:with-param name="index" select="$motif_index"/>
                      <xsl:with-param name="strand" select="@strand"/>
                      <xsl:with-param name="pvalue" select="@pvalue"/>
                      <xsl:with-param name="name" select="../../@name"/>
                    </xsl:call-template>
                  </xsl:for-each>
                </div>
              </td>
            </tr>
          </xsl:if>
          </xsl:for-each>
          <tr>
            <td colspan="2">&nbsp;</td>
            <td class="block_td" style="color: blue;">
              <div class="block_container" >
                <xsl:call-template name="ruler">
                  <xsl:with-param name="max" select="$max_seq_len" />
                </xsl:call-template>
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </xsl:template>

  <xsl:template name="block-diagrams-legend">
    <div style="text-align:right">
      <xsl:for-each select="/MEME/motifs/motif">
        <xsl:call-template name="legend_motif">
          <xsl:with-param name="name" select="@name"/>
          <xsl:with-param name="index" select="position()"/>
        </xsl:call-template>
      </xsl:for-each>
    </div>
  </xsl:template>

  <xsl:template name="combined-block-diagrams">
    <xsl:variable name="max_seq_len_options">
      <xsl:for-each select="/MEME/training_set/sequence">
        <xsl:sort data-type="number" order="descending" select="@length"/>
        <xsl:variable name="seqid" select="@id"/>
        <xsl:if test="count(/MEME/scanned_sites_summary/scanned_sites[@sequence_id = $seqid]) != 0">
          <xsl:value-of select="@length" /><xsl:text> </xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="max_seq_len" select="substring-before($max_seq_len_options, ' ')"/>
    <xsl:variable name="max_log_pvalue">
      <xsl:call-template name="ln-approx">
        <xsl:with-param name="base" select="0.0000000001"/>
      </xsl:call-template>
    </xsl:variable>
    <div class="pad">
      <p>
        Non-overlapping sites with a <i>p</i>-value better than<xsl:text> </xsl:text>
        <xsl:value-of select="/MEME/scanned_sites_summary/@p_thresh"/>.<br />
        The height of the motif "block" is proportional to -log(p-value), truncated at the height for a motif with a p-value of 1e-10.<br />
        Click on any row to highlight sequence in all motifs. The motif blocks have tool tips with more information.
      </p>
      <xsl:call-template name="block-diagrams-legend" />
      <table id="tbl_blocks_combined" style="width:100%;" border="0">
        <col style="width:10em;" />
        <col style="width:5em;" />
        <col />
        <thead>
          <tr>
            <th>Name</th>
            <th>Combined <i>p</i>-value</th>
            <th>Motif Location</th>
          </tr>
        </thead>
        <tbody>
          <xsl:for-each select="/MEME/training_set/sequence">
            <xsl:variable name="sequence" select="@id" />
            <xsl:variable name="seq_fract" select="(@length div $max_seq_len) * 100" />
            <xsl:variable name="seq_sites" select="/MEME/scanned_sites_summary/scanned_sites[@sequence_id = $sequence]" />
            <xsl:variable name="sites" select="$seq_sites/scanned_site" />
            <xsl:if test="$sites">
            <tr>
              <td><xsl:value-of select="@name"/></td>
              <td><xsl:value-of select="$seq_sites/@pvalue"/></td>
              <td class="block_td">
                <div class="block_container" >
                  <div class="block_rule" style="width:{$seq_fract}%"></div>
                  <xsl:if test="/MEME/model/strands='both'">
                    <div class="block_plus_sym" >+</div>
                    <div class="block_minus_sym" >-</div>
                  </xsl:if>
                  <xsl:for-each select="$sites">
                    <xsl:sort data-type="number" order="ascending" select="@position"/>
                    <xsl:variable name="site_motif_id" select="@motif_id"/>
                    <xsl:variable name="site_motif" select="/MEME/motifs/motif[@id = $site_motif_id]"/>
                    <xsl:call-template name="site">
                      <xsl:with-param name="diagram_len" select="$max_seq_len"/>
                      <xsl:with-param name="best_log_pvalue" select="$max_log_pvalue"/>
                     <!-- meme positions are zero indexed whereas mast positions are one indexed, this resolves the conflict -->
                      <xsl:with-param name="position" select="@position + 1"/>
                      <xsl:with-param name="width" select="$site_motif/@width"/>
                      <xsl:with-param name="index" select="count($site_motif/preceding-sibling::*) + 1"/>
                      <xsl:with-param name="strand" select="@strand"/>
                      <xsl:with-param name="pvalue" select="@pvalue"/>
                      <xsl:with-param name="name" select="$site_motif/@name"/>
                    </xsl:call-template>
                  </xsl:for-each>
                </div>
              </td>
            </tr>
          </xsl:if>
          </xsl:for-each>
          <tr>
            <td colspan="2">&nbsp;</td>
            <td class="block_td" style="color: blue;">
              <div class="block_container" >
                <xsl:call-template name="ruler">
                  <xsl:with-param name="max" select="$max_seq_len" />
                </xsl:call-template>
              </div>
            </td>
          </tr>
        </tbody>
      </table>
      <xsl:call-template name="block-diagrams-legend" />
    </div>
  </xsl:template>

  <xsl:template name="motif-time">
    <p>Time <xsl:value-of select="round(@elapsed_time * 10) div 10"/> secs.</p> 
  </xsl:template>

  <xsl:template name="combined">
    <xsl:if test="count(/MEME/motifs/motif) &gt; 1">
      <!-- There is no elegent way to remove this layout table -->
      <a name="combined"/>
      <table width="100%" border="0" cellspacing="1" cellpadding="4" bgcolor="#FFFFFF">
        <tr>
          <td>
            <h2 class="mainh">All Motifs</h2>
          </td>
          <td align="right" valign="bottom">
            <a href="#top_buttons">Top</a>
          </td>
        </tr>
      </table>
      <div class="box">
        <h4>Combined Block Diagrams <a href="#combined_doc" class="help"><div class="help"/></a></h4>
        <xsl:call-template name="combined-block-diagrams"/>
      </div>
  </xsl:if>
  </xsl:template>

  <xsl:template name="info">
    <xsl:variable name="alphabet">
      <xsl:call-template name="alphabet"/>
    </xsl:variable>
    <div class="bar">
      <div style="text-align:right;"><a href="#top_buttons">Top</a></div>
      <div class="subsection">
        <a name="version"/>
        <h5>MEME version</h5>
        <xsl:value-of select="@version"/> (Release date: <xsl:value-of select="@release"/>)
      </div>
      <div class="subsection">
        <a name="reference"/>
        <h5>Reference</h5>
        <span class="citation">
          Timothy L. Bailey and Charles Elkan,
          &quot;Fitting a mixture model by expectation maximization to discover motifs in biopolymers&quot;,
          <em>Proceedings of the Second International Conference on Intelligent Systems
          for Molecular Biology</em>, pp. 28-36, AAAI Press, Menlo Park, California, 1994.
        </span>
      </div>
      <a name="sequences" />
      <a href="javascript:showHidden('trainingseq')" id="trainingseq_activator">show training set...</a>
      <div class="subsection" id="trainingseq_data" style="display:none;">
        <h5>Training set:</h5>
        Datafile = <xsl:value-of select="/MEME/training_set/@datafile"/><br/>
        Alphabet = <xsl:value-of select="$alphabet" /><br />
        <xsl:call-template name="trainingset"/>
      </div>
      <a href="javascript:hideShown('trainingseq')" style="display:none;" id="trainingseq_deactivator">hide training set...</a>
      <div class="subsection">
        <a name="command" />
        <h5>Command line summary</h5>
        <textarea rows="1" style="width:100%;" readonly="readonly">
          <xsl:value-of select="/MEME/model/command_line"/>
        </textarea>
        <br />
        Letter frequencies in dataset<br />
        <div style="margin-left:25px;"><xsl:call-template name="letter_freq"/></div><br />
        Background letter frequencies (from <xsl:value-of select="/MEME/model/background_frequencies/@source"/>):<br/>
        <div style="margin-left:25px;"><xsl:call-template name="bg_freq"/></div><br />
      </div>
      <div class="subsection">
        <a name="stopped" />
        <h5>Stopping Reason</h5>
        <xsl:value-of select="/MEME/model/reason_for_stopping" /> Program ran on <i><xsl:value-of select="/MEME/model/host"/></i>.
      </div>
      <a href="javascript:showHidden('model')" id="model_activator">show model parameters...</a>
      <div class="subsection" id="model_data" style="display:none;">
        <h5>Model parameters</h5>
        <xsl:text>&newline;</xsl:text>
        <textarea style="width:100%;" rows="{count(/MEME/model/*) - 2}" readonly="readonly">
          <xsl:variable name="spaces" select="'                    '"/>
          <xsl:text>&newline;</xsl:text>
          <xsl:for-each select="/MEME/model/*[name(.) != 'background_frequencies' and name(.) != 'command_line']">
            <xsl:variable name="pad" select="substring($spaces,string-length(name(.)))"/>
            <xsl:value-of select="name(.)"/>
            <xsl:value-of select="$pad"/>
            <xsl:text> = </xsl:text>
            <xsl:value-of select="normalize-space(.)"/>
            <xsl:text>&newline;</xsl:text>
          </xsl:for-each>
        </textarea>
      </div>
      <a href="javascript:hideShown('model')" style="display:none;" id="model_deactivator">hide model parameters...</a>
    </div>
  </xsl:template>

  <!-- prints the training set in the specified number of columns -->
  <xsl:template name="trainingset">
    <xsl:param name="cols" select="3" />
    <table>
      <xsl:call-template name="ts1">
        <xsl:with-param name="times" select="$cols"/>
      </xsl:call-template>
      <tr style="vertical-align:top;">
      <xsl:call-template name="ts2">
        <xsl:with-param name="count" select="$cols"/>
      </xsl:call-template>
      </tr>
    </table>

  </xsl:template>

  <!-- training set helper function, makes col tags -->
  <xsl:template name="ts1">
    <xsl:param name="times"/>
    <xsl:if test="$times &gt; 0">
      <col/>
      <xsl:call-template name="ts1">
        <xsl:with-param name="times" select="$times - 1"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!-- training set helper function 2 -->
  <xsl:template name="ts2">
    <xsl:param name="index" select="0"/>
    <xsl:param name="count"/>
    <xsl:if test="$index &lt; $count">
      <td>
        <table class="trainingset">
          <col />
          <col />
          <col />
          <tr>
            <th>Sequence name</th>
            <th>Weighting</th>
            <th>Length</th>
          </tr>
          <xsl:for-each select="/MEME/training_set/sequence[(position() - 1) mod $count = $index]">
            <tr>
              <td><xsl:value-of select="@name"/></td>
              <td><xsl:value-of select="@weight"/></td>
              <td><xsl:value-of select="@length"/></td>
            </tr>
          </xsl:for-each>
        </table>
      </td>
      <xsl:call-template name="ts2">
        <xsl:with-param name="index" select="$index + 1"/>
        <xsl:with-param name="count" select="$count"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!-- concatenates the symbols of the alphabet into a single string. -->
  <xsl:template name="alphabet">
    <xsl:for-each select="/MEME/training_set/alphabet/letter">
      <xsl:value-of select="@symbol"/>
    </xsl:for-each>
  </xsl:template>

  <!-- prints the HTML for color-coded alphabet symbols for a motif site. -->
  <xsl:template match="site">
    <xsl:for-each select="./letter_ref">
      <xsl:call-template name="letter_ref"/>
    </xsl:for-each>
  </xsl:template>

  <xsl:template name="letter_ref">
    <!-- This template prints the HTML for a color-coded symbol alphabet symbold. -->
    <xsl:choose> 
      <xsl:when test="/MEME/training_set/alphabet/@id='amino-acid'">
        <!-- Amino Acid Alphabet -->
        <xsl:call-template name="amino_acid">
          <xsl:with-param name="residue"><xsl:value-of select="id(@letter_id)/@symbol"/></xsl:with-param>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <!-- DNA Alphabet -->
        <xsl:call-template name="nucleotide">
          <xsl:with-param name="residue"><xsl:value-of select="id(@letter_id)/@symbol"/></xsl:with-param>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template name="amino_acid">
    <!-- This template prints a color coded amino acid symbol. -->
    <xsl:param name="residue"/>
    <xsl:variable name="color">
      <xsl:choose> 
        <xsl:when test="$residue='A'">blue</xsl:when>
        <xsl:when test="$residue='C'">blue</xsl:when>
        <xsl:when test="$residue='F'">blue</xsl:when>
        <xsl:when test="$residue='I'">blue</xsl:when>
        <xsl:when test="$residue='L'">blue</xsl:when>
        <xsl:when test="$residue='V'">blue</xsl:when>
        <xsl:when test="$residue='W'">blue</xsl:when>
        <xsl:when test="$residue='M'">blue</xsl:when>
        <xsl:when test="$residue='N'">green</xsl:when>
        <xsl:when test="$residue='Q'">green</xsl:when>
        <xsl:when test="$residue='S'">green</xsl:when>
        <xsl:when test="$residue='T'">green</xsl:when>
        <xsl:when test="$residue='D'">magenta</xsl:when>
        <xsl:when test="$residue='E'">magenta</xsl:when>
        <xsl:when test="$residue='K'">red</xsl:when>
        <xsl:when test="$residue='R'">red</xsl:when>
        <xsl:when test="$residue='H'">pink</xsl:when>
        <xsl:when test="$residue='G'">orange</xsl:when>
        <xsl:when test="$residue='P'">yellow</xsl:when>
        <xsl:when test="$residue='Y'">turquoise</xsl:when>
        <xsl:otherwise>black</xsl:otherwise>
      </xsl:choose> 
    </xsl:variable>
    <span style="color:{$color};"><xsl:value-of select="$residue"/></span>
  </xsl:template>

  <xsl:template name="nucleotide">
    <!-- This template prints a color coded nucleotide symbol.-->
    <xsl:param name="residue"/>
    <xsl:variable name="color">
      <xsl:choose> 
        <xsl:when test="$residue='A'">red</xsl:when>
        <xsl:when test="$residue='C'">blue</xsl:when>
        <xsl:when test="$residue='G'">orange</xsl:when>
        <xsl:when test="$residue='T'">green</xsl:when>
        <xsl:otherwise>black</xsl:otherwise>
      </xsl:choose> 
    </xsl:variable>
    <span style="color:{$color}"><xsl:value-of select="$residue"/></span>
  </xsl:template>

  <xsl:template name="bg_freq">
    <xsl:for-each select="/MEME/model/background_frequencies/alphabet_array/value">
      <xsl:value-of select="id(@letter_id)/@symbol"/><xsl:text>:&nbsp;</xsl:text><xsl:value-of select="format-number(., '0.000')"/>
      <xsl:if test="position() != last()"><xsl:text>&nbsp;&nbsp;&nbsp;</xsl:text></xsl:if>
    </xsl:for-each>
  </xsl:template>

  <xsl:template name="letter_freq">
    <xsl:for-each select="/MEME/training_set/letter_frequencies/alphabet_array/value">
      <xsl:value-of select="id(@letter_id)/@symbol"/><xsl:text>:&nbsp;</xsl:text><xsl:value-of select="format-number(., '0.000')"/>
      <xsl:if test="position() != last()"><xsl:text>&nbsp;&nbsp;&nbsp;</xsl:text></xsl:if>
    </xsl:for-each>
  </xsl:template>

  <xsl:template name="explanation">
    <!-- This template prints the boilerplate HTML describing the MEME output document -->
    <span class="explain">
      <a name="explanation"/>
      <table width="100%" border="0" cellspacing="1" cellpadding="4" bgcolor="#FFFFFF">
        <tr>
          <td>
            <h2 class="mainh">Explanation of MEME Results</h2>
          </td>
          <td align="right" valign="bottom">
            <a href="#top_buttons">Top</a>
          </td>
        </tr>
      </table>
      <div class="box">
        <h4>The MEME results consist of</h4>
        <ul>
          <li>The <a href="#overview"><b>overview</b></a> of all discovered motifs.</li>
          <li>Information on each of the <a href="#motifs"><b>motifs</b></a> MEME discovered, including:
            <ol>
              <li>
                A <a href="#summary_doc"><b>summary table</b></a> showing the width, number of contributing sites, log likelihood ratio, 
                statistical significance, information content and relative entropy of the motif.
              </li>
              <li>A <a href="#logo_doc"><b>sequence LOGO</b></a>.</li>
              <li>Downloadable <a href="#download"><b>LOGO files</b></a> suitable for publication.</li>
              <li>A <a href="#regular_expression_doc"><b>regular expression</b></a> describing the motif.</li>
              <li>Some <a href="#further_analysis_doc"><b>further analysis</b></a> that can be performed on the motif.</li>
              <li>A list of <a href="#formats_doc"><b>data formats</b></a> describing the motif.</li>
              <li>The <a href="#sites_doc"><b>contributing sites</b></a> of the motif sorted by <i>p</i>-value and aligned with each other.</li>
              <li>
                The <a href="#diagrams_doc"><b>block diagrams</b></a> of the contributing sites of the motif within each sequence in the training set.
              </li>
            </ol>
          </li>
          <li>A <a href="#combined"><b>combined block diagram</b></a> showing an optimized (non-overlapping) 
             tiling of all of the motifs onto each of the sequences in the training set.
          </li>
          <li>The <a href="#version"><b>version</b></a> of MEME and the date it was released.</li>
          <li>The <a href="#reference"><b>reference</b></a> to cite if you use MEME in your research.</li>
          <li>
            A description of the <a href="#sequences"><b>sequences</b></a> you submitted (the "training set") showing the name,
            "weight" and length of each sequence.
          </li>
          <li>The <a href="#command"><b>command line summary</b></a> detailing the parameters with which you ran MEME.</li>
          <li>The reason why MEME <a href="#stopped"><b>stopped</b></a> and the name of the CPU on which it ran.</li>
          <li>This <b>explanation</b> of how to interpret MEME results.</li>
        </ul>
        <a name="motifs"/>
        <h4>Motifs</h4>
        <p>
          For each motif that it discovers in the training set,
          MEME prints the following information:
        </p>
        <a name="summary_doc"/>
        <h5>Summary Table</h5>
        <div class="doc">
          <p>
            This summary table gives the main attributes of the motif.
          </p>
          <dl>
            <dt><i>E</i>-value</dt>
            <dd>
              The statistical significance of the motif. MEME usually finds the most statistically significant (low <i>E</i>-value) motifs first.
              The <i>E</i>-value of a motif is based on its log likelihood ratio, width, sites, the background letter frequencies (given in the 
              <a href="#command">command line summary</a>), and the size of the training set. The <i>E</i>-value is an estimate of the expected 
              number of motifs with the given log likelihood ratio (or higher), and with the same width and site count, that one would find in 
              a similarly sized set of random sequences. (In random sequences each position is independent with letters chosen according to 
              the background letter frequencies.)
            </dd>
            <dt>Width</dt><dd>The width of the motif. Each motif describes a pattern of a fixed with as no gaps are allowed in MEME motifs.</dd>
            <dt>Sites</dt><dd>The number of sites contributing to the construction of the motif.</dd>
            <dt><a name="llr_doc"/>Log Likelihood Ratio</dt>
            <dd>
              The log likelihood ratio of the motif.The log likelihood ratio is the logarithm of the ratio of the probability of the occurrences 
              of the motif given the motif model (likelihood given the motif) versus their probability given the background model 
              (likelihood given the null model). (Normally the background model is a 0-order Markov model using the background letter 
              frequencies, but higher order Markov models may be specified via the <b>-bfile</b> option to MEME.)
            </dd>
            <dt><a name="ic_doc"/>Information Content</dt>
            <dd>
              The information content of the motif in bits. It is equal to the sum of the <b>uncorrected</b> information content, <tt>R()</tt>, 
              in the columns of the <a href="#logo_doc">LOGO</a>. This is equal relative entropy of the motif relative to a uniform background frequency 
              model.
            </dd>
            <dt><a name="re_doc"/>Relative Entropy</dt>
            <dd>
              The relative entropy of the motif, computed in bits and relative to the background letter frequencies given in the 
              <a href="#command">command line summary</a>. It is equal to the log-likelihood ratio (llr) divided by the 
              number of contributing sites of the motif times <tt>1/ln(2)</tt>,<br />
              <br />
              <tt>re = llr / (sites * ln(2))</tt>.
            </dd>
          </dl>
        </div>

        <a name="logo_doc"/>
        <h5 class="doc">Sequence LOGO</h5>
        <div class="doc">
          <p>
            MEME motifs are represented by position-specific probability matrices 
            that specify the probability of each possible letter appearing at each
            possible position in an occurrence of the motif.  These are displayed
            as "sequence LOGOS", containing stacks of letters at each position
            in the motif.  The total height of the stack is the "information
            content" of that position in the motif in bits.  The height of the 
            individual letters in a stack is the probability of the letter at that 
            position multiplied by the total information content of the stack.
          </p>
          <p>
            Note: The MEME LOGO differs from those produced by the 
            <a href="http://weblogo.berkeley.edu">Weblogo</a> program
            because a <b>small-sample correction is NOT applied</b>.  
            However, MEME LOGOs in PNG and encapsulated postscript (EPS) formats 
            <b>with small-sample correction (SSC)</b> are available by clicking 
            on the download button with "SSC" set to "on" under 
            <a href="#download_doc">Download LOGO</a>.
            The MEME LOGOs without small sample correction are similarly available.
            Error bars are included in the LOGOs with small-sample correction.
          </p>
          <p>
            Modern web browsers supporting the canvas element and it's text manipulation functions as described in the 
            html 5 standard, can render the sequence LOGOs without needing the images. The browsers which work with this
            feature are:
          </p>
            <ul>
              <li>Firefox 3.5 and above</li>
              <li>Safari 4 and above</li>
              <li>Google Chrome 4 and above</li>
            </ul>
          <p>
            Unfortunately Internet Explorer 8 does not support any html 5 features.          
          </p>
          <p>          
            The information content of each motif position is computed as described in the paper by Schneider and Stephens, 
            "Sequence Logos: A New Way to Display Consensus Sequences" but 
            <b>the small-sample correction, <tt>e(n)</tt>, is set to zero for the LOGO displayed in the MEME output.</b>
            The corrected information content of position <tt>i</tt> is given by
          </p>
          <pre>
            R(i) for amino acids   = log2(20) - (H(i) + e(n))   (1a) 
            R(i) for nucleic acids =    2    - (H(i) + e(n))    (1b)
          </pre>
          <p>where H(i) is the entropy of position <tt>i</tt>,</p>
          <pre>
            H(l) = - (Sum f(a,i) * log2[ f(a,i) ]).             (2)
          </pre>
          <p>
            Here, f(a,i) is the frequency of base or amino acid <tt>a</tt> at position <tt>i</tt>, and <tt>e(n)</tt> is the small-sample correction 
            for an alignment of <tt>n</tt> letters. The height of letter <tt>a</tt> in column <tt>i</tt> is given by
          </p> 
          <pre>
            height = f(a,i) * R(i)                              (3)
          </pre>
          <p>The approximation for the small-sample correction, <tt>e(n)</tt>, is given by:</p>
          <pre>
            e(n) = (s-1) / (2 * ln(2) * n),                     (4)
          </pre>
          <p>where <tt>s</tt> is 4 for nucleotides, 20 for amino acids, and <tt>n</tt> is the number of sequences in the alignment.</p>
          <p>
            The letters in the logos are colored as follows.<br />
            For DNA sequences, the letter categories contain one letter each.
          </p>
          <table border="1">
            <thead>
              <tr><th>NUCLEIC ACIDS</th><th>COLOR</th></tr>
            </thead>
            <tbody>
              <tr><td>A</td> <td style="color:red;">RED</td>        </tr>
              <tr><td>C</td> <td style="color:blue;">BLUE</td>      </tr>
              <tr><td>G</td> <td style="color:orange;">ORANGE</td>  </tr>
              <tr><td>T</td> <td style="color:green;">GREEN</td>    </tr>
            </tbody>
          </table>
          <p>For proteins, the categories are based on the biochemical properties of the various amino acids.</p>
          <table border="1">
            <thead>
              <tr><th>AMINO ACIDS</th>              <th>COLOR</th>                          <th>PROPERTIES</th>                                 </tr>
            </thead>
            <tbody>
              <tr><td>A, C, F, I, L, V, W and M</td><td style="color:blue;">BLUE</td>       <td>Most hydrophobic[Kyte and Doolittle, 1982]</td> </tr>
              <tr><td>NQST</td>                     <td style="color:green;">GREEN</td>     <td>Polar, non-charged, non-aliphatic residues</td> </tr>
              <tr><td>DE</td>                       <td style="color:magenta;">MAGENTA</td> <td>Acidic</td>                                     </tr>
              <tr><td>KR</td>                       <td style="color:red;">RED</td>         <td>Positively charged</td>                         </tr>
              <tr><td>H</td>                        <td style="color:pink;">PINK</td>       <td>&nbsp;</td>                                     </tr>
              <tr><td>G</td>                        <td style="color:orange;">ORANGE</td>   <td>&nbsp;</td>                                     </tr>
              <tr><td>P</td>                        <td style="color:yellow;">YELLOW</td>   <td>&nbsp;</td>                                     </tr>
              <tr><td>Y</td>                        <td style="color:turquoise;">TURQUOISE</td> <td>&nbsp;</td>                                 </tr>
            </tbody>
          </table>
          <p>
            J. Kyte and R. Doolittle, 1982. "A Simple Method for Displaying the Hydropathic Character of a Protein",
            J. Mol Biol. 157, 105-132.
          </p>
          <p>
            <b>Note:</b> the "text" output format of MEME preserves the historical MEME format where LOGOS are replaced by a simplified probability 
            matrix, a relative entropy plot, and a multi-level consensus sequence.
          </p>
        </div>

        <a name="download_doc"/>
        <h5 class="doc">Download LOGO</h5>
        <div class="doc">
          <p>
            Logos can be generated on the fly by the meme webservice and you may specify a number of options to customize them to your needs.
            The options are:
            <dl>
              <dt>Orientation</dt>
              <dd>Only valid for nucleotide motifs. Generate the standard view or the reverse complemented view of the motif.</dd>
              <dt>SSC</dt>
              <dd>Use small sample correction and show errorbars on the image. 
                Small sample correction is used by the <a href="http://weblogo.berkeley.edu">Weblogo</a> program.</dd>
              <dt>Format</dt>
              <dd>The format of the generated image. 
                If the image is to be used on the web then png is recommend.
                If the image is to be published then eps is recommended.
              </dd>
              <dt>Width</dt>
              <dd>The width of the generated image in centimetres.</dd>
              <dt>Height</dt>
              <dd>The height of the generated image in centimetres.</dd>
            </dl>
          </p>
        </div>

        <a name="regular_expression_doc"/>
        <h5>Regular Expression</h5>
        <div class="doc">
          <p>
            This is a regular expression (RE) describing the motif.  In each column, all letters with observed frequencies greater than 0.2 are shown;
            less-frequent letters are not included in the RE. MEME regular expressions are interpreted as follows: single letters match that letter; 
            groups of letters in square brackets match any of the letters in the group. Regular expressions can be used for searching for the motif 
            in sequences (using, for example, <a href="http://nar.oxfordjournals.org/cgi/content/full/33/suppl_2/W262">PatMatch</a>) but the search 
            accuracy will usually be better with the PSSM (using, for example <a href="http://meme.nbcr.net/meme/mast-intro.html">MAST</a>.)
          </p>
        </div>

        <a name="further_analysis_doc" />
        <h5>Further Analysis</h5>
        <div class="doc">
          <p>Either as a group or individually the motifs have a number of options for further analysis.</p>
          <dl>
            <dt><a name="MAST_doc"/>MAST</dt>
            <dd>
              Finds the best matching positions for a set of motifs in each sequence provided to it, ranked by the combined score of each sequence.
              For more information about MAST please read the <a href="http://meme.nbcr.net/meme/mast-intro.html">introduction</a>.
            </dd>
            <dt><a name="FIMO_doc"/>FIMO</dt>
            <dd>
              Finds all matches for a motif.
              For more information about FIMO please read the <a href="http://meme.nbcr.net/meme/fimo-intro.html">introduction</a>.
            </dd>
            <dt><a name="TOMTOM_doc"/>TOMTOM</dt>
            <dd>
              Compares a single motif to a database of motifs.
              For more information about TOMTOM please read the <a href="http://meme.nbcr.net/meme/tomtom-intro.html">introduction</a>.
            </dd>
            <dt><a name="GOMO_doc"/>GOMO</dt>
            <dd>
              Identifies possible roles of DNA binding motifs.
              For more information about GOMO please read the <a href="http://meme.nbcr.net/meme/gomo-intro.html">introduction</a>.
            </dd>
            <dt><a name="BLOCKS_doc"/>BLOCKS</dt>
            <dd>
              Submit to Blocks Multiple Alignment Processor where you can do several things like create phylogeny trees and search the blocks 
              against a database of other blocks (protein only). For more information about BLOCKS Multiple Alignment Processor please visit the 
              <a href="http://blocks.fhcrc.org/blocks/process_blocks.html">website</a>.
            </dd>
          </dl>
        </div>

        <a name="formats_doc" />
        <h5>Data Formats</h5>
        <div class="doc">
          <p>The extracted data is avaliable in the following formats.</p>
          <dl>
            <dt><a name="format_PSPM_doc"/>PSPM Format</dt>
            <dd>
              The motif itself is a position-specific probability matrix giving, for each position in the pattern, the observed frequency ("probability") 
              of each possible letter. The probability matrix is printed "sideways"--columns correspond to the letters in the alphabet (in the same order 
              as shown in the simplified motif) and rows corresponding to the positions of the motif, position one first. The motif is preceded by a line 
              starting with "letter-probability matrix:" and containing the length of the alphabet, width of the motif, number of occurrences of the motif,
              and the <i>E</i>-value of the motif.<br />
              <b>Note:</b> Earlier versions of MEME gave the posterior probabilities--the probability after applying a prior on letter frequencies--rather 
              than the observed frequencies. These versions of MEME also gave the number of <i>possible</i> positions for the motif rather than the actual 
              number of occurrences. The output from these earlier versions of MEME can be distinguished by "n=" rather than "nsites=" in the line 
              preceding the matrix.
            </dd>
            <dt><a name="format_PSSM_doc"/>PSSM Format</dt>
            <dd>
              The position-specific scoring matrix corresponding to the motif is printed for use by database search programs such as MAST.
              This matrix is a log-odds matrix calculated by taking 100 times the log (base 2) of the ratio <i>p/f</i> at each position in
              the motif where <i>p</i> is the probability of a particular letter at that position in the motif, and <i>f</i> is the background 
              frequency of the letter (given in the <a href="#command">command line summary</a> section.) This is the same matrix that is used 
              above in computing the <i>p</i>-values of the occurrences of the motif in the <a href="#sites_doc">Sites</a>
              and <a href="#diagrams_doc">Block Diagrams</a> sections. The scoring matrix is printed "sideways"--columns
              correspond to the letters in the alphabet (in the same order as shown in the simplified motif) and rows corresponding to the 
              positions of the motif, position one first. The scoring matrix is preceded by a line starting with "log-odds matrix:" and 
              containing the length of the alphabet, width of the motif, number of characters in the training set, the scoring threshold 
              (obsolete) and the motif <i>E</i>-value.<br />
              <b>Note:</b> The probability <i>p</i> used to compute the PSSM is <i>not</i> exactly the same as the corresponding value in the 
              Position Specific Probability Matrix (PSPM). The values of <i>p</i> used to compute the PSSM take into account the motif prior, 
              whereas the values in the PSPM are just the <i>observed</i> frequencies of letters in the motif sites.
            </dd>
            <dt><a name="format_BLOCKS_doc"/>BLOCKS Format</dt>
            <dd>
              For use with <a href="http://blocks.fhcrc.org/blocks">BLOCKS tools</a>.
            </dd>
            <dt><a name="format_FASTA_doc"/>FASTA Format</dt>
            <dd>
              The FASTA format as described <a href="http://meme.nbcr.net/meme/doc/fasta-format.html">here</a>.
            </dd>
            <dt><a name="format_raw_doc"/>Raw Format</dt>
            <dd>
              Just the sites of the sequences that contributed to the motif. One site per line.
            </dd>
          </dl>
        </div>

        <a name="sites_doc"/>
        <h5 class="doc">Sites</h5>
        <div class="doc">
          <p>
            MEME displays the occurrences (sites) of the motif in the training set. The sites are shown aligned with each other, and the ten sequence
            positions preceding and following each site are also shown. Each site is identified by the name of the sequence where it occurs,
            the strand (if both strands of DNA sequences are being used), and the position in the sequence where the site begins.  When the DNA strand
            is specified, '+' means the sequence in the training set, and '-' means the reverse complement of the training set sequence.
            (For '-' strands, the 'start' position is actually the position on the <b>positive</b> strand where the site ends.) The sites are <b>listed 
              in order of increasing statistical significance</b> (<i>p</i>-value).  The <i>p</i>-value of a site is computed from the the match score of 
            the site with the <a href="#format_PSSM_doc">position specific scoring matrix</a> for the motif. The <i>p</i>-value gives the probability of a 
            random string (generated from the background letter frequencies) having the same match score or higher. (This is referred to as the 
            <b>position <i>p</i>-value</b> by the MAST algorithm.)
          </p>
        </div>

        <a name="diagrams_doc"/>
        <h5 class="doc">Block Diagrams</h5>
        <div class="doc">
          <p>
            The occurrences of the motif in the training set sequences are shown as coloured blocks on a line. One diagram is printed for each
            sequence showing all the sites contributating to that motif in that sequence. The sequences are <b>listed in the same order as in the input</b> 
            to make it easier to compare multiple block diagrams. Additionally the best <i>p</i>-value for the sequence/motif combination is
            listed though this may not be in ascending order as with the sites. The <i>p</i>-value of an occurrence is the probability of a single
            random subsequence the length of the motif, generated according to the 0-order background model, having a score at least as high as 
            the score of the occurrence. When the DNA strand is specified '+', it means the motif appears from left to right on the sequence, and '-' 
            means the motif appears from right to left on the complementary strand. A sequence position scale is shown at the end of each table of 
            block diagrams. 
          </p>
        </div>

        <a name="combined_doc"/>
        <h5>Combined Block Diagrams</h5>
        <div class="doc">
          <p>
            The motif occurrences shown in the motif summary <b>may not be exactly the same as those reported in each motif section</b> because 
            only motifs with a position <em>p</em>-value of 0.0001 that don't overlap other, more significant motif occurrences are shown. 
          </p>
          <p>
            See the documentation for <a href="http://meme.nbcr.net/meme/mast-output.html">MAST output</a> for the definition of position and
            combined <em>p</em>-values.
          </p>
        </div>
      </div>
    </span>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
  </xsl:template>


</xsl:stylesheet>

# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/meme
pkgincludedir = $(includedir)/meme
pkglibdir = $(libdir)/meme
pkglibexecdir = $(libexecdir)/meme
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libcommon_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libcommon_la_OBJECTS = libcommon_la-alignment.lo \
	libcommon_la-alphabet.lo libcommon_la-array.lo \
	libcommon_la-array-list.lo libcommon_la-background.lo \
	libcommon_la-binary-search.lo libcommon_la-binomial.lo \
	libcommon_la-build-hmm.lo libcommon_la-buffer.lo \
	libcommon_la-ceqlogo.lo libcommon_la-cisml.lo \
	libcommon_la-clustalw-io.lo libcommon_la-dp.lo \
	libcommon_la-dreme-sax.lo libcommon_la-eps2png.lo \
	libcommon_la-empirical-qvalue.lo libcommon_la-evomodel.lo \
	libcommon_la-evomodel_with_loss.lo libcommon_la-fasta-io.lo \
	libcommon_la-fisher_exact.lo libcommon_la-fitevd.lo \
	libcommon_la-gendb.lo libcommon_la-hash_alph.lo \
	libcommon_la-hash_table.lo libcommon_la-heap.lo \
	libcommon_la-html-data.lo libcommon_la-io.lo \
	libcommon_la-karlin.lo libcommon_la-linked-list.lo \
	libcommon_la-log-hmm.lo libcommon_la-logodds.lo \
	libcommon_la-mast-util.lo libcommon_la-match.lo \
	libcommon_la-matrix.lo libcommon_la-mcast_match.lo \
	libcommon_la-meme-sax.lo libcommon_la-metameme.lo \
	libcommon_la-mhmm.lo libcommon_la-mhmms.lo \
	libcommon_la-mhmmscan.lo libcommon_la-mhmm-state.lo \
	libcommon_la-motif-in.lo libcommon_la-motif-in-common.lo \
	libcommon_la-motif-in-dreme-xml.lo \
	libcommon_la-motif-in-meme-html.lo \
	libcommon_la-motif-in-meme-text.lo \
	libcommon_la-motif-in-meme-xml.lo libcommon_la-motif.lo \
	libcommon_la-motif_regexp.lo libcommon_la-motifs.lo \
	libcommon_la-motiph-scoring.lo libcommon_la-object-list.lo \
	libcommon_la-order.lo libcommon_la-data-block.lo \
	libcommon_la-data-block-reader.lo \
	libcommon_la-prior-reader-from-psp.lo \
	libcommon_la-prior-dist.lo libcommon_la-pssm.lo \
	libcommon_la-pssm-distr.lo libcommon_la-qvalue.lo \
	libcommon_la-ranksum_test.lo libcommon_la-rdb-matrix.lo \
	libcommon_la-read-mhmm.lo libcommon_la-read_sequence.lo \
	libcommon_la-red-black-tree.lo libcommon_la-regex-utils.lo \
	libcommon_la-regress.lo libcommon_la-reservoir.lo \
	libcommon_la-sax-parser-utils.lo \
	libcommon_la-scanned-sequence.lo libcommon_la-scored-sites.lo \
	libcommon_la-seq.lo libcommon_la-seq-reader-from-fasta.lo \
	libcommon_la-simple-getopt.lo \
	libcommon_la-spearman-rank-correlation.lo \
	libcommon_la-string-builder.lo libcommon_la-string-list.lo \
	libcommon_la-string-match.lo libcommon_la-subst-matrix.lo \
	libcommon_la-substmatrix-table.lo libcommon_la-transfac.lo \
	libcommon_la-tree.lo libcommon_la-utils.lo \
	libcommon_la-wiggle-reader.lo libcommon_la-write-mhmm.lo \
	libcommon_la-xml-out.lo libcommon_la-xml-util.lo
libcommon_la_OBJECTS = $(am_libcommon_la_OBJECTS)
libcommon_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libcommon_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = alphtype$(EXEEXT) ama$(EXEEXT) ame$(EXEEXT) \
	beadstring$(EXEEXT) ceqlogo$(EXEEXT) centrimo$(EXEEXT) \
	clustalw-io$(EXEEXT) clustalw2fasta$(EXEEXT) \
	clustalw2phylip$(EXEEXT) compute-prior-dist$(EXEEXT) \
	compute-uniform-priors$(EXEEXT) create-priors$(EXEEXT) \
	draw-mhmm$(EXEEXT) fasta-io$(EXEEXT) fimo$(EXEEXT) \
	fitevd$(EXEEXT) gendb$(EXEEXT) getsize$(EXEEXT) glam2$(EXEEXT) \
	glam2format$(EXEEXT) glam2mask$(EXEEXT) glam2scan$(EXEEXT) \
	gomo$(EXEEXT) gomo_highlight$(EXEEXT) llr$(EXEEXT) \
	mast$(EXEEXT) mast2txt$(EXEEXT) mcast$(EXEEXT) \
	meme.bin$(EXEEXT) meme-xml-html$(EXEEXT) meme2images$(EXEEXT) \
	mhmm$(EXEEXT) mhmm-io$(EXEEXT) mhmme$(EXEEXT) mhmms$(EXEEXT) \
	mhmmscan$(EXEEXT) motiph$(EXEEXT) pmp_bf$(EXEEXT) \
	ramen$(EXEEXT) readseq$(EXEEXT) shadow$(EXEEXT) spamo$(EXEEXT) \
	tomtom$(EXEEXT) tree$(EXEEXT) qvalue$(EXEEXT) \
	ranksum_test$(EXEEXT) reconcile-tree-alignment$(EXEEXT) \
	reduce-alignment$(EXEEXT) remove-alignment-gaps$(EXEEXT) \
	xsltproc_lite$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_alphtype_OBJECTS = alphtype-alphtype.$(OBJEXT)
alphtype_OBJECTS = $(am_alphtype_OBJECTS)
alphtype_DEPENDENCIES = libcommon.la
alphtype_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(alphtype_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ama_OBJECTS = ama-ama.$(OBJEXT) ama-ama_scan.$(OBJEXT)
ama_OBJECTS = $(am_ama_OBJECTS)
ama_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ama_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(ama_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ame_OBJECTS = ame-ame.$(OBJEXT) ame-ramen_scan.$(OBJEXT) \
	ame-html-monolith.$(OBJEXT) ame-json-writer.$(OBJEXT)
ame_OBJECTS = $(am_ame_OBJECTS)
ame_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ame_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(ame_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_beadstring_OBJECTS = beadstring-beadstring.$(OBJEXT)
beadstring_OBJECTS = $(am_beadstring_OBJECTS)
beadstring_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
beadstring_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(beadstring_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_centrimo_OBJECTS = centrimo-centrimo.$(OBJEXT) \
	centrimo-html-monolith.$(OBJEXT) \
	centrimo-json-writer.$(OBJEXT)
centrimo_OBJECTS = $(am_centrimo_OBJECTS)
centrimo_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
centrimo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(centrimo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ceqlogo_OBJECTS = ceqlogo-ceqlogo.$(OBJEXT)
ceqlogo_OBJECTS = $(am_ceqlogo_OBJECTS)
ceqlogo_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ceqlogo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(ceqlogo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_clustalw_io_OBJECTS = clustalw_io-clustalw-io.$(OBJEXT)
clustalw_io_OBJECTS = $(am_clustalw_io_OBJECTS)
clustalw_io_DEPENDENCIES = libcommon.la
clustalw_io_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(clustalw_io_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_clustalw2fasta_OBJECTS = clustalw2fasta-clustalw2fasta.$(OBJEXT)
clustalw2fasta_OBJECTS = $(am_clustalw2fasta_OBJECTS)
clustalw2fasta_DEPENDENCIES = libcommon.la
clustalw2fasta_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(clustalw2fasta_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_clustalw2phylip_OBJECTS =  \
	clustalw2phylip-clustalw2phylip.$(OBJEXT)
clustalw2phylip_OBJECTS = $(am_clustalw2phylip_OBJECTS)
clustalw2phylip_DEPENDENCIES = libcommon.la
clustalw2phylip_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(clustalw2phylip_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_compute_prior_dist_OBJECTS =  \
	compute_prior_dist-compute-prior-dist.$(OBJEXT)
compute_prior_dist_OBJECTS = $(am_compute_prior_dist_OBJECTS)
compute_prior_dist_DEPENDENCIES = libcommon.la
compute_prior_dist_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(compute_prior_dist_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_compute_uniform_priors_OBJECTS =  \
	compute_uniform_priors-compute-uniform-priors.$(OBJEXT)
compute_uniform_priors_OBJECTS = $(am_compute_uniform_priors_OBJECTS)
compute_uniform_priors_DEPENDENCIES = libcommon.la
compute_uniform_priors_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(compute_uniform_priors_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_create_priors_OBJECTS = create_priors-create-priors.$(OBJEXT)
create_priors_OBJECTS = $(am_create_priors_OBJECTS)
create_priors_DEPENDENCIES = libcommon.la wiggle/libwiggle.la
create_priors_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(create_priors_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_draw_mhmm_OBJECTS = draw_mhmm-draw-mhmm.$(OBJEXT) \
	draw_mhmm-read-mhmm.$(OBJEXT)
draw_mhmm_OBJECTS = $(am_draw_mhmm_OBJECTS)
draw_mhmm_DEPENDENCIES = libcommon.la
draw_mhmm_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(draw_mhmm_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_fasta_io_OBJECTS = fasta_io-fasta-io.$(OBJEXT)
fasta_io_OBJECTS = $(am_fasta_io_OBJECTS)
fasta_io_DEPENDENCIES = libcommon.la
fasta_io_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(fasta_io_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_fimo_OBJECTS = fimo-fimo.$(OBJEXT)
fimo_OBJECTS = $(am_fimo_OBJECTS)
fimo_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
fimo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(fimo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_fitevd_OBJECTS = fitevd-fitevd.$(OBJEXT)
fitevd_OBJECTS = $(am_fitevd_OBJECTS)
fitevd_DEPENDENCIES = libcommon.la
fitevd_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(fitevd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_gendb_OBJECTS = gendb-gendb.$(OBJEXT)
gendb_OBJECTS = $(am_gendb_OBJECTS)
gendb_DEPENDENCIES = libcommon.la
gendb_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(gendb_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_getsize_OBJECTS = getsize.$(OBJEXT)
getsize_OBJECTS = $(am_getsize_OBJECTS)
getsize_DEPENDENCIES = libcommon.la
am_glam2_OBJECTS = glam2-glam2_alphabet.$(OBJEXT) \
	glam2-glam2_args.$(OBJEXT) glam2-glam2_column_sample.$(OBJEXT) \
	glam2-glam2_dirichlet.$(OBJEXT) \
	glam2-glam2_dna_prior.$(OBJEXT) glam2-glam2_fasta.$(OBJEXT) \
	glam2-glam2_glam2.$(OBJEXT) glam2-glam2_glam2_aln.$(OBJEXT) \
	glam2-glam2_init.$(OBJEXT) glam2-glam2_output.$(OBJEXT) \
	glam2-glam2_recode3_20comp.$(OBJEXT) \
	glam2-glam2_site_sample.$(OBJEXT) glam2-glam2_util.$(OBJEXT)
glam2_OBJECTS = $(am_glam2_OBJECTS)
glam2_DEPENDENCIES = libcommon.la
glam2_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(glam2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_glam2format_OBJECTS = glam2format-glam2_glam2format.$(OBJEXT) \
	glam2format-glam2_alignment.$(OBJEXT) \
	glam2format-glam2_fasta.$(OBJEXT) \
	glam2format-glam2_util.$(OBJEXT)
glam2format_OBJECTS = $(am_glam2format_OBJECTS)
glam2format_DEPENDENCIES = libcommon.la
glam2format_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(glam2format_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_glam2mask_OBJECTS = glam2mask-glam2_glam2mask.$(OBJEXT) \
	glam2mask-glam2_alignment.$(OBJEXT) \
	glam2mask-glam2_fasta.$(OBJEXT) glam2mask-glam2_util.$(OBJEXT)
glam2mask_OBJECTS = $(am_glam2mask_OBJECTS)
glam2mask_DEPENDENCIES = libcommon.la
glam2mask_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(glam2mask_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_glam2scan_OBJECTS = glam2scan-glam2_alignment.$(OBJEXT) \
	glam2scan-glam2_alphabet.$(OBJEXT) \
	glam2scan-glam2_dna_prior.$(OBJEXT) \
	glam2scan-glam2_fasta.$(OBJEXT) \
	glam2scan-glam2_dirichlet.$(OBJEXT) \
	glam2scan-glam2_heap.$(OBJEXT) glam2scan-glam2_motif.$(OBJEXT) \
	glam2scan-glam2_scan.$(OBJEXT) \
	glam2scan-glam2_scan_args.$(OBJEXT) \
	glam2scan-glam2_scan_init.$(OBJEXT) \
	glam2scan-glam2_scan_output.$(OBJEXT) \
	glam2scan-glam2_recode3_20comp.$(OBJEXT) \
	glam2scan-glam2_util.$(OBJEXT)
glam2scan_OBJECTS = $(am_glam2scan_OBJECTS)
glam2scan_DEPENDENCIES = libcommon.la
glam2scan_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(glam2scan_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_gomo_OBJECTS = gomo-gomo.$(OBJEXT) gomo-gomo_highlight.$(OBJEXT) \
	gomo-merger.$(OBJEXT) gomo-ranksum_test.$(OBJEXT) \
	gomo-read_csv.$(OBJEXT)
gomo_OBJECTS = $(am_gomo_OBJECTS)
gomo_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
gomo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(gomo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_gomo_highlight_OBJECTS = gomo_highlight-gomo_highlight.$(OBJEXT)
gomo_highlight_OBJECTS = $(am_gomo_highlight_OBJECTS)
gomo_highlight_DEPENDENCIES = libcommon.la
gomo_highlight_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(gomo_highlight_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_llr_OBJECTS = llr-llr.$(OBJEXT) llr-logs.$(OBJEXT)
llr_OBJECTS = $(am_llr_OBJECTS)
llr_DEPENDENCIES = libcommon.la
llr_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(llr_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mast_OBJECTS = mast-diagram.$(OBJEXT) mast-mast.$(OBJEXT)
mast_OBJECTS = $(am_mast_OBJECTS)
mast_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mast_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mast_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mast2txt_OBJECTS = mast2txt-mast2txt.$(OBJEXT)
mast2txt_OBJECTS = $(am_mast2txt_OBJECTS)
mast2txt_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mast2txt_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mast2txt_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mcast_OBJECTS = mcast-mcast.$(OBJEXT)
mcast_OBJECTS = $(am_mcast_OBJECTS)
mcast_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mcast_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mcast_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_meme_xml_html_OBJECTS = meme_xml_html-meme-xml-html.$(OBJEXT) \
	meme_xml_html-meme-print-html.$(OBJEXT)
meme_xml_html_OBJECTS = $(am_meme_xml_html_OBJECTS)
meme_xml_html_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
meme_xml_html_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(meme_xml_html_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_meme_bin_OBJECTS = meme_bin-banner.$(OBJEXT) \
	meme_bin-branching_search.$(OBJEXT) \
	meme_bin-calculate_p_y.$(OBJEXT) meme_bin-discretize.$(OBJEXT) \
	meme_bin-display.$(OBJEXT) meme_bin-dpalign.$(OBJEXT) \
	meme_bin-em.$(OBJEXT) meme_bin-init.$(OBJEXT) \
	meme_bin-justlike.$(OBJEXT) meme_bin-likelihood.$(OBJEXT) \
	meme_bin-llr.$(OBJEXT) meme_bin-logs.$(OBJEXT) \
	meme_bin-meme.$(OBJEXT) meme_bin-meme-print-html.$(OBJEXT) \
	meme_bin-meme_util.$(OBJEXT) meme_bin-message.$(OBJEXT) \
	meme_bin-mp.$(OBJEXT) meme_bin-oops.$(OBJEXT) \
	meme_bin-partition.$(OBJEXT) meme_bin-prior.$(OBJEXT) \
	meme_bin-psp.$(OBJEXT) meme_bin-read_seq_file.$(OBJEXT) \
	meme_bin-seed.$(OBJEXT) meme_bin-seed_diffs.$(OBJEXT) \
	meme_bin-seq2theta.$(OBJEXT) meme_bin-sp_matrix.$(OBJEXT) \
	meme_bin-starts.$(OBJEXT) meme_bin-subseq7.$(OBJEXT) \
	meme_bin-tcm.$(OBJEXT) meme_bin-verbosity.$(OBJEXT)
meme_bin_OBJECTS = $(am_meme_bin_OBJECTS)
meme_bin_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
meme_bin_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(meme_bin_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_meme2images_OBJECTS = meme2images-meme2images.$(OBJEXT)
meme2images_OBJECTS = $(am_meme2images_OBJECTS)
meme2images_DEPENDENCIES = libcommon.la
meme2images_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(meme2images_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_mhmm_OBJECTS = mhmm-mhmm.$(OBJEXT)
mhmm_OBJECTS = $(am_mhmm_OBJECTS)
mhmm_DEPENDENCIES = libcommon.la
mhmm_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mhmm_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mhmm_io_OBJECTS = mhmm_io-mhmm-io.$(OBJEXT)
mhmm_io_OBJECTS = $(am_mhmm_io_OBJECTS)
mhmm_io_DEPENDENCIES = libcommon.la
mhmm_io_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mhmm_io_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mhmme_OBJECTS = mhmme-mhmme.$(OBJEXT)
mhmme_OBJECTS = $(am_mhmme_OBJECTS)
mhmme_DEPENDENCIES = libcommon.la
mhmme_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mhmme_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mhmms_OBJECTS = mhmms-mhmms.$(OBJEXT)
mhmms_OBJECTS = $(am_mhmms_OBJECTS)
mhmms_DEPENDENCIES = libcommon.la
mhmms_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mhmms_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mhmmscan_OBJECTS = mhmmscan-mhmmscan.$(OBJEXT)
mhmmscan_OBJECTS = $(am_mhmmscan_OBJECTS)
mhmmscan_DEPENDENCIES = libcommon.la
mhmmscan_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mhmmscan_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_motiph_OBJECTS = motiph-motiph.$(OBJEXT)
motiph_OBJECTS = $(am_motiph_OBJECTS)
motiph_DEPENDENCIES = libcommon.la
motiph_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(motiph_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_pmp_bf_OBJECTS = pmp_bf-pmp_bf.$(OBJEXT)
pmp_bf_OBJECTS = $(am_pmp_bf_OBJECTS)
pmp_bf_DEPENDENCIES = libcommon.la
pmp_bf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(pmp_bf_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_qvalue_OBJECTS = qvalue-qvalue.$(OBJEXT)
qvalue_OBJECTS = $(am_qvalue_OBJECTS)
qvalue_DEPENDENCIES = libcommon.la
qvalue_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(qvalue_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ramen_OBJECTS = ramen-ramen.$(OBJEXT) ramen-ramen_scan.$(OBJEXT)
ramen_OBJECTS = $(am_ramen_OBJECTS)
ramen_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ramen_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(ramen_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ranksum_test_OBJECTS = ranksum_test-ranksum_test.$(OBJEXT)
ranksum_test_OBJECTS = $(am_ranksum_test_OBJECTS)
ranksum_test_DEPENDENCIES = libcommon.la
ranksum_test_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ranksum_test_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_readseq_OBJECTS = readseq-readseq.$(OBJEXT) \
	readseq-ureadseq.$(OBJEXT)
readseq_OBJECTS = $(am_readseq_OBJECTS)
readseq_LDADD = $(LDADD)
readseq_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(readseq_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_reconcile_tree_alignment_OBJECTS =  \
	reconcile_tree_alignment-reconcile-tree-alignment.$(OBJEXT)
reconcile_tree_alignment_OBJECTS =  \
	$(am_reconcile_tree_alignment_OBJECTS)
reconcile_tree_alignment_DEPENDENCIES = libcommon.la
reconcile_tree_alignment_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(reconcile_tree_alignment_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_reduce_alignment_OBJECTS =  \
	reduce_alignment-reduce-alignment.$(OBJEXT)
reduce_alignment_OBJECTS = $(am_reduce_alignment_OBJECTS)
reduce_alignment_DEPENDENCIES = libcommon.la
reduce_alignment_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(reduce_alignment_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_remove_alignment_gaps_OBJECTS =  \
	remove_alignment_gaps-remove-alignment-gaps.$(OBJEXT)
remove_alignment_gaps_OBJECTS = $(am_remove_alignment_gaps_OBJECTS)
remove_alignment_gaps_DEPENDENCIES = libcommon.la
remove_alignment_gaps_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(remove_alignment_gaps_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_shadow_OBJECTS = shadow-shadow.$(OBJEXT)
shadow_OBJECTS = $(am_shadow_OBJECTS)
shadow_DEPENDENCIES = libcommon.la
shadow_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(shadow_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_spamo_OBJECTS = spamo-cisml-sax.$(OBJEXT) spamo-spamo.$(OBJEXT) \
	spamo-spamo-cisml.$(OBJEXT) spamo-spamo-matches.$(OBJEXT) \
	spamo-spamo-output.$(OBJEXT) spamo-spamo-scan.$(OBJEXT)
spamo_OBJECTS = $(am_spamo_OBJECTS)
spamo_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
spamo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(spamo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tomtom_OBJECTS = tomtom-tomtom.$(OBJEXT)
tomtom_OBJECTS = $(am_tomtom_OBJECTS)
tomtom_DEPENDENCIES = libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
tomtom_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(tomtom_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tree_OBJECTS = tree-tree.$(OBJEXT)
tree_OBJECTS = $(am_tree_OBJECTS)
tree_DEPENDENCIES = libcommon.la
tree_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(tree_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_xsltproc_lite_OBJECTS = xsltproc_lite-xsltproc_lite.$(OBJEXT)
xsltproc_lite_OBJECTS = $(am_xsltproc_lite_OBJECTS)
xsltproc_lite_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
xsltproc_lite_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(xsltproc_lite_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcommon_la_SOURCES) $(alphtype_SOURCES) $(ama_SOURCES) \
	$(ame_SOURCES) $(beadstring_SOURCES) $(centrimo_SOURCES) \
	$(ceqlogo_SOURCES) $(clustalw_io_SOURCES) \
	$(clustalw2fasta_SOURCES) $(clustalw2phylip_SOURCES) \
	$(compute_prior_dist_SOURCES) \
	$(compute_uniform_priors_SOURCES) $(create_priors_SOURCES) \
	$(draw_mhmm_SOURCES) $(fasta_io_SOURCES) $(fimo_SOURCES) \
	$(fitevd_SOURCES) $(gendb_SOURCES) $(getsize_SOURCES) \
	$(glam2_SOURCES) $(glam2format_SOURCES) $(glam2mask_SOURCES) \
	$(glam2scan_SOURCES) $(gomo_SOURCES) $(gomo_highlight_SOURCES) \
	$(llr_SOURCES) $(mast_SOURCES) $(mast2txt_SOURCES) \
	$(mcast_SOURCES) $(meme_xml_html_SOURCES) $(meme_bin_SOURCES) \
	$(meme2images_SOURCES) $(mhmm_SOURCES) $(mhmm_io_SOURCES) \
	$(mhmme_SOURCES) $(mhmms_SOURCES) $(mhmmscan_SOURCES) \
	$(motiph_SOURCES) $(pmp_bf_SOURCES) $(qvalue_SOURCES) \
	$(ramen_SOURCES) $(ranksum_test_SOURCES) $(readseq_SOURCES) \
	$(reconcile_tree_alignment_SOURCES) \
	$(reduce_alignment_SOURCES) $(remove_alignment_gaps_SOURCES) \
	$(shadow_SOURCES) $(spamo_SOURCES) $(tomtom_SOURCES) \
	$(tree_SOURCES) $(xsltproc_lite_SOURCES)
DIST_SOURCES = $(libcommon_la_SOURCES) $(alphtype_SOURCES) \
	$(ama_SOURCES) $(ame_SOURCES) $(beadstring_SOURCES) \
	$(centrimo_SOURCES) $(ceqlogo_SOURCES) $(clustalw_io_SOURCES) \
	$(clustalw2fasta_SOURCES) $(clustalw2phylip_SOURCES) \
	$(compute_prior_dist_SOURCES) \
	$(compute_uniform_priors_SOURCES) $(create_priors_SOURCES) \
	$(draw_mhmm_SOURCES) $(fasta_io_SOURCES) $(fimo_SOURCES) \
	$(fitevd_SOURCES) $(gendb_SOURCES) $(getsize_SOURCES) \
	$(glam2_SOURCES) $(glam2format_SOURCES) $(glam2mask_SOURCES) \
	$(glam2scan_SOURCES) $(gomo_SOURCES) $(gomo_highlight_SOURCES) \
	$(llr_SOURCES) $(mast_SOURCES) $(mast2txt_SOURCES) \
	$(mcast_SOURCES) $(meme_xml_html_SOURCES) $(meme_bin_SOURCES) \
	$(meme2images_SOURCES) $(mhmm_SOURCES) $(mhmm_io_SOURCES) \
	$(mhmme_SOURCES) $(mhmms_SOURCES) $(mhmmscan_SOURCES) \
	$(motiph_SOURCES) $(pmp_bf_SOURCES) $(qvalue_SOURCES) \
	$(ramen_SOURCES) $(ranksum_test_SOURCES) $(readseq_SOURCES) \
	$(reconcile_tree_alignment_SOURCES) \
	$(reduce_alignment_SOURCES) $(remove_alignment_gaps_SOURCES) \
	$(shadow_SOURCES) $(spamo_SOURCES) $(tomtom_SOURCES) \
	$(tree_SOURCES) $(xsltproc_lite_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = filters libxml2 libxslt libexslt wiggle . parallel
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
ANT = /opt/rocks/bin/ant
AR = ar
AUTOCONF = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/missing --run automake-1.11
AWK = gawk
BLOCKS_URL = http://blocks.fhcrc.org/blocks-bin/process_blocks.pl
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-unused -DUNIX -D__USE_FIXED_PROTOTYPES__   -O3
CONTACT = @lanec1.compbio.cs.cmu.edu
CONVERT = /usr/bin/convert
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEBUG_FLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GHOSTSCRIPT = /usr/bin/gs
GOSERVER_URL = http://amigo.geneontology.org/cgi-bin/amigo/
GREP = /bin/grep
HAVE_ELINKS = yes
HOSTNAME = lanec1.compbio.cs.cmu.edu
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAMBIN = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEXSLT_CFLAGS = -I${top_srcdir}/src/libexslt
LIBEXSLT_LIBS = ${top_builddir}/src/libexslt/libexslt.la
LIBOBJS = 
LIBS = -lz -lxml2 -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_CFLAGS = -I${top_srcdir}/src/libxml2/include
LIBXML2_LIBS = ${top_builddir}/src/libxml2/libxml2.la
LIBXSLT_CFLAGS = -I${top_srcdir}/src/
LIBXSLT_LIBS = ${top_builddir}/src/libxslt/libxslt.la
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MACHID = linux
MAIL = /bin/mail
MAKEINFO = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/missing --run makeinfo
MANIFEST_TOOL = :
MAST_PORT = 
MAXTIME = 7200
MEME_DB = ${prefix}/db
MEME_DIRECTORY = ${prefix}
MEME_LOGS = ${prefix}/LOGS
MEME_PORT = 
MEME_TEMP = 
MKDIR_P = /bin/mkdir -p
MPICC = /opt/openmpi/bin//mpicc
MPIFLAGS = -DPARALLEL 
MPIINC = -DMPI -I/opt/openmpi/include
MPILIBDIR = /opt/openmpi/lib
MPITYPE = mpich
MPI_CMD = /opt/openmpi/bin/mpirun -np
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPAL_URL = no
OPAL_XML = no
OPT_FLAGS = -O3
OTOOL = 
OTOOL64 = 
PACKAGE = meme
PACKAGE_BUGREPORT = 
PACKAGE_NAME = meme
PACKAGE_STRING = meme 4.9.0
PACKAGE_TARNAME = meme
PACKAGE_URL = 
PACKAGE_VERSION = 4.9.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PYTHON = /opt/python27/bin/python
RANLIB = ranlib
SED = /bin/sed
SENDMAIL = /usr/lib/sendmail
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
URL = http://meme.nbcr.net/meme
VERSION = 4.9.0
WEBDIR = ${prefix}/web
WEBSERVICE = 
XML2_CONFIG = /usr/bin/xml2-config
XSLT_CONFIG = 
abs_builddir = /home/yuhao/chipSeq/software/meme_4.9.0/src
abs_srcdir = /home/yuhao/chipSeq/software/meme_4.9.0/src
abs_top_builddir = /home/yuhao/chipSeq/software/meme_4.9.0
abs_top_srcdir = /home/yuhao/chipSeq/software/meme_4.9.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/yuhao/chipSeq/software/meme_4.9.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/yuhao/meme
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#PARALLEL_DIR = 

#####################################################################
#
#  $Id$
#
#####################################################################
# Note:
#
# To change compiler options at build time set the CFLAGS parameter
# on the make command line. For example, to turn on debugging symbols,
# turn off optimization and turn on the DEBUG preprocessor definition
# the command line would be:
#
#   make CFLAGS=" -ggdb -O0 -DDEBUG"
#
#####################################################################
PARALLEL_DIR = parallel
SUBDIRS = filters libxml2 libxslt libexslt wiggle . $(PARALLEL_DIR)
BUILT_SOURCES = dir.h projrel.h
PROGS = \
  alphtype \
  ama \
  ame \
  beadstring \
  ceqlogo \
  centrimo \
  clustalw-io \
  clustalw2fasta \
  clustalw2phylip \
  compute-prior-dist \
  compute-uniform-priors \
  create-priors \
  draw-mhmm \
  fasta-io \
  fimo \
  fitevd \
  gendb \
  getsize \
  glam2 \
  glam2format \
  glam2mask \
  glam2scan \
  gomo \
  gomo_highlight \
  llr \
  mast \
  mast2txt \
  mcast \
  meme.bin \
  meme-xml-html \
  meme2images \
  mhmm \
  mhmm-io \
  mhmme \
  mhmms \
  mhmmscan \
  motiph \
  pmp_bf \
  ramen \
  readseq \
  shadow \
  spamo \
  tomtom \
  tree \
  qvalue \
  ranksum_test \
  reconcile-tree-alignment \
  reduce-alignment \
  remove-alignment-gaps \
  xsltproc_lite

noinst_LTLIBRARIES = libcommon.la

# Build the source common to all the binaries into a library
libcommon_la_CFLAGS = \
	-fno-strict-aliasing \
	$(AM_CFLAGS) \
	$(LIBXML2_CFLAGS) \
	$(LIBXSLT_CFLAGS) \
	$(LIBEXSLT_CFLAGS)

libcommon_la_LIBADD = \
	$(LIBXML2_LIBS) \
	$(LIBXSLT_LIBS) \
	$(LIBEXSLT_LIBS) \
	-lm

libcommon_la_SOURCES = \
  alignment.c \
  alphabet.c \
  array.c \
  array-list.c \
  background.c \
  binary-search.c \
  binomial.c \
  build-hmm.c \
  buffer.c \
  ceqlogo.c \
  cisml.c \
  clustalw-io.c \
  dp.c \
  dreme-sax.c \
  eps2png.c \
  empirical-qvalue.c \
  evomodel.c \
  evomodel_with_loss.c \
  fasta-io.c \
  fisher_exact.c \
  fitevd.c \
  gendb.c \
  hash_alph.c \
  hash_table.c \
  heap.c \
  html-data.c \
  io.c \
  karlin.c \
  linked-list.c \
  log-hmm.c \
  logodds.c \
  mast-util.c \
  match.c \
  matrix.c \
  mcast_match.c \
  meme-sax.c \
  metameme.c \
  mhmm.c \
  mhmms.c \
  mhmmscan.c \
  mhmm-state.c \
  motif-in.c \
  motif-in-common.c \
  motif-in-dreme-xml.c \
  motif-in-meme-html.c \
  motif-in-meme-text.c \
  motif-in-meme-xml.c \
  motif.c \
  motif_regexp.c \
  motifs.c \
  motiph-scoring.c \
  object-list.c \
  order.c \
  data-block.c \
  data-block-reader.c \
  prior-reader-from-psp.c \
  prior-dist.c \
  pssm.c \
  pssm-distr.c \
  qvalue.c \
  ranksum_test.c \
  ranksum_test.h \
  rdb-matrix.c \
  read-mhmm.c \
  read_sequence.c \
  red-black-tree.c \
  regex-utils.c \
  regress.c \
  reservoir.c \
  sax-parser-utils.c \
  scanned-sequence.c \
  scored-sites.c \
  seq.c \
  seq-reader-from-fasta.c \
  simple-getopt.c \
  spearman-rank-correlation.c \
  spearman-rank-correlation.h \
  string-builder.c \
  string-list.c \
  string-match.c \
  subst-matrix.c \
  substmatrix-table.c \
  transfac.c \
  tree.c \
  utils.c \
  wiggle-reader.c \
  write-mhmm.c \
  xml-out.c \
  xml-util.c

alphtype_CFLAGS = $(AM_CFLAGS)
alphtype_LDADD = libcommon.la
alphtype_SOURCES = alphtype.c

# Describe the source files and build options for each executable
ama_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS) $(OPENMP_CFLAGS)
ama_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
ama_SOURCES = \
  ama.c \
  ama_scan.c

ame_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS)
ame_SOURCES = ame.c ramen_scan.c html-monolith.c json-writer.c
ame_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS) -lm 
beadstring_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
beadstring_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
beadstring_SOURCES = beadstring.c
centrimo_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
centrimo_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
centrimo_SOURCES = centrimo.c html-monolith.c json-writer.c
ceqlogo_CFLAGS = -DCL_MAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
ceqlogo_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
ceqlogo_SOURCES = ceqlogo.c
clustalw_io_CFLAGS = -DMAIN $(AM_CFLAGS)
clustalw_io_LDADD = libcommon.la
clustalw_io_SOURCES = clustalw-io.c
clustalw2fasta_CFLAGS = $(AM_CFLAGS)
clustalw2fasta_LDADD = libcommon.la
clustalw2fasta_SOURCES = clustalw2fasta.c
clustalw2phylip_CFLAGS = $(AM_CFLAGS)
clustalw2phylip_LDADD = libcommon.la
clustalw2phylip_SOURCES = clustalw2phylip.c
compute_prior_dist_CFLAGS = $(AM_CFLAGS)
compute_prior_dist_LDADD = libcommon.la
compute_prior_dist_SOURCES = compute-prior-dist.c
compute_uniform_priors_CFLAGS = $(AM_CFLAGS)
compute_uniform_priors_LDADD = libcommon.la
compute_uniform_priors_SOURCES = compute-uniform-priors.c
create_priors_CFLAGS = $(AM_CFLAGS)
create_priors_LDADD = libcommon.la wiggle/libwiggle.la -lz
create_priors_SOURCES = create-priors.c
draw_mhmm_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
draw_mhmm_LDADD = libcommon.la
draw_mhmm_SOURCES = \
  draw-mhmm.c \
  read-mhmm.c

fasta_io_CFLAGS = -DMAIN $(AM_CFLAGS)
fasta_io_LDADD = libcommon.la
fasta_io_SOURCES = fasta-io.c
fimo_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
fimo_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
fimo_SOURCES = fimo.c
fitevd_CFLAGS = -DMAIN $(AM_CFLAGS)
fitevd_LDADD = libcommon.la
fitevd_SOURCES = fitevd.c
gendb_CFLAGS = -DMAIN $(AM_CFLAGS)
gendb_LDADD = libcommon.la
gendb_SOURCES = gendb.c
getsisze_CFLAGS = $(AM_CFLAGS)
getsize_LDADD = libcommon.la
getsize_SOURCES = getsize.c
glam2_CFLAGS = $(AM_CFLAGS)
glam2_LDADD = libcommon.la
glam2_SOURCES = \
  glam2_alphabet.c \
  glam2_args.c \
  glam2_column_sample.c \
  glam2_dirichlet.c \
  glam2_dna_prior.c \
  glam2_fasta.c \
  glam2_glam2.c \
  glam2_glam2_aln.c \
  glam2_init.c \
  glam2_output.c \
  glam2_recode3_20comp.c \
  glam2_site_sample.c \
  glam2_util.c

glam2scan_CFLAGS = $(AM_CFLAGS)
glam2scan_LDADD = libcommon.la
glam2scan_SOURCES = \
  glam2_alignment.c \
  glam2_alphabet.c \
  glam2_dna_prior.c \
  glam2_fasta.c \
  glam2_dirichlet.c \
  glam2_heap.c \
  glam2_motif.c \
  glam2_scan.c \
  glam2_scan_args.c \
  glam2_scan_init.c \
  glam2_scan_output.c \
  glam2_recode3_20comp.c \
  glam2_util.c

glam2format_CFLAGS = $(AM_CFLAGS)
glam2format_LDADD = libcommon.la
glam2format_SOURCES = \
  glam2_glam2format.c \
  glam2_alignment.c \
  glam2_fasta.c \
  glam2_util.c

glam2mask_CFLAGS = $(AM_CFLAGS)
glam2mask_LDADD = libcommon.la
glam2mask_SOURCES = \
  glam2_glam2mask.c \
  glam2_alignment.c \
  glam2_fasta.c \
  glam2_util.c

gomo_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS) $(OPENMP_CFLAGS)
gomo_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
gomo_SOURCES = \
  gomo.c \
  gomo_highlight.c \
  merger.c \
  ranksum_test.c \
  read_csv.c

gomo_highlight_CFLAGS = -DMAIN $(AM_CFLAGS)
gomo_highlight_LDADD = libcommon.la
gomo_highlight_SOURCES = gomo_highlight.c
mast_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mast_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
mast_SOURCES = \
  diagram.c \
  mast.c

mast2txt_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mast2txt_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
mast2txt_SOURCES = \
  mast2txt.c

mcast_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mcast_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
mcast_SOURCES = mcast.c
meme_bin_CFLAGS = \
	$(AM_CFLAGS) \
	$(LIBXML2_CFLAGS) \
	$(LIBXSLT_CFLAGS) \
	$(LIBEXSLT_CFLAGS)

meme_bin_LDADD = \
	libcommon.la \
	$(LIBXML2_LIBS) \
	$(LIBXSLT_LIBS) \
	$(LIBEXSLT_LIBS)

meme_bin_SOURCES = \
  banner.c \
  branching_search.c \
  calculate_p_y.c \
  discretize.c \
  display.c  \
  dpalign.c  \
  em.c  \
  init.c  \
  justlike.c \
  likelihood.c \
  llr.c \
  logs.c \
  meme.c \
  meme-print-html.c \
  meme_util.c \
  message.c \
  mp.c \
  oops.c \
  partition.c \
  prior.c \
  psp.c \
  read_seq_file.c \
  seed.c \
  seed_diffs.c \
  seq2theta.c \
  sp_matrix.c \
  starts.c \
  subseq7.c \
  tcm.c \
  verbosity.c

meme_xml_html_CFLAGS = ${meme_bin_CFLAGS}
meme_xml_html_LDADD = $(LIBXML2_LIBS) $(LIBXSLT_LIBS) $(LIBEXSLT_LIBS) -lm
meme_xml_html_SOURCES = \
  meme-xml-html.c \
  meme-print-html.c

meme2images_CFLAGS = $(AM_CFLAGS)
meme2images_LDADD = libcommon.la
meme2images_SOURCES = meme2images.c
mhmm_CFLAGS = -DMAIN $(AM_CFLAGS)
mhmm_LDADD = libcommon.la 
mhmm_SOURCES = mhmm.c
mhmm_io_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mhmm_io_LDADD = libcommon.la 
mhmm_io_SOURCES = mhmm-io.c
mhmme_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mhmme_LDADD = libcommon.la 
mhmme_SOURCES = mhmme.c
mhmms_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mhmms_LDADD = libcommon.la 
mhmms_SOURCES = mhmms.c
mhmmscan_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
mhmmscan_LDADD = libcommon.la
mhmmscan_SOURCES = mhmmscan.c
motiph_CFLAGS = -DMOTIPH $(AM_CFLAGS) $(LIBXML2_CFLAGS)
motiph_LDADD = libcommon.la 
motiph_SOURCES = motiph.c
pmp_bf_CFLAGS = -DMOTIPH $(AM_CFLAGS) $(LIBXML2_CFLAGS)
pmp_bf_LDADD = libcommon.la 
pmp_bf_SOURCES = pmp_bf.c
ramen_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS)
ramen_SOURCES = ramen.c ramen_scan.c
ramen_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS) -lm 
readseq_CFLAGS = $(AM_CFLAGS)
readseq_SOURCES = \
  readseq.c \
  ureadseq.c

shadow_CFLAGS = -DSHADOW $(AM_CFLAGS) $(LIBXML2_CFLAGS)
shadow_LDADD = libcommon.la 
shadow_SOURCES = shadow.c
llr_CFLAGS = -DMAIN $(AM_CFLAGS)
llr_LDADD = libcommon.la 
llr_SOURCES = llr.c logs.c
spamo_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
spamo_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
spamo_SOURCES = \
  cisml-sax.c \
  spamo.c \
  spamo-cisml.c \
  spamo-matches.c \
  spamo-output.c \
  spamo-scan.c

tomtom_CFLAGS = -DMAIN $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
tomtom_LDADD = libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
tomtom_SOURCES = tomtom.c
tree_CFLAGS = -DMAIN $(AM_CFLAGS)
tree_LDADD = libcommon.la 
tree_SOURCES = tree.c
qvalue_CFLAGS = -DMAIN $(AM_CFLAGS)
qvalue_LDADD = libcommon.la -lm
qvalue_SOURCES = qvalue.c
ranksum_test_CFLAGS = -DMAIN $(AM_CFLAGS)
ranksum_test_LDADD = libcommon.la -lm
ranksum_test_SOURCES = ranksum_test.c
reconcile_tree_alignment_CFLAGS = -DMAIN $(AM_CFLAGS)
reconcile_tree_alignment_LDADD = libcommon.la -lm
reconcile_tree_alignment_SOURCES = reconcile-tree-alignment.c
reduce_alignment_CFLAGS = -DMAIN $(AM_CFLAGS)
reduce_alignment_LDADD = libcommon.la -lm
reduce_alignment_SOURCES = reduce-alignment.c
remove_alignment_gaps_CFLAGS = -DMAIN $(AM_CFLAGS)
remove_alignment_gaps_LDADD = libcommon.la -lm
remove_alignment_gaps_SOURCES = remove-alignment-gaps.c
xsltproc_lite_CFLAGS = $(AM_CFLAGS) $(LIBXML2_CFLAGS) $(LIBEXSLT_CFLAGS) $(LIBXSLT_CFLAGS)
xsltproc_lite_LDADD = $(LIBXML2_LIBS) $(LIBEXSLT_LIBS) $(LIBXSLT_LIBS) -lm
xsltproc_lite_SOURCES = xsltproc_lite.c
CLEANFILES = dir.h projrel.h
DISTCLEANFILES = dir.h projrel.h

#all the header files
EXTRA_DIST = \
  aa.h \
  align.h \
  alignment.h \
  alphabet.h \
  ame.h \
  ama_scan.h \
  array.h \
  array-list.h \
  background.h \
  banner.h \
  beadstring.h \
  beadstring-xml.h \
  binary-search.h \
	binomial.h \
  buffer.h \
  build-hmm.h \
  calculate_p_y.h \
  ceqlogo.h \
  cisml-dtd.h \
  cisml.h \
  cisml-sax.h \
  clustalw-io.h \
  curves.h \
  diagram.h \
  dir.h \
  display_globals.h \
  display.h \
  dpalign.h \
  dp.h \
  dreme-sax.h \
  eps2png.h \
  em.h \
  empirical-qvalue.h \
  evomodel.h \
  evomodel_with_loss.h \
  fasta-io.h \
  fisher_exact.h \
  fcodon.h \
  fitevd.h \
  gendb.h \
  general.h \
  glam2_alignment.h \
  glam2_alphabet.h \
  glam2_args.h \
  glam2_column_sample.h \
  glam2_convolve.h \
  glam2_dirichlet.h \
  glam2_dna_prior.h \
  glam2_fasta.h \
  glam2_glam2_aln.h \
  glam2_glam2.h \
  glam2_heap.h \
  glam2_init.h \
  glam2_motif.h \
  glam2_output.h \
  glam2_recode3_20comp.h \
  glam2_scan_args.h \
  glam2_scan.h \
  glam2_scan_init.h \
  glam2_scan_output.h \
  glam2_site_sample.h \
  glam2_util.h \
  glam2_version.h \
  gomo_highlight.h \
  hash_alph.h \
  hash.h \
  hash_table.h \
  hash_table_string.h \
  hashu.h \
  heap.h \
  histogram.h \
  html-data.h \
	html-monolith.h \
  ic.h \
  io.h \
	json-writer.h \
  karlin.h \
  linked-list.h \
  llr.h \
  log-hmm.h \
  logodds.h \
  logs.h \
  macros.h \
  mast.h \
  match.h \
  matrix.h \
  mcast_match.h \
  meme-dtd.h \
  meme.h \
  meme-print-html.h \
  meme-sax.h \
  merger.h \
  message.h \
  metameme.h \
  meta-pssm-distr.h \
  mhmm-dtd.h \
  mhmm.h \
  mhmms.h \
  mhmmscan.h \
  mhmm-state.h \
  motif.h \
  motif-in.h \
  motif-in-common.h \
  motif-in-dreme-xml.h \
  motif-in-flags.h \
  motif-in-meme-html.h \
  motif-in-meme-text.h \
  motif-in-meme-xml.h \
  motif-spec.h \
  motif_regexp.h \
  motifs.h \
  motiph-scoring.h \
  mp.h \
  mtype.h \
  nrutil.h \
  object-list.h \
  order.h \
  params.h \
  partition.h \
  prior.h \
  prior-dist.h \
	projrel.h \
  data-block.h \
  data-block-reader.h \
  prior-reader-from-psp.h \
  psp.h \
  pssm-distr.h \
  pssm.h \
  qvalue.h \
  ramen.h \
  ramen_scan.h \
  ranksum_test.h \
  reservoir.h \
  rdb-matrix.h \
  read_csv.h \
  read-mhmm.h \
  read_seq_file.h \
  read_sequence.h \
  red-black-tree.h \
  regex-utils.h \
  regress.h \
  sax-parser-utils.h \
  scanned-sequence.h \
  scored-sites.h \
  seed_diffs.h \
  seed.h \
  seq.h \
  seq-reader-from-fasta.h \
  shuffle_int.h \
  simple-getopt.h \
  spamo-cisml.h \
  spamo-matches.h \
  spamo-output.h \
  spamo-scan.h \
  split.h \
  sp_matrix.h \
  star.h \
  string-builder.h \
  string-list.h \
  string-match.h \
  strlcpy.h \
  subst-matrix.h \
  substmatrix-table.h \
  tomtom.h \
  transfac.h \
  tree.h \
  ureadseq.h \
  user.h \
  utest.h \
  utils.h \
  wiggle-reader.h \
  write-mhmm.h \
  xml-out.h \
  xml-util.h \
  zscore.h

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj .old .svnignore
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcommon.la: $(libcommon_la_OBJECTS) $(libcommon_la_DEPENDENCIES) $(EXTRA_libcommon_la_DEPENDENCIES) 
	$(libcommon_la_LINK)  $(libcommon_la_OBJECTS) $(libcommon_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
alphtype$(EXEEXT): $(alphtype_OBJECTS) $(alphtype_DEPENDENCIES) $(EXTRA_alphtype_DEPENDENCIES) 
	@rm -f alphtype$(EXEEXT)
	$(alphtype_LINK) $(alphtype_OBJECTS) $(alphtype_LDADD) $(LIBS)
ama$(EXEEXT): $(ama_OBJECTS) $(ama_DEPENDENCIES) $(EXTRA_ama_DEPENDENCIES) 
	@rm -f ama$(EXEEXT)
	$(ama_LINK) $(ama_OBJECTS) $(ama_LDADD) $(LIBS)
ame$(EXEEXT): $(ame_OBJECTS) $(ame_DEPENDENCIES) $(EXTRA_ame_DEPENDENCIES) 
	@rm -f ame$(EXEEXT)
	$(ame_LINK) $(ame_OBJECTS) $(ame_LDADD) $(LIBS)
beadstring$(EXEEXT): $(beadstring_OBJECTS) $(beadstring_DEPENDENCIES) $(EXTRA_beadstring_DEPENDENCIES) 
	@rm -f beadstring$(EXEEXT)
	$(beadstring_LINK) $(beadstring_OBJECTS) $(beadstring_LDADD) $(LIBS)
centrimo$(EXEEXT): $(centrimo_OBJECTS) $(centrimo_DEPENDENCIES) $(EXTRA_centrimo_DEPENDENCIES) 
	@rm -f centrimo$(EXEEXT)
	$(centrimo_LINK) $(centrimo_OBJECTS) $(centrimo_LDADD) $(LIBS)
ceqlogo$(EXEEXT): $(ceqlogo_OBJECTS) $(ceqlogo_DEPENDENCIES) $(EXTRA_ceqlogo_DEPENDENCIES) 
	@rm -f ceqlogo$(EXEEXT)
	$(ceqlogo_LINK) $(ceqlogo_OBJECTS) $(ceqlogo_LDADD) $(LIBS)
clustalw-io$(EXEEXT): $(clustalw_io_OBJECTS) $(clustalw_io_DEPENDENCIES) $(EXTRA_clustalw_io_DEPENDENCIES) 
	@rm -f clustalw-io$(EXEEXT)
	$(clustalw_io_LINK) $(clustalw_io_OBJECTS) $(clustalw_io_LDADD) $(LIBS)
clustalw2fasta$(EXEEXT): $(clustalw2fasta_OBJECTS) $(clustalw2fasta_DEPENDENCIES) $(EXTRA_clustalw2fasta_DEPENDENCIES) 
	@rm -f clustalw2fasta$(EXEEXT)
	$(clustalw2fasta_LINK) $(clustalw2fasta_OBJECTS) $(clustalw2fasta_LDADD) $(LIBS)
clustalw2phylip$(EXEEXT): $(clustalw2phylip_OBJECTS) $(clustalw2phylip_DEPENDENCIES) $(EXTRA_clustalw2phylip_DEPENDENCIES) 
	@rm -f clustalw2phylip$(EXEEXT)
	$(clustalw2phylip_LINK) $(clustalw2phylip_OBJECTS) $(clustalw2phylip_LDADD) $(LIBS)
compute-prior-dist$(EXEEXT): $(compute_prior_dist_OBJECTS) $(compute_prior_dist_DEPENDENCIES) $(EXTRA_compute_prior_dist_DEPENDENCIES) 
	@rm -f compute-prior-dist$(EXEEXT)
	$(compute_prior_dist_LINK) $(compute_prior_dist_OBJECTS) $(compute_prior_dist_LDADD) $(LIBS)
compute-uniform-priors$(EXEEXT): $(compute_uniform_priors_OBJECTS) $(compute_uniform_priors_DEPENDENCIES) $(EXTRA_compute_uniform_priors_DEPENDENCIES) 
	@rm -f compute-uniform-priors$(EXEEXT)
	$(compute_uniform_priors_LINK) $(compute_uniform_priors_OBJECTS) $(compute_uniform_priors_LDADD) $(LIBS)
create-priors$(EXEEXT): $(create_priors_OBJECTS) $(create_priors_DEPENDENCIES) $(EXTRA_create_priors_DEPENDENCIES) 
	@rm -f create-priors$(EXEEXT)
	$(create_priors_LINK) $(create_priors_OBJECTS) $(create_priors_LDADD) $(LIBS)
draw-mhmm$(EXEEXT): $(draw_mhmm_OBJECTS) $(draw_mhmm_DEPENDENCIES) $(EXTRA_draw_mhmm_DEPENDENCIES) 
	@rm -f draw-mhmm$(EXEEXT)
	$(draw_mhmm_LINK) $(draw_mhmm_OBJECTS) $(draw_mhmm_LDADD) $(LIBS)
fasta-io$(EXEEXT): $(fasta_io_OBJECTS) $(fasta_io_DEPENDENCIES) $(EXTRA_fasta_io_DEPENDENCIES) 
	@rm -f fasta-io$(EXEEXT)
	$(fasta_io_LINK) $(fasta_io_OBJECTS) $(fasta_io_LDADD) $(LIBS)
fimo$(EXEEXT): $(fimo_OBJECTS) $(fimo_DEPENDENCIES) $(EXTRA_fimo_DEPENDENCIES) 
	@rm -f fimo$(EXEEXT)
	$(fimo_LINK) $(fimo_OBJECTS) $(fimo_LDADD) $(LIBS)
fitevd$(EXEEXT): $(fitevd_OBJECTS) $(fitevd_DEPENDENCIES) $(EXTRA_fitevd_DEPENDENCIES) 
	@rm -f fitevd$(EXEEXT)
	$(fitevd_LINK) $(fitevd_OBJECTS) $(fitevd_LDADD) $(LIBS)
gendb$(EXEEXT): $(gendb_OBJECTS) $(gendb_DEPENDENCIES) $(EXTRA_gendb_DEPENDENCIES) 
	@rm -f gendb$(EXEEXT)
	$(gendb_LINK) $(gendb_OBJECTS) $(gendb_LDADD) $(LIBS)
getsize$(EXEEXT): $(getsize_OBJECTS) $(getsize_DEPENDENCIES) $(EXTRA_getsize_DEPENDENCIES) 
	@rm -f getsize$(EXEEXT)
	$(LINK) $(getsize_OBJECTS) $(getsize_LDADD) $(LIBS)
glam2$(EXEEXT): $(glam2_OBJECTS) $(glam2_DEPENDENCIES) $(EXTRA_glam2_DEPENDENCIES) 
	@rm -f glam2$(EXEEXT)
	$(glam2_LINK) $(glam2_OBJECTS) $(glam2_LDADD) $(LIBS)
glam2format$(EXEEXT): $(glam2format_OBJECTS) $(glam2format_DEPENDENCIES) $(EXTRA_glam2format_DEPENDENCIES) 
	@rm -f glam2format$(EXEEXT)
	$(glam2format_LINK) $(glam2format_OBJECTS) $(glam2format_LDADD) $(LIBS)
glam2mask$(EXEEXT): $(glam2mask_OBJECTS) $(glam2mask_DEPENDENCIES) $(EXTRA_glam2mask_DEPENDENCIES) 
	@rm -f glam2mask$(EXEEXT)
	$(glam2mask_LINK) $(glam2mask_OBJECTS) $(glam2mask_LDADD) $(LIBS)
glam2scan$(EXEEXT): $(glam2scan_OBJECTS) $(glam2scan_DEPENDENCIES) $(EXTRA_glam2scan_DEPENDENCIES) 
	@rm -f glam2scan$(EXEEXT)
	$(glam2scan_LINK) $(glam2scan_OBJECTS) $(glam2scan_LDADD) $(LIBS)
gomo$(EXEEXT): $(gomo_OBJECTS) $(gomo_DEPENDENCIES) $(EXTRA_gomo_DEPENDENCIES) 
	@rm -f gomo$(EXEEXT)
	$(gomo_LINK) $(gomo_OBJECTS) $(gomo_LDADD) $(LIBS)
gomo_highlight$(EXEEXT): $(gomo_highlight_OBJECTS) $(gomo_highlight_DEPENDENCIES) $(EXTRA_gomo_highlight_DEPENDENCIES) 
	@rm -f gomo_highlight$(EXEEXT)
	$(gomo_highlight_LINK) $(gomo_highlight_OBJECTS) $(gomo_highlight_LDADD) $(LIBS)
llr$(EXEEXT): $(llr_OBJECTS) $(llr_DEPENDENCIES) $(EXTRA_llr_DEPENDENCIES) 
	@rm -f llr$(EXEEXT)
	$(llr_LINK) $(llr_OBJECTS) $(llr_LDADD) $(LIBS)
mast$(EXEEXT): $(mast_OBJECTS) $(mast_DEPENDENCIES) $(EXTRA_mast_DEPENDENCIES) 
	@rm -f mast$(EXEEXT)
	$(mast_LINK) $(mast_OBJECTS) $(mast_LDADD) $(LIBS)
mast2txt$(EXEEXT): $(mast2txt_OBJECTS) $(mast2txt_DEPENDENCIES) $(EXTRA_mast2txt_DEPENDENCIES) 
	@rm -f mast2txt$(EXEEXT)
	$(mast2txt_LINK) $(mast2txt_OBJECTS) $(mast2txt_LDADD) $(LIBS)
mcast$(EXEEXT): $(mcast_OBJECTS) $(mcast_DEPENDENCIES) $(EXTRA_mcast_DEPENDENCIES) 
	@rm -f mcast$(EXEEXT)
	$(mcast_LINK) $(mcast_OBJECTS) $(mcast_LDADD) $(LIBS)
meme-xml-html$(EXEEXT): $(meme_xml_html_OBJECTS) $(meme_xml_html_DEPENDENCIES) $(EXTRA_meme_xml_html_DEPENDENCIES) 
	@rm -f meme-xml-html$(EXEEXT)
	$(meme_xml_html_LINK) $(meme_xml_html_OBJECTS) $(meme_xml_html_LDADD) $(LIBS)
meme.bin$(EXEEXT): $(meme_bin_OBJECTS) $(meme_bin_DEPENDENCIES) $(EXTRA_meme_bin_DEPENDENCIES) 
	@rm -f meme.bin$(EXEEXT)
	$(meme_bin_LINK) $(meme_bin_OBJECTS) $(meme_bin_LDADD) $(LIBS)
meme2images$(EXEEXT): $(meme2images_OBJECTS) $(meme2images_DEPENDENCIES) $(EXTRA_meme2images_DEPENDENCIES) 
	@rm -f meme2images$(EXEEXT)
	$(meme2images_LINK) $(meme2images_OBJECTS) $(meme2images_LDADD) $(LIBS)
mhmm$(EXEEXT): $(mhmm_OBJECTS) $(mhmm_DEPENDENCIES) $(EXTRA_mhmm_DEPENDENCIES) 
	@rm -f mhmm$(EXEEXT)
	$(mhmm_LINK) $(mhmm_OBJECTS) $(mhmm_LDADD) $(LIBS)
mhmm-io$(EXEEXT): $(mhmm_io_OBJECTS) $(mhmm_io_DEPENDENCIES) $(EXTRA_mhmm_io_DEPENDENCIES) 
	@rm -f mhmm-io$(EXEEXT)
	$(mhmm_io_LINK) $(mhmm_io_OBJECTS) $(mhmm_io_LDADD) $(LIBS)
mhmme$(EXEEXT): $(mhmme_OBJECTS) $(mhmme_DEPENDENCIES) $(EXTRA_mhmme_DEPENDENCIES) 
	@rm -f mhmme$(EXEEXT)
	$(mhmme_LINK) $(mhmme_OBJECTS) $(mhmme_LDADD) $(LIBS)
mhmms$(EXEEXT): $(mhmms_OBJECTS) $(mhmms_DEPENDENCIES) $(EXTRA_mhmms_DEPENDENCIES) 
	@rm -f mhmms$(EXEEXT)
	$(mhmms_LINK) $(mhmms_OBJECTS) $(mhmms_LDADD) $(LIBS)
mhmmscan$(EXEEXT): $(mhmmscan_OBJECTS) $(mhmmscan_DEPENDENCIES) $(EXTRA_mhmmscan_DEPENDENCIES) 
	@rm -f mhmmscan$(EXEEXT)
	$(mhmmscan_LINK) $(mhmmscan_OBJECTS) $(mhmmscan_LDADD) $(LIBS)
motiph$(EXEEXT): $(motiph_OBJECTS) $(motiph_DEPENDENCIES) $(EXTRA_motiph_DEPENDENCIES) 
	@rm -f motiph$(EXEEXT)
	$(motiph_LINK) $(motiph_OBJECTS) $(motiph_LDADD) $(LIBS)
pmp_bf$(EXEEXT): $(pmp_bf_OBJECTS) $(pmp_bf_DEPENDENCIES) $(EXTRA_pmp_bf_DEPENDENCIES) 
	@rm -f pmp_bf$(EXEEXT)
	$(pmp_bf_LINK) $(pmp_bf_OBJECTS) $(pmp_bf_LDADD) $(LIBS)
qvalue$(EXEEXT): $(qvalue_OBJECTS) $(qvalue_DEPENDENCIES) $(EXTRA_qvalue_DEPENDENCIES) 
	@rm -f qvalue$(EXEEXT)
	$(qvalue_LINK) $(qvalue_OBJECTS) $(qvalue_LDADD) $(LIBS)
ramen$(EXEEXT): $(ramen_OBJECTS) $(ramen_DEPENDENCIES) $(EXTRA_ramen_DEPENDENCIES) 
	@rm -f ramen$(EXEEXT)
	$(ramen_LINK) $(ramen_OBJECTS) $(ramen_LDADD) $(LIBS)
ranksum_test$(EXEEXT): $(ranksum_test_OBJECTS) $(ranksum_test_DEPENDENCIES) $(EXTRA_ranksum_test_DEPENDENCIES) 
	@rm -f ranksum_test$(EXEEXT)
	$(ranksum_test_LINK) $(ranksum_test_OBJECTS) $(ranksum_test_LDADD) $(LIBS)
readseq$(EXEEXT): $(readseq_OBJECTS) $(readseq_DEPENDENCIES) $(EXTRA_readseq_DEPENDENCIES) 
	@rm -f readseq$(EXEEXT)
	$(readseq_LINK) $(readseq_OBJECTS) $(readseq_LDADD) $(LIBS)
reconcile-tree-alignment$(EXEEXT): $(reconcile_tree_alignment_OBJECTS) $(reconcile_tree_alignment_DEPENDENCIES) $(EXTRA_reconcile_tree_alignment_DEPENDENCIES) 
	@rm -f reconcile-tree-alignment$(EXEEXT)
	$(reconcile_tree_alignment_LINK) $(reconcile_tree_alignment_OBJECTS) $(reconcile_tree_alignment_LDADD) $(LIBS)
reduce-alignment$(EXEEXT): $(reduce_alignment_OBJECTS) $(reduce_alignment_DEPENDENCIES) $(EXTRA_reduce_alignment_DEPENDENCIES) 
	@rm -f reduce-alignment$(EXEEXT)
	$(reduce_alignment_LINK) $(reduce_alignment_OBJECTS) $(reduce_alignment_LDADD) $(LIBS)
remove-alignment-gaps$(EXEEXT): $(remove_alignment_gaps_OBJECTS) $(remove_alignment_gaps_DEPENDENCIES) $(EXTRA_remove_alignment_gaps_DEPENDENCIES) 
	@rm -f remove-alignment-gaps$(EXEEXT)
	$(remove_alignment_gaps_LINK) $(remove_alignment_gaps_OBJECTS) $(remove_alignment_gaps_LDADD) $(LIBS)
shadow$(EXEEXT): $(shadow_OBJECTS) $(shadow_DEPENDENCIES) $(EXTRA_shadow_DEPENDENCIES) 
	@rm -f shadow$(EXEEXT)
	$(shadow_LINK) $(shadow_OBJECTS) $(shadow_LDADD) $(LIBS)
spamo$(EXEEXT): $(spamo_OBJECTS) $(spamo_DEPENDENCIES) $(EXTRA_spamo_DEPENDENCIES) 
	@rm -f spamo$(EXEEXT)
	$(spamo_LINK) $(spamo_OBJECTS) $(spamo_LDADD) $(LIBS)
tomtom$(EXEEXT): $(tomtom_OBJECTS) $(tomtom_DEPENDENCIES) $(EXTRA_tomtom_DEPENDENCIES) 
	@rm -f tomtom$(EXEEXT)
	$(tomtom_LINK) $(tomtom_OBJECTS) $(tomtom_LDADD) $(LIBS)
tree$(EXEEXT): $(tree_OBJECTS) $(tree_DEPENDENCIES) $(EXTRA_tree_DEPENDENCIES) 
	@rm -f tree$(EXEEXT)
	$(tree_LINK) $(tree_OBJECTS) $(tree_LDADD) $(LIBS)
xsltproc_lite$(EXEEXT): $(xsltproc_lite_OBJECTS) $(xsltproc_lite_DEPENDENCIES) $(EXTRA_xsltproc_lite_DEPENDENCIES) 
	@rm -f xsltproc_lite$(EXEEXT)
	$(xsltproc_lite_LINK) $(xsltproc_lite_OBJECTS) $(xsltproc_lite_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alphtype-alphtype.Po
include ./$(DEPDIR)/ama-ama.Po
include ./$(DEPDIR)/ama-ama_scan.Po
include ./$(DEPDIR)/ame-ame.Po
include ./$(DEPDIR)/ame-html-monolith.Po
include ./$(DEPDIR)/ame-json-writer.Po
include ./$(DEPDIR)/ame-ramen_scan.Po
include ./$(DEPDIR)/beadstring-beadstring.Po
include ./$(DEPDIR)/centrimo-centrimo.Po
include ./$(DEPDIR)/centrimo-html-monolith.Po
include ./$(DEPDIR)/centrimo-json-writer.Po
include ./$(DEPDIR)/ceqlogo-ceqlogo.Po
include ./$(DEPDIR)/clustalw2fasta-clustalw2fasta.Po
include ./$(DEPDIR)/clustalw2phylip-clustalw2phylip.Po
include ./$(DEPDIR)/clustalw_io-clustalw-io.Po
include ./$(DEPDIR)/compute_prior_dist-compute-prior-dist.Po
include ./$(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Po
include ./$(DEPDIR)/create_priors-create-priors.Po
include ./$(DEPDIR)/draw_mhmm-draw-mhmm.Po
include ./$(DEPDIR)/draw_mhmm-read-mhmm.Po
include ./$(DEPDIR)/fasta_io-fasta-io.Po
include ./$(DEPDIR)/fimo-fimo.Po
include ./$(DEPDIR)/fitevd-fitevd.Po
include ./$(DEPDIR)/gendb-gendb.Po
include ./$(DEPDIR)/getsize.Po
include ./$(DEPDIR)/glam2-glam2_alphabet.Po
include ./$(DEPDIR)/glam2-glam2_args.Po
include ./$(DEPDIR)/glam2-glam2_column_sample.Po
include ./$(DEPDIR)/glam2-glam2_dirichlet.Po
include ./$(DEPDIR)/glam2-glam2_dna_prior.Po
include ./$(DEPDIR)/glam2-glam2_fasta.Po
include ./$(DEPDIR)/glam2-glam2_glam2.Po
include ./$(DEPDIR)/glam2-glam2_glam2_aln.Po
include ./$(DEPDIR)/glam2-glam2_init.Po
include ./$(DEPDIR)/glam2-glam2_output.Po
include ./$(DEPDIR)/glam2-glam2_recode3_20comp.Po
include ./$(DEPDIR)/glam2-glam2_site_sample.Po
include ./$(DEPDIR)/glam2-glam2_util.Po
include ./$(DEPDIR)/glam2format-glam2_alignment.Po
include ./$(DEPDIR)/glam2format-glam2_fasta.Po
include ./$(DEPDIR)/glam2format-glam2_glam2format.Po
include ./$(DEPDIR)/glam2format-glam2_util.Po
include ./$(DEPDIR)/glam2mask-glam2_alignment.Po
include ./$(DEPDIR)/glam2mask-glam2_fasta.Po
include ./$(DEPDIR)/glam2mask-glam2_glam2mask.Po
include ./$(DEPDIR)/glam2mask-glam2_util.Po
include ./$(DEPDIR)/glam2scan-glam2_alignment.Po
include ./$(DEPDIR)/glam2scan-glam2_alphabet.Po
include ./$(DEPDIR)/glam2scan-glam2_dirichlet.Po
include ./$(DEPDIR)/glam2scan-glam2_dna_prior.Po
include ./$(DEPDIR)/glam2scan-glam2_fasta.Po
include ./$(DEPDIR)/glam2scan-glam2_heap.Po
include ./$(DEPDIR)/glam2scan-glam2_motif.Po
include ./$(DEPDIR)/glam2scan-glam2_recode3_20comp.Po
include ./$(DEPDIR)/glam2scan-glam2_scan.Po
include ./$(DEPDIR)/glam2scan-glam2_scan_args.Po
include ./$(DEPDIR)/glam2scan-glam2_scan_init.Po
include ./$(DEPDIR)/glam2scan-glam2_scan_output.Po
include ./$(DEPDIR)/glam2scan-glam2_util.Po
include ./$(DEPDIR)/gomo-gomo.Po
include ./$(DEPDIR)/gomo-gomo_highlight.Po
include ./$(DEPDIR)/gomo-merger.Po
include ./$(DEPDIR)/gomo-ranksum_test.Po
include ./$(DEPDIR)/gomo-read_csv.Po
include ./$(DEPDIR)/gomo_highlight-gomo_highlight.Po
include ./$(DEPDIR)/libcommon_la-alignment.Plo
include ./$(DEPDIR)/libcommon_la-alphabet.Plo
include ./$(DEPDIR)/libcommon_la-array-list.Plo
include ./$(DEPDIR)/libcommon_la-array.Plo
include ./$(DEPDIR)/libcommon_la-background.Plo
include ./$(DEPDIR)/libcommon_la-binary-search.Plo
include ./$(DEPDIR)/libcommon_la-binomial.Plo
include ./$(DEPDIR)/libcommon_la-buffer.Plo
include ./$(DEPDIR)/libcommon_la-build-hmm.Plo
include ./$(DEPDIR)/libcommon_la-ceqlogo.Plo
include ./$(DEPDIR)/libcommon_la-cisml.Plo
include ./$(DEPDIR)/libcommon_la-clustalw-io.Plo
include ./$(DEPDIR)/libcommon_la-data-block-reader.Plo
include ./$(DEPDIR)/libcommon_la-data-block.Plo
include ./$(DEPDIR)/libcommon_la-dp.Plo
include ./$(DEPDIR)/libcommon_la-dreme-sax.Plo
include ./$(DEPDIR)/libcommon_la-empirical-qvalue.Plo
include ./$(DEPDIR)/libcommon_la-eps2png.Plo
include ./$(DEPDIR)/libcommon_la-evomodel.Plo
include ./$(DEPDIR)/libcommon_la-evomodel_with_loss.Plo
include ./$(DEPDIR)/libcommon_la-fasta-io.Plo
include ./$(DEPDIR)/libcommon_la-fisher_exact.Plo
include ./$(DEPDIR)/libcommon_la-fitevd.Plo
include ./$(DEPDIR)/libcommon_la-gendb.Plo
include ./$(DEPDIR)/libcommon_la-hash_alph.Plo
include ./$(DEPDIR)/libcommon_la-hash_table.Plo
include ./$(DEPDIR)/libcommon_la-heap.Plo
include ./$(DEPDIR)/libcommon_la-html-data.Plo
include ./$(DEPDIR)/libcommon_la-io.Plo
include ./$(DEPDIR)/libcommon_la-karlin.Plo
include ./$(DEPDIR)/libcommon_la-linked-list.Plo
include ./$(DEPDIR)/libcommon_la-log-hmm.Plo
include ./$(DEPDIR)/libcommon_la-logodds.Plo
include ./$(DEPDIR)/libcommon_la-mast-util.Plo
include ./$(DEPDIR)/libcommon_la-match.Plo
include ./$(DEPDIR)/libcommon_la-matrix.Plo
include ./$(DEPDIR)/libcommon_la-mcast_match.Plo
include ./$(DEPDIR)/libcommon_la-meme-sax.Plo
include ./$(DEPDIR)/libcommon_la-metameme.Plo
include ./$(DEPDIR)/libcommon_la-mhmm-state.Plo
include ./$(DEPDIR)/libcommon_la-mhmm.Plo
include ./$(DEPDIR)/libcommon_la-mhmms.Plo
include ./$(DEPDIR)/libcommon_la-mhmmscan.Plo
include ./$(DEPDIR)/libcommon_la-motif-in-common.Plo
include ./$(DEPDIR)/libcommon_la-motif-in-dreme-xml.Plo
include ./$(DEPDIR)/libcommon_la-motif-in-meme-html.Plo
include ./$(DEPDIR)/libcommon_la-motif-in-meme-text.Plo
include ./$(DEPDIR)/libcommon_la-motif-in-meme-xml.Plo
include ./$(DEPDIR)/libcommon_la-motif-in.Plo
include ./$(DEPDIR)/libcommon_la-motif.Plo
include ./$(DEPDIR)/libcommon_la-motif_regexp.Plo
include ./$(DEPDIR)/libcommon_la-motifs.Plo
include ./$(DEPDIR)/libcommon_la-motiph-scoring.Plo
include ./$(DEPDIR)/libcommon_la-object-list.Plo
include ./$(DEPDIR)/libcommon_la-order.Plo
include ./$(DEPDIR)/libcommon_la-prior-dist.Plo
include ./$(DEPDIR)/libcommon_la-prior-reader-from-psp.Plo
include ./$(DEPDIR)/libcommon_la-pssm-distr.Plo
include ./$(DEPDIR)/libcommon_la-pssm.Plo
include ./$(DEPDIR)/libcommon_la-qvalue.Plo
include ./$(DEPDIR)/libcommon_la-ranksum_test.Plo
include ./$(DEPDIR)/libcommon_la-rdb-matrix.Plo
include ./$(DEPDIR)/libcommon_la-read-mhmm.Plo
include ./$(DEPDIR)/libcommon_la-read_sequence.Plo
include ./$(DEPDIR)/libcommon_la-red-black-tree.Plo
include ./$(DEPDIR)/libcommon_la-regex-utils.Plo
include ./$(DEPDIR)/libcommon_la-regress.Plo
include ./$(DEPDIR)/libcommon_la-reservoir.Plo
include ./$(DEPDIR)/libcommon_la-sax-parser-utils.Plo
include ./$(DEPDIR)/libcommon_la-scanned-sequence.Plo
include ./$(DEPDIR)/libcommon_la-scored-sites.Plo
include ./$(DEPDIR)/libcommon_la-seq-reader-from-fasta.Plo
include ./$(DEPDIR)/libcommon_la-seq.Plo
include ./$(DEPDIR)/libcommon_la-simple-getopt.Plo
include ./$(DEPDIR)/libcommon_la-spearman-rank-correlation.Plo
include ./$(DEPDIR)/libcommon_la-string-builder.Plo
include ./$(DEPDIR)/libcommon_la-string-list.Plo
include ./$(DEPDIR)/libcommon_la-string-match.Plo
include ./$(DEPDIR)/libcommon_la-subst-matrix.Plo
include ./$(DEPDIR)/libcommon_la-substmatrix-table.Plo
include ./$(DEPDIR)/libcommon_la-transfac.Plo
include ./$(DEPDIR)/libcommon_la-tree.Plo
include ./$(DEPDIR)/libcommon_la-utils.Plo
include ./$(DEPDIR)/libcommon_la-wiggle-reader.Plo
include ./$(DEPDIR)/libcommon_la-write-mhmm.Plo
include ./$(DEPDIR)/libcommon_la-xml-out.Plo
include ./$(DEPDIR)/libcommon_la-xml-util.Plo
include ./$(DEPDIR)/llr-llr.Po
include ./$(DEPDIR)/llr-logs.Po
include ./$(DEPDIR)/mast-diagram.Po
include ./$(DEPDIR)/mast-mast.Po
include ./$(DEPDIR)/mast2txt-mast2txt.Po
include ./$(DEPDIR)/mcast-mcast.Po
include ./$(DEPDIR)/meme2images-meme2images.Po
include ./$(DEPDIR)/meme_bin-banner.Po
include ./$(DEPDIR)/meme_bin-branching_search.Po
include ./$(DEPDIR)/meme_bin-calculate_p_y.Po
include ./$(DEPDIR)/meme_bin-discretize.Po
include ./$(DEPDIR)/meme_bin-display.Po
include ./$(DEPDIR)/meme_bin-dpalign.Po
include ./$(DEPDIR)/meme_bin-em.Po
include ./$(DEPDIR)/meme_bin-init.Po
include ./$(DEPDIR)/meme_bin-justlike.Po
include ./$(DEPDIR)/meme_bin-likelihood.Po
include ./$(DEPDIR)/meme_bin-llr.Po
include ./$(DEPDIR)/meme_bin-logs.Po
include ./$(DEPDIR)/meme_bin-meme-print-html.Po
include ./$(DEPDIR)/meme_bin-meme.Po
include ./$(DEPDIR)/meme_bin-meme_util.Po
include ./$(DEPDIR)/meme_bin-message.Po
include ./$(DEPDIR)/meme_bin-mp.Po
include ./$(DEPDIR)/meme_bin-oops.Po
include ./$(DEPDIR)/meme_bin-partition.Po
include ./$(DEPDIR)/meme_bin-prior.Po
include ./$(DEPDIR)/meme_bin-psp.Po
include ./$(DEPDIR)/meme_bin-read_seq_file.Po
include ./$(DEPDIR)/meme_bin-seed.Po
include ./$(DEPDIR)/meme_bin-seed_diffs.Po
include ./$(DEPDIR)/meme_bin-seq2theta.Po
include ./$(DEPDIR)/meme_bin-sp_matrix.Po
include ./$(DEPDIR)/meme_bin-starts.Po
include ./$(DEPDIR)/meme_bin-subseq7.Po
include ./$(DEPDIR)/meme_bin-tcm.Po
include ./$(DEPDIR)/meme_bin-verbosity.Po
include ./$(DEPDIR)/meme_xml_html-meme-print-html.Po
include ./$(DEPDIR)/meme_xml_html-meme-xml-html.Po
include ./$(DEPDIR)/mhmm-mhmm.Po
include ./$(DEPDIR)/mhmm_io-mhmm-io.Po
include ./$(DEPDIR)/mhmme-mhmme.Po
include ./$(DEPDIR)/mhmms-mhmms.Po
include ./$(DEPDIR)/mhmmscan-mhmmscan.Po
include ./$(DEPDIR)/motiph-motiph.Po
include ./$(DEPDIR)/pmp_bf-pmp_bf.Po
include ./$(DEPDIR)/qvalue-qvalue.Po
include ./$(DEPDIR)/ramen-ramen.Po
include ./$(DEPDIR)/ramen-ramen_scan.Po
include ./$(DEPDIR)/ranksum_test-ranksum_test.Po
include ./$(DEPDIR)/readseq-readseq.Po
include ./$(DEPDIR)/readseq-ureadseq.Po
include ./$(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Po
include ./$(DEPDIR)/reduce_alignment-reduce-alignment.Po
include ./$(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Po
include ./$(DEPDIR)/shadow-shadow.Po
include ./$(DEPDIR)/spamo-cisml-sax.Po
include ./$(DEPDIR)/spamo-spamo-cisml.Po
include ./$(DEPDIR)/spamo-spamo-matches.Po
include ./$(DEPDIR)/spamo-spamo-output.Po
include ./$(DEPDIR)/spamo-spamo-scan.Po
include ./$(DEPDIR)/spamo-spamo.Po
include ./$(DEPDIR)/tomtom-tomtom.Po
include ./$(DEPDIR)/tree-tree.Po
include ./$(DEPDIR)/xsltproc_lite-xsltproc_lite.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libcommon_la-alignment.lo: alignment.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-alignment.lo -MD -MP -MF $(DEPDIR)/libcommon_la-alignment.Tpo -c -o libcommon_la-alignment.lo `test -f 'alignment.c' || echo '$(srcdir)/'`alignment.c
	$(am__mv) $(DEPDIR)/libcommon_la-alignment.Tpo $(DEPDIR)/libcommon_la-alignment.Plo
#	source='alignment.c' object='libcommon_la-alignment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-alignment.lo `test -f 'alignment.c' || echo '$(srcdir)/'`alignment.c

libcommon_la-alphabet.lo: alphabet.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-alphabet.lo -MD -MP -MF $(DEPDIR)/libcommon_la-alphabet.Tpo -c -o libcommon_la-alphabet.lo `test -f 'alphabet.c' || echo '$(srcdir)/'`alphabet.c
	$(am__mv) $(DEPDIR)/libcommon_la-alphabet.Tpo $(DEPDIR)/libcommon_la-alphabet.Plo
#	source='alphabet.c' object='libcommon_la-alphabet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-alphabet.lo `test -f 'alphabet.c' || echo '$(srcdir)/'`alphabet.c

libcommon_la-array.lo: array.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-array.lo -MD -MP -MF $(DEPDIR)/libcommon_la-array.Tpo -c -o libcommon_la-array.lo `test -f 'array.c' || echo '$(srcdir)/'`array.c
	$(am__mv) $(DEPDIR)/libcommon_la-array.Tpo $(DEPDIR)/libcommon_la-array.Plo
#	source='array.c' object='libcommon_la-array.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-array.lo `test -f 'array.c' || echo '$(srcdir)/'`array.c

libcommon_la-array-list.lo: array-list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-array-list.lo -MD -MP -MF $(DEPDIR)/libcommon_la-array-list.Tpo -c -o libcommon_la-array-list.lo `test -f 'array-list.c' || echo '$(srcdir)/'`array-list.c
	$(am__mv) $(DEPDIR)/libcommon_la-array-list.Tpo $(DEPDIR)/libcommon_la-array-list.Plo
#	source='array-list.c' object='libcommon_la-array-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-array-list.lo `test -f 'array-list.c' || echo '$(srcdir)/'`array-list.c

libcommon_la-background.lo: background.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-background.lo -MD -MP -MF $(DEPDIR)/libcommon_la-background.Tpo -c -o libcommon_la-background.lo `test -f 'background.c' || echo '$(srcdir)/'`background.c
	$(am__mv) $(DEPDIR)/libcommon_la-background.Tpo $(DEPDIR)/libcommon_la-background.Plo
#	source='background.c' object='libcommon_la-background.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-background.lo `test -f 'background.c' || echo '$(srcdir)/'`background.c

libcommon_la-binary-search.lo: binary-search.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-binary-search.lo -MD -MP -MF $(DEPDIR)/libcommon_la-binary-search.Tpo -c -o libcommon_la-binary-search.lo `test -f 'binary-search.c' || echo '$(srcdir)/'`binary-search.c
	$(am__mv) $(DEPDIR)/libcommon_la-binary-search.Tpo $(DEPDIR)/libcommon_la-binary-search.Plo
#	source='binary-search.c' object='libcommon_la-binary-search.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-binary-search.lo `test -f 'binary-search.c' || echo '$(srcdir)/'`binary-search.c

libcommon_la-binomial.lo: binomial.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-binomial.lo -MD -MP -MF $(DEPDIR)/libcommon_la-binomial.Tpo -c -o libcommon_la-binomial.lo `test -f 'binomial.c' || echo '$(srcdir)/'`binomial.c
	$(am__mv) $(DEPDIR)/libcommon_la-binomial.Tpo $(DEPDIR)/libcommon_la-binomial.Plo
#	source='binomial.c' object='libcommon_la-binomial.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-binomial.lo `test -f 'binomial.c' || echo '$(srcdir)/'`binomial.c

libcommon_la-build-hmm.lo: build-hmm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-build-hmm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-build-hmm.Tpo -c -o libcommon_la-build-hmm.lo `test -f 'build-hmm.c' || echo '$(srcdir)/'`build-hmm.c
	$(am__mv) $(DEPDIR)/libcommon_la-build-hmm.Tpo $(DEPDIR)/libcommon_la-build-hmm.Plo
#	source='build-hmm.c' object='libcommon_la-build-hmm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-build-hmm.lo `test -f 'build-hmm.c' || echo '$(srcdir)/'`build-hmm.c

libcommon_la-buffer.lo: buffer.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-buffer.lo -MD -MP -MF $(DEPDIR)/libcommon_la-buffer.Tpo -c -o libcommon_la-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c
	$(am__mv) $(DEPDIR)/libcommon_la-buffer.Tpo $(DEPDIR)/libcommon_la-buffer.Plo
#	source='buffer.c' object='libcommon_la-buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

libcommon_la-ceqlogo.lo: ceqlogo.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-ceqlogo.lo -MD -MP -MF $(DEPDIR)/libcommon_la-ceqlogo.Tpo -c -o libcommon_la-ceqlogo.lo `test -f 'ceqlogo.c' || echo '$(srcdir)/'`ceqlogo.c
	$(am__mv) $(DEPDIR)/libcommon_la-ceqlogo.Tpo $(DEPDIR)/libcommon_la-ceqlogo.Plo
#	source='ceqlogo.c' object='libcommon_la-ceqlogo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-ceqlogo.lo `test -f 'ceqlogo.c' || echo '$(srcdir)/'`ceqlogo.c

libcommon_la-cisml.lo: cisml.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-cisml.lo -MD -MP -MF $(DEPDIR)/libcommon_la-cisml.Tpo -c -o libcommon_la-cisml.lo `test -f 'cisml.c' || echo '$(srcdir)/'`cisml.c
	$(am__mv) $(DEPDIR)/libcommon_la-cisml.Tpo $(DEPDIR)/libcommon_la-cisml.Plo
#	source='cisml.c' object='libcommon_la-cisml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-cisml.lo `test -f 'cisml.c' || echo '$(srcdir)/'`cisml.c

libcommon_la-clustalw-io.lo: clustalw-io.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-clustalw-io.lo -MD -MP -MF $(DEPDIR)/libcommon_la-clustalw-io.Tpo -c -o libcommon_la-clustalw-io.lo `test -f 'clustalw-io.c' || echo '$(srcdir)/'`clustalw-io.c
	$(am__mv) $(DEPDIR)/libcommon_la-clustalw-io.Tpo $(DEPDIR)/libcommon_la-clustalw-io.Plo
#	source='clustalw-io.c' object='libcommon_la-clustalw-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-clustalw-io.lo `test -f 'clustalw-io.c' || echo '$(srcdir)/'`clustalw-io.c

libcommon_la-dp.lo: dp.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-dp.lo -MD -MP -MF $(DEPDIR)/libcommon_la-dp.Tpo -c -o libcommon_la-dp.lo `test -f 'dp.c' || echo '$(srcdir)/'`dp.c
	$(am__mv) $(DEPDIR)/libcommon_la-dp.Tpo $(DEPDIR)/libcommon_la-dp.Plo
#	source='dp.c' object='libcommon_la-dp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-dp.lo `test -f 'dp.c' || echo '$(srcdir)/'`dp.c

libcommon_la-dreme-sax.lo: dreme-sax.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-dreme-sax.lo -MD -MP -MF $(DEPDIR)/libcommon_la-dreme-sax.Tpo -c -o libcommon_la-dreme-sax.lo `test -f 'dreme-sax.c' || echo '$(srcdir)/'`dreme-sax.c
	$(am__mv) $(DEPDIR)/libcommon_la-dreme-sax.Tpo $(DEPDIR)/libcommon_la-dreme-sax.Plo
#	source='dreme-sax.c' object='libcommon_la-dreme-sax.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-dreme-sax.lo `test -f 'dreme-sax.c' || echo '$(srcdir)/'`dreme-sax.c

libcommon_la-eps2png.lo: eps2png.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-eps2png.lo -MD -MP -MF $(DEPDIR)/libcommon_la-eps2png.Tpo -c -o libcommon_la-eps2png.lo `test -f 'eps2png.c' || echo '$(srcdir)/'`eps2png.c
	$(am__mv) $(DEPDIR)/libcommon_la-eps2png.Tpo $(DEPDIR)/libcommon_la-eps2png.Plo
#	source='eps2png.c' object='libcommon_la-eps2png.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-eps2png.lo `test -f 'eps2png.c' || echo '$(srcdir)/'`eps2png.c

libcommon_la-empirical-qvalue.lo: empirical-qvalue.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-empirical-qvalue.lo -MD -MP -MF $(DEPDIR)/libcommon_la-empirical-qvalue.Tpo -c -o libcommon_la-empirical-qvalue.lo `test -f 'empirical-qvalue.c' || echo '$(srcdir)/'`empirical-qvalue.c
	$(am__mv) $(DEPDIR)/libcommon_la-empirical-qvalue.Tpo $(DEPDIR)/libcommon_la-empirical-qvalue.Plo
#	source='empirical-qvalue.c' object='libcommon_la-empirical-qvalue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-empirical-qvalue.lo `test -f 'empirical-qvalue.c' || echo '$(srcdir)/'`empirical-qvalue.c

libcommon_la-evomodel.lo: evomodel.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-evomodel.lo -MD -MP -MF $(DEPDIR)/libcommon_la-evomodel.Tpo -c -o libcommon_la-evomodel.lo `test -f 'evomodel.c' || echo '$(srcdir)/'`evomodel.c
	$(am__mv) $(DEPDIR)/libcommon_la-evomodel.Tpo $(DEPDIR)/libcommon_la-evomodel.Plo
#	source='evomodel.c' object='libcommon_la-evomodel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-evomodel.lo `test -f 'evomodel.c' || echo '$(srcdir)/'`evomodel.c

libcommon_la-evomodel_with_loss.lo: evomodel_with_loss.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-evomodel_with_loss.lo -MD -MP -MF $(DEPDIR)/libcommon_la-evomodel_with_loss.Tpo -c -o libcommon_la-evomodel_with_loss.lo `test -f 'evomodel_with_loss.c' || echo '$(srcdir)/'`evomodel_with_loss.c
	$(am__mv) $(DEPDIR)/libcommon_la-evomodel_with_loss.Tpo $(DEPDIR)/libcommon_la-evomodel_with_loss.Plo
#	source='evomodel_with_loss.c' object='libcommon_la-evomodel_with_loss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-evomodel_with_loss.lo `test -f 'evomodel_with_loss.c' || echo '$(srcdir)/'`evomodel_with_loss.c

libcommon_la-fasta-io.lo: fasta-io.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-fasta-io.lo -MD -MP -MF $(DEPDIR)/libcommon_la-fasta-io.Tpo -c -o libcommon_la-fasta-io.lo `test -f 'fasta-io.c' || echo '$(srcdir)/'`fasta-io.c
	$(am__mv) $(DEPDIR)/libcommon_la-fasta-io.Tpo $(DEPDIR)/libcommon_la-fasta-io.Plo
#	source='fasta-io.c' object='libcommon_la-fasta-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-fasta-io.lo `test -f 'fasta-io.c' || echo '$(srcdir)/'`fasta-io.c

libcommon_la-fisher_exact.lo: fisher_exact.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-fisher_exact.lo -MD -MP -MF $(DEPDIR)/libcommon_la-fisher_exact.Tpo -c -o libcommon_la-fisher_exact.lo `test -f 'fisher_exact.c' || echo '$(srcdir)/'`fisher_exact.c
	$(am__mv) $(DEPDIR)/libcommon_la-fisher_exact.Tpo $(DEPDIR)/libcommon_la-fisher_exact.Plo
#	source='fisher_exact.c' object='libcommon_la-fisher_exact.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-fisher_exact.lo `test -f 'fisher_exact.c' || echo '$(srcdir)/'`fisher_exact.c

libcommon_la-fitevd.lo: fitevd.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-fitevd.lo -MD -MP -MF $(DEPDIR)/libcommon_la-fitevd.Tpo -c -o libcommon_la-fitevd.lo `test -f 'fitevd.c' || echo '$(srcdir)/'`fitevd.c
	$(am__mv) $(DEPDIR)/libcommon_la-fitevd.Tpo $(DEPDIR)/libcommon_la-fitevd.Plo
#	source='fitevd.c' object='libcommon_la-fitevd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-fitevd.lo `test -f 'fitevd.c' || echo '$(srcdir)/'`fitevd.c

libcommon_la-gendb.lo: gendb.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-gendb.lo -MD -MP -MF $(DEPDIR)/libcommon_la-gendb.Tpo -c -o libcommon_la-gendb.lo `test -f 'gendb.c' || echo '$(srcdir)/'`gendb.c
	$(am__mv) $(DEPDIR)/libcommon_la-gendb.Tpo $(DEPDIR)/libcommon_la-gendb.Plo
#	source='gendb.c' object='libcommon_la-gendb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-gendb.lo `test -f 'gendb.c' || echo '$(srcdir)/'`gendb.c

libcommon_la-hash_alph.lo: hash_alph.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-hash_alph.lo -MD -MP -MF $(DEPDIR)/libcommon_la-hash_alph.Tpo -c -o libcommon_la-hash_alph.lo `test -f 'hash_alph.c' || echo '$(srcdir)/'`hash_alph.c
	$(am__mv) $(DEPDIR)/libcommon_la-hash_alph.Tpo $(DEPDIR)/libcommon_la-hash_alph.Plo
#	source='hash_alph.c' object='libcommon_la-hash_alph.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-hash_alph.lo `test -f 'hash_alph.c' || echo '$(srcdir)/'`hash_alph.c

libcommon_la-hash_table.lo: hash_table.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-hash_table.lo -MD -MP -MF $(DEPDIR)/libcommon_la-hash_table.Tpo -c -o libcommon_la-hash_table.lo `test -f 'hash_table.c' || echo '$(srcdir)/'`hash_table.c
	$(am__mv) $(DEPDIR)/libcommon_la-hash_table.Tpo $(DEPDIR)/libcommon_la-hash_table.Plo
#	source='hash_table.c' object='libcommon_la-hash_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-hash_table.lo `test -f 'hash_table.c' || echo '$(srcdir)/'`hash_table.c

libcommon_la-heap.lo: heap.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-heap.lo -MD -MP -MF $(DEPDIR)/libcommon_la-heap.Tpo -c -o libcommon_la-heap.lo `test -f 'heap.c' || echo '$(srcdir)/'`heap.c
	$(am__mv) $(DEPDIR)/libcommon_la-heap.Tpo $(DEPDIR)/libcommon_la-heap.Plo
#	source='heap.c' object='libcommon_la-heap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-heap.lo `test -f 'heap.c' || echo '$(srcdir)/'`heap.c

libcommon_la-html-data.lo: html-data.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-html-data.lo -MD -MP -MF $(DEPDIR)/libcommon_la-html-data.Tpo -c -o libcommon_la-html-data.lo `test -f 'html-data.c' || echo '$(srcdir)/'`html-data.c
	$(am__mv) $(DEPDIR)/libcommon_la-html-data.Tpo $(DEPDIR)/libcommon_la-html-data.Plo
#	source='html-data.c' object='libcommon_la-html-data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-html-data.lo `test -f 'html-data.c' || echo '$(srcdir)/'`html-data.c

libcommon_la-io.lo: io.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-io.lo -MD -MP -MF $(DEPDIR)/libcommon_la-io.Tpo -c -o libcommon_la-io.lo `test -f 'io.c' || echo '$(srcdir)/'`io.c
	$(am__mv) $(DEPDIR)/libcommon_la-io.Tpo $(DEPDIR)/libcommon_la-io.Plo
#	source='io.c' object='libcommon_la-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-io.lo `test -f 'io.c' || echo '$(srcdir)/'`io.c

libcommon_la-karlin.lo: karlin.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-karlin.lo -MD -MP -MF $(DEPDIR)/libcommon_la-karlin.Tpo -c -o libcommon_la-karlin.lo `test -f 'karlin.c' || echo '$(srcdir)/'`karlin.c
	$(am__mv) $(DEPDIR)/libcommon_la-karlin.Tpo $(DEPDIR)/libcommon_la-karlin.Plo
#	source='karlin.c' object='libcommon_la-karlin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-karlin.lo `test -f 'karlin.c' || echo '$(srcdir)/'`karlin.c

libcommon_la-linked-list.lo: linked-list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-linked-list.lo -MD -MP -MF $(DEPDIR)/libcommon_la-linked-list.Tpo -c -o libcommon_la-linked-list.lo `test -f 'linked-list.c' || echo '$(srcdir)/'`linked-list.c
	$(am__mv) $(DEPDIR)/libcommon_la-linked-list.Tpo $(DEPDIR)/libcommon_la-linked-list.Plo
#	source='linked-list.c' object='libcommon_la-linked-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-linked-list.lo `test -f 'linked-list.c' || echo '$(srcdir)/'`linked-list.c

libcommon_la-log-hmm.lo: log-hmm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-log-hmm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-log-hmm.Tpo -c -o libcommon_la-log-hmm.lo `test -f 'log-hmm.c' || echo '$(srcdir)/'`log-hmm.c
	$(am__mv) $(DEPDIR)/libcommon_la-log-hmm.Tpo $(DEPDIR)/libcommon_la-log-hmm.Plo
#	source='log-hmm.c' object='libcommon_la-log-hmm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-log-hmm.lo `test -f 'log-hmm.c' || echo '$(srcdir)/'`log-hmm.c

libcommon_la-logodds.lo: logodds.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-logodds.lo -MD -MP -MF $(DEPDIR)/libcommon_la-logodds.Tpo -c -o libcommon_la-logodds.lo `test -f 'logodds.c' || echo '$(srcdir)/'`logodds.c
	$(am__mv) $(DEPDIR)/libcommon_la-logodds.Tpo $(DEPDIR)/libcommon_la-logodds.Plo
#	source='logodds.c' object='libcommon_la-logodds.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-logodds.lo `test -f 'logodds.c' || echo '$(srcdir)/'`logodds.c

libcommon_la-mast-util.lo: mast-util.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mast-util.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mast-util.Tpo -c -o libcommon_la-mast-util.lo `test -f 'mast-util.c' || echo '$(srcdir)/'`mast-util.c
	$(am__mv) $(DEPDIR)/libcommon_la-mast-util.Tpo $(DEPDIR)/libcommon_la-mast-util.Plo
#	source='mast-util.c' object='libcommon_la-mast-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mast-util.lo `test -f 'mast-util.c' || echo '$(srcdir)/'`mast-util.c

libcommon_la-match.lo: match.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-match.lo -MD -MP -MF $(DEPDIR)/libcommon_la-match.Tpo -c -o libcommon_la-match.lo `test -f 'match.c' || echo '$(srcdir)/'`match.c
	$(am__mv) $(DEPDIR)/libcommon_la-match.Tpo $(DEPDIR)/libcommon_la-match.Plo
#	source='match.c' object='libcommon_la-match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-match.lo `test -f 'match.c' || echo '$(srcdir)/'`match.c

libcommon_la-matrix.lo: matrix.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-matrix.lo -MD -MP -MF $(DEPDIR)/libcommon_la-matrix.Tpo -c -o libcommon_la-matrix.lo `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c
	$(am__mv) $(DEPDIR)/libcommon_la-matrix.Tpo $(DEPDIR)/libcommon_la-matrix.Plo
#	source='matrix.c' object='libcommon_la-matrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-matrix.lo `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c

libcommon_la-mcast_match.lo: mcast_match.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mcast_match.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mcast_match.Tpo -c -o libcommon_la-mcast_match.lo `test -f 'mcast_match.c' || echo '$(srcdir)/'`mcast_match.c
	$(am__mv) $(DEPDIR)/libcommon_la-mcast_match.Tpo $(DEPDIR)/libcommon_la-mcast_match.Plo
#	source='mcast_match.c' object='libcommon_la-mcast_match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mcast_match.lo `test -f 'mcast_match.c' || echo '$(srcdir)/'`mcast_match.c

libcommon_la-meme-sax.lo: meme-sax.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-meme-sax.lo -MD -MP -MF $(DEPDIR)/libcommon_la-meme-sax.Tpo -c -o libcommon_la-meme-sax.lo `test -f 'meme-sax.c' || echo '$(srcdir)/'`meme-sax.c
	$(am__mv) $(DEPDIR)/libcommon_la-meme-sax.Tpo $(DEPDIR)/libcommon_la-meme-sax.Plo
#	source='meme-sax.c' object='libcommon_la-meme-sax.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-meme-sax.lo `test -f 'meme-sax.c' || echo '$(srcdir)/'`meme-sax.c

libcommon_la-metameme.lo: metameme.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-metameme.lo -MD -MP -MF $(DEPDIR)/libcommon_la-metameme.Tpo -c -o libcommon_la-metameme.lo `test -f 'metameme.c' || echo '$(srcdir)/'`metameme.c
	$(am__mv) $(DEPDIR)/libcommon_la-metameme.Tpo $(DEPDIR)/libcommon_la-metameme.Plo
#	source='metameme.c' object='libcommon_la-metameme.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-metameme.lo `test -f 'metameme.c' || echo '$(srcdir)/'`metameme.c

libcommon_la-mhmm.lo: mhmm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mhmm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mhmm.Tpo -c -o libcommon_la-mhmm.lo `test -f 'mhmm.c' || echo '$(srcdir)/'`mhmm.c
	$(am__mv) $(DEPDIR)/libcommon_la-mhmm.Tpo $(DEPDIR)/libcommon_la-mhmm.Plo
#	source='mhmm.c' object='libcommon_la-mhmm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mhmm.lo `test -f 'mhmm.c' || echo '$(srcdir)/'`mhmm.c

libcommon_la-mhmms.lo: mhmms.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mhmms.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mhmms.Tpo -c -o libcommon_la-mhmms.lo `test -f 'mhmms.c' || echo '$(srcdir)/'`mhmms.c
	$(am__mv) $(DEPDIR)/libcommon_la-mhmms.Tpo $(DEPDIR)/libcommon_la-mhmms.Plo
#	source='mhmms.c' object='libcommon_la-mhmms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mhmms.lo `test -f 'mhmms.c' || echo '$(srcdir)/'`mhmms.c

libcommon_la-mhmmscan.lo: mhmmscan.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mhmmscan.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mhmmscan.Tpo -c -o libcommon_la-mhmmscan.lo `test -f 'mhmmscan.c' || echo '$(srcdir)/'`mhmmscan.c
	$(am__mv) $(DEPDIR)/libcommon_la-mhmmscan.Tpo $(DEPDIR)/libcommon_la-mhmmscan.Plo
#	source='mhmmscan.c' object='libcommon_la-mhmmscan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mhmmscan.lo `test -f 'mhmmscan.c' || echo '$(srcdir)/'`mhmmscan.c

libcommon_la-mhmm-state.lo: mhmm-state.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-mhmm-state.lo -MD -MP -MF $(DEPDIR)/libcommon_la-mhmm-state.Tpo -c -o libcommon_la-mhmm-state.lo `test -f 'mhmm-state.c' || echo '$(srcdir)/'`mhmm-state.c
	$(am__mv) $(DEPDIR)/libcommon_la-mhmm-state.Tpo $(DEPDIR)/libcommon_la-mhmm-state.Plo
#	source='mhmm-state.c' object='libcommon_la-mhmm-state.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-mhmm-state.lo `test -f 'mhmm-state.c' || echo '$(srcdir)/'`mhmm-state.c

libcommon_la-motif-in.lo: motif-in.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in.Tpo -c -o libcommon_la-motif-in.lo `test -f 'motif-in.c' || echo '$(srcdir)/'`motif-in.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in.Tpo $(DEPDIR)/libcommon_la-motif-in.Plo
#	source='motif-in.c' object='libcommon_la-motif-in.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in.lo `test -f 'motif-in.c' || echo '$(srcdir)/'`motif-in.c

libcommon_la-motif-in-common.lo: motif-in-common.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in-common.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in-common.Tpo -c -o libcommon_la-motif-in-common.lo `test -f 'motif-in-common.c' || echo '$(srcdir)/'`motif-in-common.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in-common.Tpo $(DEPDIR)/libcommon_la-motif-in-common.Plo
#	source='motif-in-common.c' object='libcommon_la-motif-in-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in-common.lo `test -f 'motif-in-common.c' || echo '$(srcdir)/'`motif-in-common.c

libcommon_la-motif-in-dreme-xml.lo: motif-in-dreme-xml.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in-dreme-xml.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in-dreme-xml.Tpo -c -o libcommon_la-motif-in-dreme-xml.lo `test -f 'motif-in-dreme-xml.c' || echo '$(srcdir)/'`motif-in-dreme-xml.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in-dreme-xml.Tpo $(DEPDIR)/libcommon_la-motif-in-dreme-xml.Plo
#	source='motif-in-dreme-xml.c' object='libcommon_la-motif-in-dreme-xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in-dreme-xml.lo `test -f 'motif-in-dreme-xml.c' || echo '$(srcdir)/'`motif-in-dreme-xml.c

libcommon_la-motif-in-meme-html.lo: motif-in-meme-html.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in-meme-html.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in-meme-html.Tpo -c -o libcommon_la-motif-in-meme-html.lo `test -f 'motif-in-meme-html.c' || echo '$(srcdir)/'`motif-in-meme-html.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in-meme-html.Tpo $(DEPDIR)/libcommon_la-motif-in-meme-html.Plo
#	source='motif-in-meme-html.c' object='libcommon_la-motif-in-meme-html.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in-meme-html.lo `test -f 'motif-in-meme-html.c' || echo '$(srcdir)/'`motif-in-meme-html.c

libcommon_la-motif-in-meme-text.lo: motif-in-meme-text.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in-meme-text.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in-meme-text.Tpo -c -o libcommon_la-motif-in-meme-text.lo `test -f 'motif-in-meme-text.c' || echo '$(srcdir)/'`motif-in-meme-text.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in-meme-text.Tpo $(DEPDIR)/libcommon_la-motif-in-meme-text.Plo
#	source='motif-in-meme-text.c' object='libcommon_la-motif-in-meme-text.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in-meme-text.lo `test -f 'motif-in-meme-text.c' || echo '$(srcdir)/'`motif-in-meme-text.c

libcommon_la-motif-in-meme-xml.lo: motif-in-meme-xml.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif-in-meme-xml.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif-in-meme-xml.Tpo -c -o libcommon_la-motif-in-meme-xml.lo `test -f 'motif-in-meme-xml.c' || echo '$(srcdir)/'`motif-in-meme-xml.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif-in-meme-xml.Tpo $(DEPDIR)/libcommon_la-motif-in-meme-xml.Plo
#	source='motif-in-meme-xml.c' object='libcommon_la-motif-in-meme-xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif-in-meme-xml.lo `test -f 'motif-in-meme-xml.c' || echo '$(srcdir)/'`motif-in-meme-xml.c

libcommon_la-motif.lo: motif.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif.Tpo -c -o libcommon_la-motif.lo `test -f 'motif.c' || echo '$(srcdir)/'`motif.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif.Tpo $(DEPDIR)/libcommon_la-motif.Plo
#	source='motif.c' object='libcommon_la-motif.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif.lo `test -f 'motif.c' || echo '$(srcdir)/'`motif.c

libcommon_la-motif_regexp.lo: motif_regexp.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motif_regexp.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motif_regexp.Tpo -c -o libcommon_la-motif_regexp.lo `test -f 'motif_regexp.c' || echo '$(srcdir)/'`motif_regexp.c
	$(am__mv) $(DEPDIR)/libcommon_la-motif_regexp.Tpo $(DEPDIR)/libcommon_la-motif_regexp.Plo
#	source='motif_regexp.c' object='libcommon_la-motif_regexp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motif_regexp.lo `test -f 'motif_regexp.c' || echo '$(srcdir)/'`motif_regexp.c

libcommon_la-motifs.lo: motifs.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motifs.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motifs.Tpo -c -o libcommon_la-motifs.lo `test -f 'motifs.c' || echo '$(srcdir)/'`motifs.c
	$(am__mv) $(DEPDIR)/libcommon_la-motifs.Tpo $(DEPDIR)/libcommon_la-motifs.Plo
#	source='motifs.c' object='libcommon_la-motifs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motifs.lo `test -f 'motifs.c' || echo '$(srcdir)/'`motifs.c

libcommon_la-motiph-scoring.lo: motiph-scoring.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-motiph-scoring.lo -MD -MP -MF $(DEPDIR)/libcommon_la-motiph-scoring.Tpo -c -o libcommon_la-motiph-scoring.lo `test -f 'motiph-scoring.c' || echo '$(srcdir)/'`motiph-scoring.c
	$(am__mv) $(DEPDIR)/libcommon_la-motiph-scoring.Tpo $(DEPDIR)/libcommon_la-motiph-scoring.Plo
#	source='motiph-scoring.c' object='libcommon_la-motiph-scoring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-motiph-scoring.lo `test -f 'motiph-scoring.c' || echo '$(srcdir)/'`motiph-scoring.c

libcommon_la-object-list.lo: object-list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-object-list.lo -MD -MP -MF $(DEPDIR)/libcommon_la-object-list.Tpo -c -o libcommon_la-object-list.lo `test -f 'object-list.c' || echo '$(srcdir)/'`object-list.c
	$(am__mv) $(DEPDIR)/libcommon_la-object-list.Tpo $(DEPDIR)/libcommon_la-object-list.Plo
#	source='object-list.c' object='libcommon_la-object-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-object-list.lo `test -f 'object-list.c' || echo '$(srcdir)/'`object-list.c

libcommon_la-order.lo: order.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-order.lo -MD -MP -MF $(DEPDIR)/libcommon_la-order.Tpo -c -o libcommon_la-order.lo `test -f 'order.c' || echo '$(srcdir)/'`order.c
	$(am__mv) $(DEPDIR)/libcommon_la-order.Tpo $(DEPDIR)/libcommon_la-order.Plo
#	source='order.c' object='libcommon_la-order.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-order.lo `test -f 'order.c' || echo '$(srcdir)/'`order.c

libcommon_la-data-block.lo: data-block.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-data-block.lo -MD -MP -MF $(DEPDIR)/libcommon_la-data-block.Tpo -c -o libcommon_la-data-block.lo `test -f 'data-block.c' || echo '$(srcdir)/'`data-block.c
	$(am__mv) $(DEPDIR)/libcommon_la-data-block.Tpo $(DEPDIR)/libcommon_la-data-block.Plo
#	source='data-block.c' object='libcommon_la-data-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-data-block.lo `test -f 'data-block.c' || echo '$(srcdir)/'`data-block.c

libcommon_la-data-block-reader.lo: data-block-reader.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-data-block-reader.lo -MD -MP -MF $(DEPDIR)/libcommon_la-data-block-reader.Tpo -c -o libcommon_la-data-block-reader.lo `test -f 'data-block-reader.c' || echo '$(srcdir)/'`data-block-reader.c
	$(am__mv) $(DEPDIR)/libcommon_la-data-block-reader.Tpo $(DEPDIR)/libcommon_la-data-block-reader.Plo
#	source='data-block-reader.c' object='libcommon_la-data-block-reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-data-block-reader.lo `test -f 'data-block-reader.c' || echo '$(srcdir)/'`data-block-reader.c

libcommon_la-prior-reader-from-psp.lo: prior-reader-from-psp.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-prior-reader-from-psp.lo -MD -MP -MF $(DEPDIR)/libcommon_la-prior-reader-from-psp.Tpo -c -o libcommon_la-prior-reader-from-psp.lo `test -f 'prior-reader-from-psp.c' || echo '$(srcdir)/'`prior-reader-from-psp.c
	$(am__mv) $(DEPDIR)/libcommon_la-prior-reader-from-psp.Tpo $(DEPDIR)/libcommon_la-prior-reader-from-psp.Plo
#	source='prior-reader-from-psp.c' object='libcommon_la-prior-reader-from-psp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-prior-reader-from-psp.lo `test -f 'prior-reader-from-psp.c' || echo '$(srcdir)/'`prior-reader-from-psp.c

libcommon_la-prior-dist.lo: prior-dist.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-prior-dist.lo -MD -MP -MF $(DEPDIR)/libcommon_la-prior-dist.Tpo -c -o libcommon_la-prior-dist.lo `test -f 'prior-dist.c' || echo '$(srcdir)/'`prior-dist.c
	$(am__mv) $(DEPDIR)/libcommon_la-prior-dist.Tpo $(DEPDIR)/libcommon_la-prior-dist.Plo
#	source='prior-dist.c' object='libcommon_la-prior-dist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-prior-dist.lo `test -f 'prior-dist.c' || echo '$(srcdir)/'`prior-dist.c

libcommon_la-pssm.lo: pssm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-pssm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-pssm.Tpo -c -o libcommon_la-pssm.lo `test -f 'pssm.c' || echo '$(srcdir)/'`pssm.c
	$(am__mv) $(DEPDIR)/libcommon_la-pssm.Tpo $(DEPDIR)/libcommon_la-pssm.Plo
#	source='pssm.c' object='libcommon_la-pssm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-pssm.lo `test -f 'pssm.c' || echo '$(srcdir)/'`pssm.c

libcommon_la-pssm-distr.lo: pssm-distr.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-pssm-distr.lo -MD -MP -MF $(DEPDIR)/libcommon_la-pssm-distr.Tpo -c -o libcommon_la-pssm-distr.lo `test -f 'pssm-distr.c' || echo '$(srcdir)/'`pssm-distr.c
	$(am__mv) $(DEPDIR)/libcommon_la-pssm-distr.Tpo $(DEPDIR)/libcommon_la-pssm-distr.Plo
#	source='pssm-distr.c' object='libcommon_la-pssm-distr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-pssm-distr.lo `test -f 'pssm-distr.c' || echo '$(srcdir)/'`pssm-distr.c

libcommon_la-qvalue.lo: qvalue.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-qvalue.lo -MD -MP -MF $(DEPDIR)/libcommon_la-qvalue.Tpo -c -o libcommon_la-qvalue.lo `test -f 'qvalue.c' || echo '$(srcdir)/'`qvalue.c
	$(am__mv) $(DEPDIR)/libcommon_la-qvalue.Tpo $(DEPDIR)/libcommon_la-qvalue.Plo
#	source='qvalue.c' object='libcommon_la-qvalue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-qvalue.lo `test -f 'qvalue.c' || echo '$(srcdir)/'`qvalue.c

libcommon_la-ranksum_test.lo: ranksum_test.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-ranksum_test.lo -MD -MP -MF $(DEPDIR)/libcommon_la-ranksum_test.Tpo -c -o libcommon_la-ranksum_test.lo `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c
	$(am__mv) $(DEPDIR)/libcommon_la-ranksum_test.Tpo $(DEPDIR)/libcommon_la-ranksum_test.Plo
#	source='ranksum_test.c' object='libcommon_la-ranksum_test.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-ranksum_test.lo `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c

libcommon_la-rdb-matrix.lo: rdb-matrix.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-rdb-matrix.lo -MD -MP -MF $(DEPDIR)/libcommon_la-rdb-matrix.Tpo -c -o libcommon_la-rdb-matrix.lo `test -f 'rdb-matrix.c' || echo '$(srcdir)/'`rdb-matrix.c
	$(am__mv) $(DEPDIR)/libcommon_la-rdb-matrix.Tpo $(DEPDIR)/libcommon_la-rdb-matrix.Plo
#	source='rdb-matrix.c' object='libcommon_la-rdb-matrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-rdb-matrix.lo `test -f 'rdb-matrix.c' || echo '$(srcdir)/'`rdb-matrix.c

libcommon_la-read-mhmm.lo: read-mhmm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-read-mhmm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-read-mhmm.Tpo -c -o libcommon_la-read-mhmm.lo `test -f 'read-mhmm.c' || echo '$(srcdir)/'`read-mhmm.c
	$(am__mv) $(DEPDIR)/libcommon_la-read-mhmm.Tpo $(DEPDIR)/libcommon_la-read-mhmm.Plo
#	source='read-mhmm.c' object='libcommon_la-read-mhmm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-read-mhmm.lo `test -f 'read-mhmm.c' || echo '$(srcdir)/'`read-mhmm.c

libcommon_la-read_sequence.lo: read_sequence.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-read_sequence.lo -MD -MP -MF $(DEPDIR)/libcommon_la-read_sequence.Tpo -c -o libcommon_la-read_sequence.lo `test -f 'read_sequence.c' || echo '$(srcdir)/'`read_sequence.c
	$(am__mv) $(DEPDIR)/libcommon_la-read_sequence.Tpo $(DEPDIR)/libcommon_la-read_sequence.Plo
#	source='read_sequence.c' object='libcommon_la-read_sequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-read_sequence.lo `test -f 'read_sequence.c' || echo '$(srcdir)/'`read_sequence.c

libcommon_la-red-black-tree.lo: red-black-tree.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-red-black-tree.lo -MD -MP -MF $(DEPDIR)/libcommon_la-red-black-tree.Tpo -c -o libcommon_la-red-black-tree.lo `test -f 'red-black-tree.c' || echo '$(srcdir)/'`red-black-tree.c
	$(am__mv) $(DEPDIR)/libcommon_la-red-black-tree.Tpo $(DEPDIR)/libcommon_la-red-black-tree.Plo
#	source='red-black-tree.c' object='libcommon_la-red-black-tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-red-black-tree.lo `test -f 'red-black-tree.c' || echo '$(srcdir)/'`red-black-tree.c

libcommon_la-regex-utils.lo: regex-utils.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-regex-utils.lo -MD -MP -MF $(DEPDIR)/libcommon_la-regex-utils.Tpo -c -o libcommon_la-regex-utils.lo `test -f 'regex-utils.c' || echo '$(srcdir)/'`regex-utils.c
	$(am__mv) $(DEPDIR)/libcommon_la-regex-utils.Tpo $(DEPDIR)/libcommon_la-regex-utils.Plo
#	source='regex-utils.c' object='libcommon_la-regex-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-regex-utils.lo `test -f 'regex-utils.c' || echo '$(srcdir)/'`regex-utils.c

libcommon_la-regress.lo: regress.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-regress.lo -MD -MP -MF $(DEPDIR)/libcommon_la-regress.Tpo -c -o libcommon_la-regress.lo `test -f 'regress.c' || echo '$(srcdir)/'`regress.c
	$(am__mv) $(DEPDIR)/libcommon_la-regress.Tpo $(DEPDIR)/libcommon_la-regress.Plo
#	source='regress.c' object='libcommon_la-regress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-regress.lo `test -f 'regress.c' || echo '$(srcdir)/'`regress.c

libcommon_la-reservoir.lo: reservoir.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-reservoir.lo -MD -MP -MF $(DEPDIR)/libcommon_la-reservoir.Tpo -c -o libcommon_la-reservoir.lo `test -f 'reservoir.c' || echo '$(srcdir)/'`reservoir.c
	$(am__mv) $(DEPDIR)/libcommon_la-reservoir.Tpo $(DEPDIR)/libcommon_la-reservoir.Plo
#	source='reservoir.c' object='libcommon_la-reservoir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-reservoir.lo `test -f 'reservoir.c' || echo '$(srcdir)/'`reservoir.c

libcommon_la-sax-parser-utils.lo: sax-parser-utils.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-sax-parser-utils.lo -MD -MP -MF $(DEPDIR)/libcommon_la-sax-parser-utils.Tpo -c -o libcommon_la-sax-parser-utils.lo `test -f 'sax-parser-utils.c' || echo '$(srcdir)/'`sax-parser-utils.c
	$(am__mv) $(DEPDIR)/libcommon_la-sax-parser-utils.Tpo $(DEPDIR)/libcommon_la-sax-parser-utils.Plo
#	source='sax-parser-utils.c' object='libcommon_la-sax-parser-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-sax-parser-utils.lo `test -f 'sax-parser-utils.c' || echo '$(srcdir)/'`sax-parser-utils.c

libcommon_la-scanned-sequence.lo: scanned-sequence.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-scanned-sequence.lo -MD -MP -MF $(DEPDIR)/libcommon_la-scanned-sequence.Tpo -c -o libcommon_la-scanned-sequence.lo `test -f 'scanned-sequence.c' || echo '$(srcdir)/'`scanned-sequence.c
	$(am__mv) $(DEPDIR)/libcommon_la-scanned-sequence.Tpo $(DEPDIR)/libcommon_la-scanned-sequence.Plo
#	source='scanned-sequence.c' object='libcommon_la-scanned-sequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-scanned-sequence.lo `test -f 'scanned-sequence.c' || echo '$(srcdir)/'`scanned-sequence.c

libcommon_la-scored-sites.lo: scored-sites.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-scored-sites.lo -MD -MP -MF $(DEPDIR)/libcommon_la-scored-sites.Tpo -c -o libcommon_la-scored-sites.lo `test -f 'scored-sites.c' || echo '$(srcdir)/'`scored-sites.c
	$(am__mv) $(DEPDIR)/libcommon_la-scored-sites.Tpo $(DEPDIR)/libcommon_la-scored-sites.Plo
#	source='scored-sites.c' object='libcommon_la-scored-sites.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-scored-sites.lo `test -f 'scored-sites.c' || echo '$(srcdir)/'`scored-sites.c

libcommon_la-seq.lo: seq.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-seq.lo -MD -MP -MF $(DEPDIR)/libcommon_la-seq.Tpo -c -o libcommon_la-seq.lo `test -f 'seq.c' || echo '$(srcdir)/'`seq.c
	$(am__mv) $(DEPDIR)/libcommon_la-seq.Tpo $(DEPDIR)/libcommon_la-seq.Plo
#	source='seq.c' object='libcommon_la-seq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-seq.lo `test -f 'seq.c' || echo '$(srcdir)/'`seq.c

libcommon_la-seq-reader-from-fasta.lo: seq-reader-from-fasta.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-seq-reader-from-fasta.lo -MD -MP -MF $(DEPDIR)/libcommon_la-seq-reader-from-fasta.Tpo -c -o libcommon_la-seq-reader-from-fasta.lo `test -f 'seq-reader-from-fasta.c' || echo '$(srcdir)/'`seq-reader-from-fasta.c
	$(am__mv) $(DEPDIR)/libcommon_la-seq-reader-from-fasta.Tpo $(DEPDIR)/libcommon_la-seq-reader-from-fasta.Plo
#	source='seq-reader-from-fasta.c' object='libcommon_la-seq-reader-from-fasta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-seq-reader-from-fasta.lo `test -f 'seq-reader-from-fasta.c' || echo '$(srcdir)/'`seq-reader-from-fasta.c

libcommon_la-simple-getopt.lo: simple-getopt.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-simple-getopt.lo -MD -MP -MF $(DEPDIR)/libcommon_la-simple-getopt.Tpo -c -o libcommon_la-simple-getopt.lo `test -f 'simple-getopt.c' || echo '$(srcdir)/'`simple-getopt.c
	$(am__mv) $(DEPDIR)/libcommon_la-simple-getopt.Tpo $(DEPDIR)/libcommon_la-simple-getopt.Plo
#	source='simple-getopt.c' object='libcommon_la-simple-getopt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-simple-getopt.lo `test -f 'simple-getopt.c' || echo '$(srcdir)/'`simple-getopt.c

libcommon_la-spearman-rank-correlation.lo: spearman-rank-correlation.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-spearman-rank-correlation.lo -MD -MP -MF $(DEPDIR)/libcommon_la-spearman-rank-correlation.Tpo -c -o libcommon_la-spearman-rank-correlation.lo `test -f 'spearman-rank-correlation.c' || echo '$(srcdir)/'`spearman-rank-correlation.c
	$(am__mv) $(DEPDIR)/libcommon_la-spearman-rank-correlation.Tpo $(DEPDIR)/libcommon_la-spearman-rank-correlation.Plo
#	source='spearman-rank-correlation.c' object='libcommon_la-spearman-rank-correlation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-spearman-rank-correlation.lo `test -f 'spearman-rank-correlation.c' || echo '$(srcdir)/'`spearman-rank-correlation.c

libcommon_la-string-builder.lo: string-builder.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-string-builder.lo -MD -MP -MF $(DEPDIR)/libcommon_la-string-builder.Tpo -c -o libcommon_la-string-builder.lo `test -f 'string-builder.c' || echo '$(srcdir)/'`string-builder.c
	$(am__mv) $(DEPDIR)/libcommon_la-string-builder.Tpo $(DEPDIR)/libcommon_la-string-builder.Plo
#	source='string-builder.c' object='libcommon_la-string-builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-string-builder.lo `test -f 'string-builder.c' || echo '$(srcdir)/'`string-builder.c

libcommon_la-string-list.lo: string-list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-string-list.lo -MD -MP -MF $(DEPDIR)/libcommon_la-string-list.Tpo -c -o libcommon_la-string-list.lo `test -f 'string-list.c' || echo '$(srcdir)/'`string-list.c
	$(am__mv) $(DEPDIR)/libcommon_la-string-list.Tpo $(DEPDIR)/libcommon_la-string-list.Plo
#	source='string-list.c' object='libcommon_la-string-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-string-list.lo `test -f 'string-list.c' || echo '$(srcdir)/'`string-list.c

libcommon_la-string-match.lo: string-match.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-string-match.lo -MD -MP -MF $(DEPDIR)/libcommon_la-string-match.Tpo -c -o libcommon_la-string-match.lo `test -f 'string-match.c' || echo '$(srcdir)/'`string-match.c
	$(am__mv) $(DEPDIR)/libcommon_la-string-match.Tpo $(DEPDIR)/libcommon_la-string-match.Plo
#	source='string-match.c' object='libcommon_la-string-match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-string-match.lo `test -f 'string-match.c' || echo '$(srcdir)/'`string-match.c

libcommon_la-subst-matrix.lo: subst-matrix.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-subst-matrix.lo -MD -MP -MF $(DEPDIR)/libcommon_la-subst-matrix.Tpo -c -o libcommon_la-subst-matrix.lo `test -f 'subst-matrix.c' || echo '$(srcdir)/'`subst-matrix.c
	$(am__mv) $(DEPDIR)/libcommon_la-subst-matrix.Tpo $(DEPDIR)/libcommon_la-subst-matrix.Plo
#	source='subst-matrix.c' object='libcommon_la-subst-matrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-subst-matrix.lo `test -f 'subst-matrix.c' || echo '$(srcdir)/'`subst-matrix.c

libcommon_la-substmatrix-table.lo: substmatrix-table.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-substmatrix-table.lo -MD -MP -MF $(DEPDIR)/libcommon_la-substmatrix-table.Tpo -c -o libcommon_la-substmatrix-table.lo `test -f 'substmatrix-table.c' || echo '$(srcdir)/'`substmatrix-table.c
	$(am__mv) $(DEPDIR)/libcommon_la-substmatrix-table.Tpo $(DEPDIR)/libcommon_la-substmatrix-table.Plo
#	source='substmatrix-table.c' object='libcommon_la-substmatrix-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-substmatrix-table.lo `test -f 'substmatrix-table.c' || echo '$(srcdir)/'`substmatrix-table.c

libcommon_la-transfac.lo: transfac.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-transfac.lo -MD -MP -MF $(DEPDIR)/libcommon_la-transfac.Tpo -c -o libcommon_la-transfac.lo `test -f 'transfac.c' || echo '$(srcdir)/'`transfac.c
	$(am__mv) $(DEPDIR)/libcommon_la-transfac.Tpo $(DEPDIR)/libcommon_la-transfac.Plo
#	source='transfac.c' object='libcommon_la-transfac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-transfac.lo `test -f 'transfac.c' || echo '$(srcdir)/'`transfac.c

libcommon_la-tree.lo: tree.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-tree.lo -MD -MP -MF $(DEPDIR)/libcommon_la-tree.Tpo -c -o libcommon_la-tree.lo `test -f 'tree.c' || echo '$(srcdir)/'`tree.c
	$(am__mv) $(DEPDIR)/libcommon_la-tree.Tpo $(DEPDIR)/libcommon_la-tree.Plo
#	source='tree.c' object='libcommon_la-tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-tree.lo `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

libcommon_la-utils.lo: utils.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-utils.lo -MD -MP -MF $(DEPDIR)/libcommon_la-utils.Tpo -c -o libcommon_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(am__mv) $(DEPDIR)/libcommon_la-utils.Tpo $(DEPDIR)/libcommon_la-utils.Plo
#	source='utils.c' object='libcommon_la-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

libcommon_la-wiggle-reader.lo: wiggle-reader.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-wiggle-reader.lo -MD -MP -MF $(DEPDIR)/libcommon_la-wiggle-reader.Tpo -c -o libcommon_la-wiggle-reader.lo `test -f 'wiggle-reader.c' || echo '$(srcdir)/'`wiggle-reader.c
	$(am__mv) $(DEPDIR)/libcommon_la-wiggle-reader.Tpo $(DEPDIR)/libcommon_la-wiggle-reader.Plo
#	source='wiggle-reader.c' object='libcommon_la-wiggle-reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-wiggle-reader.lo `test -f 'wiggle-reader.c' || echo '$(srcdir)/'`wiggle-reader.c

libcommon_la-write-mhmm.lo: write-mhmm.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-write-mhmm.lo -MD -MP -MF $(DEPDIR)/libcommon_la-write-mhmm.Tpo -c -o libcommon_la-write-mhmm.lo `test -f 'write-mhmm.c' || echo '$(srcdir)/'`write-mhmm.c
	$(am__mv) $(DEPDIR)/libcommon_la-write-mhmm.Tpo $(DEPDIR)/libcommon_la-write-mhmm.Plo
#	source='write-mhmm.c' object='libcommon_la-write-mhmm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-write-mhmm.lo `test -f 'write-mhmm.c' || echo '$(srcdir)/'`write-mhmm.c

libcommon_la-xml-out.lo: xml-out.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-xml-out.lo -MD -MP -MF $(DEPDIR)/libcommon_la-xml-out.Tpo -c -o libcommon_la-xml-out.lo `test -f 'xml-out.c' || echo '$(srcdir)/'`xml-out.c
	$(am__mv) $(DEPDIR)/libcommon_la-xml-out.Tpo $(DEPDIR)/libcommon_la-xml-out.Plo
#	source='xml-out.c' object='libcommon_la-xml-out.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-xml-out.lo `test -f 'xml-out.c' || echo '$(srcdir)/'`xml-out.c

libcommon_la-xml-util.lo: xml-util.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -MT libcommon_la-xml-util.lo -MD -MP -MF $(DEPDIR)/libcommon_la-xml-util.Tpo -c -o libcommon_la-xml-util.lo `test -f 'xml-util.c' || echo '$(srcdir)/'`xml-util.c
	$(am__mv) $(DEPDIR)/libcommon_la-xml-util.Tpo $(DEPDIR)/libcommon_la-xml-util.Plo
#	source='xml-util.c' object='libcommon_la-xml-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcommon_la_CFLAGS) $(CFLAGS) -c -o libcommon_la-xml-util.lo `test -f 'xml-util.c' || echo '$(srcdir)/'`xml-util.c

alphtype-alphtype.o: alphtype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(alphtype_CFLAGS) $(CFLAGS) -MT alphtype-alphtype.o -MD -MP -MF $(DEPDIR)/alphtype-alphtype.Tpo -c -o alphtype-alphtype.o `test -f 'alphtype.c' || echo '$(srcdir)/'`alphtype.c
	$(am__mv) $(DEPDIR)/alphtype-alphtype.Tpo $(DEPDIR)/alphtype-alphtype.Po
#	source='alphtype.c' object='alphtype-alphtype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(alphtype_CFLAGS) $(CFLAGS) -c -o alphtype-alphtype.o `test -f 'alphtype.c' || echo '$(srcdir)/'`alphtype.c

alphtype-alphtype.obj: alphtype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(alphtype_CFLAGS) $(CFLAGS) -MT alphtype-alphtype.obj -MD -MP -MF $(DEPDIR)/alphtype-alphtype.Tpo -c -o alphtype-alphtype.obj `if test -f 'alphtype.c'; then $(CYGPATH_W) 'alphtype.c'; else $(CYGPATH_W) '$(srcdir)/alphtype.c'; fi`
	$(am__mv) $(DEPDIR)/alphtype-alphtype.Tpo $(DEPDIR)/alphtype-alphtype.Po
#	source='alphtype.c' object='alphtype-alphtype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(alphtype_CFLAGS) $(CFLAGS) -c -o alphtype-alphtype.obj `if test -f 'alphtype.c'; then $(CYGPATH_W) 'alphtype.c'; else $(CYGPATH_W) '$(srcdir)/alphtype.c'; fi`

ama-ama.o: ama.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -MT ama-ama.o -MD -MP -MF $(DEPDIR)/ama-ama.Tpo -c -o ama-ama.o `test -f 'ama.c' || echo '$(srcdir)/'`ama.c
	$(am__mv) $(DEPDIR)/ama-ama.Tpo $(DEPDIR)/ama-ama.Po
#	source='ama.c' object='ama-ama.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -c -o ama-ama.o `test -f 'ama.c' || echo '$(srcdir)/'`ama.c

ama-ama.obj: ama.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -MT ama-ama.obj -MD -MP -MF $(DEPDIR)/ama-ama.Tpo -c -o ama-ama.obj `if test -f 'ama.c'; then $(CYGPATH_W) 'ama.c'; else $(CYGPATH_W) '$(srcdir)/ama.c'; fi`
	$(am__mv) $(DEPDIR)/ama-ama.Tpo $(DEPDIR)/ama-ama.Po
#	source='ama.c' object='ama-ama.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -c -o ama-ama.obj `if test -f 'ama.c'; then $(CYGPATH_W) 'ama.c'; else $(CYGPATH_W) '$(srcdir)/ama.c'; fi`

ama-ama_scan.o: ama_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -MT ama-ama_scan.o -MD -MP -MF $(DEPDIR)/ama-ama_scan.Tpo -c -o ama-ama_scan.o `test -f 'ama_scan.c' || echo '$(srcdir)/'`ama_scan.c
	$(am__mv) $(DEPDIR)/ama-ama_scan.Tpo $(DEPDIR)/ama-ama_scan.Po
#	source='ama_scan.c' object='ama-ama_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -c -o ama-ama_scan.o `test -f 'ama_scan.c' || echo '$(srcdir)/'`ama_scan.c

ama-ama_scan.obj: ama_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -MT ama-ama_scan.obj -MD -MP -MF $(DEPDIR)/ama-ama_scan.Tpo -c -o ama-ama_scan.obj `if test -f 'ama_scan.c'; then $(CYGPATH_W) 'ama_scan.c'; else $(CYGPATH_W) '$(srcdir)/ama_scan.c'; fi`
	$(am__mv) $(DEPDIR)/ama-ama_scan.Tpo $(DEPDIR)/ama-ama_scan.Po
#	source='ama_scan.c' object='ama-ama_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ama_CFLAGS) $(CFLAGS) -c -o ama-ama_scan.obj `if test -f 'ama_scan.c'; then $(CYGPATH_W) 'ama_scan.c'; else $(CYGPATH_W) '$(srcdir)/ama_scan.c'; fi`

ame-ame.o: ame.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-ame.o -MD -MP -MF $(DEPDIR)/ame-ame.Tpo -c -o ame-ame.o `test -f 'ame.c' || echo '$(srcdir)/'`ame.c
	$(am__mv) $(DEPDIR)/ame-ame.Tpo $(DEPDIR)/ame-ame.Po
#	source='ame.c' object='ame-ame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-ame.o `test -f 'ame.c' || echo '$(srcdir)/'`ame.c

ame-ame.obj: ame.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-ame.obj -MD -MP -MF $(DEPDIR)/ame-ame.Tpo -c -o ame-ame.obj `if test -f 'ame.c'; then $(CYGPATH_W) 'ame.c'; else $(CYGPATH_W) '$(srcdir)/ame.c'; fi`
	$(am__mv) $(DEPDIR)/ame-ame.Tpo $(DEPDIR)/ame-ame.Po
#	source='ame.c' object='ame-ame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-ame.obj `if test -f 'ame.c'; then $(CYGPATH_W) 'ame.c'; else $(CYGPATH_W) '$(srcdir)/ame.c'; fi`

ame-ramen_scan.o: ramen_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-ramen_scan.o -MD -MP -MF $(DEPDIR)/ame-ramen_scan.Tpo -c -o ame-ramen_scan.o `test -f 'ramen_scan.c' || echo '$(srcdir)/'`ramen_scan.c
	$(am__mv) $(DEPDIR)/ame-ramen_scan.Tpo $(DEPDIR)/ame-ramen_scan.Po
#	source='ramen_scan.c' object='ame-ramen_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-ramen_scan.o `test -f 'ramen_scan.c' || echo '$(srcdir)/'`ramen_scan.c

ame-ramen_scan.obj: ramen_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-ramen_scan.obj -MD -MP -MF $(DEPDIR)/ame-ramen_scan.Tpo -c -o ame-ramen_scan.obj `if test -f 'ramen_scan.c'; then $(CYGPATH_W) 'ramen_scan.c'; else $(CYGPATH_W) '$(srcdir)/ramen_scan.c'; fi`
	$(am__mv) $(DEPDIR)/ame-ramen_scan.Tpo $(DEPDIR)/ame-ramen_scan.Po
#	source='ramen_scan.c' object='ame-ramen_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-ramen_scan.obj `if test -f 'ramen_scan.c'; then $(CYGPATH_W) 'ramen_scan.c'; else $(CYGPATH_W) '$(srcdir)/ramen_scan.c'; fi`

ame-html-monolith.o: html-monolith.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-html-monolith.o -MD -MP -MF $(DEPDIR)/ame-html-monolith.Tpo -c -o ame-html-monolith.o `test -f 'html-monolith.c' || echo '$(srcdir)/'`html-monolith.c
	$(am__mv) $(DEPDIR)/ame-html-monolith.Tpo $(DEPDIR)/ame-html-monolith.Po
#	source='html-monolith.c' object='ame-html-monolith.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-html-monolith.o `test -f 'html-monolith.c' || echo '$(srcdir)/'`html-monolith.c

ame-html-monolith.obj: html-monolith.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-html-monolith.obj -MD -MP -MF $(DEPDIR)/ame-html-monolith.Tpo -c -o ame-html-monolith.obj `if test -f 'html-monolith.c'; then $(CYGPATH_W) 'html-monolith.c'; else $(CYGPATH_W) '$(srcdir)/html-monolith.c'; fi`
	$(am__mv) $(DEPDIR)/ame-html-monolith.Tpo $(DEPDIR)/ame-html-monolith.Po
#	source='html-monolith.c' object='ame-html-monolith.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-html-monolith.obj `if test -f 'html-monolith.c'; then $(CYGPATH_W) 'html-monolith.c'; else $(CYGPATH_W) '$(srcdir)/html-monolith.c'; fi`

ame-json-writer.o: json-writer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-json-writer.o -MD -MP -MF $(DEPDIR)/ame-json-writer.Tpo -c -o ame-json-writer.o `test -f 'json-writer.c' || echo '$(srcdir)/'`json-writer.c
	$(am__mv) $(DEPDIR)/ame-json-writer.Tpo $(DEPDIR)/ame-json-writer.Po
#	source='json-writer.c' object='ame-json-writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-json-writer.o `test -f 'json-writer.c' || echo '$(srcdir)/'`json-writer.c

ame-json-writer.obj: json-writer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -MT ame-json-writer.obj -MD -MP -MF $(DEPDIR)/ame-json-writer.Tpo -c -o ame-json-writer.obj `if test -f 'json-writer.c'; then $(CYGPATH_W) 'json-writer.c'; else $(CYGPATH_W) '$(srcdir)/json-writer.c'; fi`
	$(am__mv) $(DEPDIR)/ame-json-writer.Tpo $(DEPDIR)/ame-json-writer.Po
#	source='json-writer.c' object='ame-json-writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ame_CFLAGS) $(CFLAGS) -c -o ame-json-writer.obj `if test -f 'json-writer.c'; then $(CYGPATH_W) 'json-writer.c'; else $(CYGPATH_W) '$(srcdir)/json-writer.c'; fi`

beadstring-beadstring.o: beadstring.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beadstring_CFLAGS) $(CFLAGS) -MT beadstring-beadstring.o -MD -MP -MF $(DEPDIR)/beadstring-beadstring.Tpo -c -o beadstring-beadstring.o `test -f 'beadstring.c' || echo '$(srcdir)/'`beadstring.c
	$(am__mv) $(DEPDIR)/beadstring-beadstring.Tpo $(DEPDIR)/beadstring-beadstring.Po
#	source='beadstring.c' object='beadstring-beadstring.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beadstring_CFLAGS) $(CFLAGS) -c -o beadstring-beadstring.o `test -f 'beadstring.c' || echo '$(srcdir)/'`beadstring.c

beadstring-beadstring.obj: beadstring.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beadstring_CFLAGS) $(CFLAGS) -MT beadstring-beadstring.obj -MD -MP -MF $(DEPDIR)/beadstring-beadstring.Tpo -c -o beadstring-beadstring.obj `if test -f 'beadstring.c'; then $(CYGPATH_W) 'beadstring.c'; else $(CYGPATH_W) '$(srcdir)/beadstring.c'; fi`
	$(am__mv) $(DEPDIR)/beadstring-beadstring.Tpo $(DEPDIR)/beadstring-beadstring.Po
#	source='beadstring.c' object='beadstring-beadstring.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beadstring_CFLAGS) $(CFLAGS) -c -o beadstring-beadstring.obj `if test -f 'beadstring.c'; then $(CYGPATH_W) 'beadstring.c'; else $(CYGPATH_W) '$(srcdir)/beadstring.c'; fi`

centrimo-centrimo.o: centrimo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-centrimo.o -MD -MP -MF $(DEPDIR)/centrimo-centrimo.Tpo -c -o centrimo-centrimo.o `test -f 'centrimo.c' || echo '$(srcdir)/'`centrimo.c
	$(am__mv) $(DEPDIR)/centrimo-centrimo.Tpo $(DEPDIR)/centrimo-centrimo.Po
#	source='centrimo.c' object='centrimo-centrimo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-centrimo.o `test -f 'centrimo.c' || echo '$(srcdir)/'`centrimo.c

centrimo-centrimo.obj: centrimo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-centrimo.obj -MD -MP -MF $(DEPDIR)/centrimo-centrimo.Tpo -c -o centrimo-centrimo.obj `if test -f 'centrimo.c'; then $(CYGPATH_W) 'centrimo.c'; else $(CYGPATH_W) '$(srcdir)/centrimo.c'; fi`
	$(am__mv) $(DEPDIR)/centrimo-centrimo.Tpo $(DEPDIR)/centrimo-centrimo.Po
#	source='centrimo.c' object='centrimo-centrimo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-centrimo.obj `if test -f 'centrimo.c'; then $(CYGPATH_W) 'centrimo.c'; else $(CYGPATH_W) '$(srcdir)/centrimo.c'; fi`

centrimo-html-monolith.o: html-monolith.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-html-monolith.o -MD -MP -MF $(DEPDIR)/centrimo-html-monolith.Tpo -c -o centrimo-html-monolith.o `test -f 'html-monolith.c' || echo '$(srcdir)/'`html-monolith.c
	$(am__mv) $(DEPDIR)/centrimo-html-monolith.Tpo $(DEPDIR)/centrimo-html-monolith.Po
#	source='html-monolith.c' object='centrimo-html-monolith.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-html-monolith.o `test -f 'html-monolith.c' || echo '$(srcdir)/'`html-monolith.c

centrimo-html-monolith.obj: html-monolith.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-html-monolith.obj -MD -MP -MF $(DEPDIR)/centrimo-html-monolith.Tpo -c -o centrimo-html-monolith.obj `if test -f 'html-monolith.c'; then $(CYGPATH_W) 'html-monolith.c'; else $(CYGPATH_W) '$(srcdir)/html-monolith.c'; fi`
	$(am__mv) $(DEPDIR)/centrimo-html-monolith.Tpo $(DEPDIR)/centrimo-html-monolith.Po
#	source='html-monolith.c' object='centrimo-html-monolith.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-html-monolith.obj `if test -f 'html-monolith.c'; then $(CYGPATH_W) 'html-monolith.c'; else $(CYGPATH_W) '$(srcdir)/html-monolith.c'; fi`

centrimo-json-writer.o: json-writer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-json-writer.o -MD -MP -MF $(DEPDIR)/centrimo-json-writer.Tpo -c -o centrimo-json-writer.o `test -f 'json-writer.c' || echo '$(srcdir)/'`json-writer.c
	$(am__mv) $(DEPDIR)/centrimo-json-writer.Tpo $(DEPDIR)/centrimo-json-writer.Po
#	source='json-writer.c' object='centrimo-json-writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-json-writer.o `test -f 'json-writer.c' || echo '$(srcdir)/'`json-writer.c

centrimo-json-writer.obj: json-writer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -MT centrimo-json-writer.obj -MD -MP -MF $(DEPDIR)/centrimo-json-writer.Tpo -c -o centrimo-json-writer.obj `if test -f 'json-writer.c'; then $(CYGPATH_W) 'json-writer.c'; else $(CYGPATH_W) '$(srcdir)/json-writer.c'; fi`
	$(am__mv) $(DEPDIR)/centrimo-json-writer.Tpo $(DEPDIR)/centrimo-json-writer.Po
#	source='json-writer.c' object='centrimo-json-writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(centrimo_CFLAGS) $(CFLAGS) -c -o centrimo-json-writer.obj `if test -f 'json-writer.c'; then $(CYGPATH_W) 'json-writer.c'; else $(CYGPATH_W) '$(srcdir)/json-writer.c'; fi`

ceqlogo-ceqlogo.o: ceqlogo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ceqlogo_CFLAGS) $(CFLAGS) -MT ceqlogo-ceqlogo.o -MD -MP -MF $(DEPDIR)/ceqlogo-ceqlogo.Tpo -c -o ceqlogo-ceqlogo.o `test -f 'ceqlogo.c' || echo '$(srcdir)/'`ceqlogo.c
	$(am__mv) $(DEPDIR)/ceqlogo-ceqlogo.Tpo $(DEPDIR)/ceqlogo-ceqlogo.Po
#	source='ceqlogo.c' object='ceqlogo-ceqlogo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ceqlogo_CFLAGS) $(CFLAGS) -c -o ceqlogo-ceqlogo.o `test -f 'ceqlogo.c' || echo '$(srcdir)/'`ceqlogo.c

ceqlogo-ceqlogo.obj: ceqlogo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ceqlogo_CFLAGS) $(CFLAGS) -MT ceqlogo-ceqlogo.obj -MD -MP -MF $(DEPDIR)/ceqlogo-ceqlogo.Tpo -c -o ceqlogo-ceqlogo.obj `if test -f 'ceqlogo.c'; then $(CYGPATH_W) 'ceqlogo.c'; else $(CYGPATH_W) '$(srcdir)/ceqlogo.c'; fi`
	$(am__mv) $(DEPDIR)/ceqlogo-ceqlogo.Tpo $(DEPDIR)/ceqlogo-ceqlogo.Po
#	source='ceqlogo.c' object='ceqlogo-ceqlogo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ceqlogo_CFLAGS) $(CFLAGS) -c -o ceqlogo-ceqlogo.obj `if test -f 'ceqlogo.c'; then $(CYGPATH_W) 'ceqlogo.c'; else $(CYGPATH_W) '$(srcdir)/ceqlogo.c'; fi`

clustalw_io-clustalw-io.o: clustalw-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw_io_CFLAGS) $(CFLAGS) -MT clustalw_io-clustalw-io.o -MD -MP -MF $(DEPDIR)/clustalw_io-clustalw-io.Tpo -c -o clustalw_io-clustalw-io.o `test -f 'clustalw-io.c' || echo '$(srcdir)/'`clustalw-io.c
	$(am__mv) $(DEPDIR)/clustalw_io-clustalw-io.Tpo $(DEPDIR)/clustalw_io-clustalw-io.Po
#	source='clustalw-io.c' object='clustalw_io-clustalw-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw_io_CFLAGS) $(CFLAGS) -c -o clustalw_io-clustalw-io.o `test -f 'clustalw-io.c' || echo '$(srcdir)/'`clustalw-io.c

clustalw_io-clustalw-io.obj: clustalw-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw_io_CFLAGS) $(CFLAGS) -MT clustalw_io-clustalw-io.obj -MD -MP -MF $(DEPDIR)/clustalw_io-clustalw-io.Tpo -c -o clustalw_io-clustalw-io.obj `if test -f 'clustalw-io.c'; then $(CYGPATH_W) 'clustalw-io.c'; else $(CYGPATH_W) '$(srcdir)/clustalw-io.c'; fi`
	$(am__mv) $(DEPDIR)/clustalw_io-clustalw-io.Tpo $(DEPDIR)/clustalw_io-clustalw-io.Po
#	source='clustalw-io.c' object='clustalw_io-clustalw-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw_io_CFLAGS) $(CFLAGS) -c -o clustalw_io-clustalw-io.obj `if test -f 'clustalw-io.c'; then $(CYGPATH_W) 'clustalw-io.c'; else $(CYGPATH_W) '$(srcdir)/clustalw-io.c'; fi`

clustalw2fasta-clustalw2fasta.o: clustalw2fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2fasta_CFLAGS) $(CFLAGS) -MT clustalw2fasta-clustalw2fasta.o -MD -MP -MF $(DEPDIR)/clustalw2fasta-clustalw2fasta.Tpo -c -o clustalw2fasta-clustalw2fasta.o `test -f 'clustalw2fasta.c' || echo '$(srcdir)/'`clustalw2fasta.c
	$(am__mv) $(DEPDIR)/clustalw2fasta-clustalw2fasta.Tpo $(DEPDIR)/clustalw2fasta-clustalw2fasta.Po
#	source='clustalw2fasta.c' object='clustalw2fasta-clustalw2fasta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2fasta_CFLAGS) $(CFLAGS) -c -o clustalw2fasta-clustalw2fasta.o `test -f 'clustalw2fasta.c' || echo '$(srcdir)/'`clustalw2fasta.c

clustalw2fasta-clustalw2fasta.obj: clustalw2fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2fasta_CFLAGS) $(CFLAGS) -MT clustalw2fasta-clustalw2fasta.obj -MD -MP -MF $(DEPDIR)/clustalw2fasta-clustalw2fasta.Tpo -c -o clustalw2fasta-clustalw2fasta.obj `if test -f 'clustalw2fasta.c'; then $(CYGPATH_W) 'clustalw2fasta.c'; else $(CYGPATH_W) '$(srcdir)/clustalw2fasta.c'; fi`
	$(am__mv) $(DEPDIR)/clustalw2fasta-clustalw2fasta.Tpo $(DEPDIR)/clustalw2fasta-clustalw2fasta.Po
#	source='clustalw2fasta.c' object='clustalw2fasta-clustalw2fasta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2fasta_CFLAGS) $(CFLAGS) -c -o clustalw2fasta-clustalw2fasta.obj `if test -f 'clustalw2fasta.c'; then $(CYGPATH_W) 'clustalw2fasta.c'; else $(CYGPATH_W) '$(srcdir)/clustalw2fasta.c'; fi`

clustalw2phylip-clustalw2phylip.o: clustalw2phylip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2phylip_CFLAGS) $(CFLAGS) -MT clustalw2phylip-clustalw2phylip.o -MD -MP -MF $(DEPDIR)/clustalw2phylip-clustalw2phylip.Tpo -c -o clustalw2phylip-clustalw2phylip.o `test -f 'clustalw2phylip.c' || echo '$(srcdir)/'`clustalw2phylip.c
	$(am__mv) $(DEPDIR)/clustalw2phylip-clustalw2phylip.Tpo $(DEPDIR)/clustalw2phylip-clustalw2phylip.Po
#	source='clustalw2phylip.c' object='clustalw2phylip-clustalw2phylip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2phylip_CFLAGS) $(CFLAGS) -c -o clustalw2phylip-clustalw2phylip.o `test -f 'clustalw2phylip.c' || echo '$(srcdir)/'`clustalw2phylip.c

clustalw2phylip-clustalw2phylip.obj: clustalw2phylip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2phylip_CFLAGS) $(CFLAGS) -MT clustalw2phylip-clustalw2phylip.obj -MD -MP -MF $(DEPDIR)/clustalw2phylip-clustalw2phylip.Tpo -c -o clustalw2phylip-clustalw2phylip.obj `if test -f 'clustalw2phylip.c'; then $(CYGPATH_W) 'clustalw2phylip.c'; else $(CYGPATH_W) '$(srcdir)/clustalw2phylip.c'; fi`
	$(am__mv) $(DEPDIR)/clustalw2phylip-clustalw2phylip.Tpo $(DEPDIR)/clustalw2phylip-clustalw2phylip.Po
#	source='clustalw2phylip.c' object='clustalw2phylip-clustalw2phylip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clustalw2phylip_CFLAGS) $(CFLAGS) -c -o clustalw2phylip-clustalw2phylip.obj `if test -f 'clustalw2phylip.c'; then $(CYGPATH_W) 'clustalw2phylip.c'; else $(CYGPATH_W) '$(srcdir)/clustalw2phylip.c'; fi`

compute_prior_dist-compute-prior-dist.o: compute-prior-dist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_prior_dist_CFLAGS) $(CFLAGS) -MT compute_prior_dist-compute-prior-dist.o -MD -MP -MF $(DEPDIR)/compute_prior_dist-compute-prior-dist.Tpo -c -o compute_prior_dist-compute-prior-dist.o `test -f 'compute-prior-dist.c' || echo '$(srcdir)/'`compute-prior-dist.c
	$(am__mv) $(DEPDIR)/compute_prior_dist-compute-prior-dist.Tpo $(DEPDIR)/compute_prior_dist-compute-prior-dist.Po
#	source='compute-prior-dist.c' object='compute_prior_dist-compute-prior-dist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_prior_dist_CFLAGS) $(CFLAGS) -c -o compute_prior_dist-compute-prior-dist.o `test -f 'compute-prior-dist.c' || echo '$(srcdir)/'`compute-prior-dist.c

compute_prior_dist-compute-prior-dist.obj: compute-prior-dist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_prior_dist_CFLAGS) $(CFLAGS) -MT compute_prior_dist-compute-prior-dist.obj -MD -MP -MF $(DEPDIR)/compute_prior_dist-compute-prior-dist.Tpo -c -o compute_prior_dist-compute-prior-dist.obj `if test -f 'compute-prior-dist.c'; then $(CYGPATH_W) 'compute-prior-dist.c'; else $(CYGPATH_W) '$(srcdir)/compute-prior-dist.c'; fi`
	$(am__mv) $(DEPDIR)/compute_prior_dist-compute-prior-dist.Tpo $(DEPDIR)/compute_prior_dist-compute-prior-dist.Po
#	source='compute-prior-dist.c' object='compute_prior_dist-compute-prior-dist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_prior_dist_CFLAGS) $(CFLAGS) -c -o compute_prior_dist-compute-prior-dist.obj `if test -f 'compute-prior-dist.c'; then $(CYGPATH_W) 'compute-prior-dist.c'; else $(CYGPATH_W) '$(srcdir)/compute-prior-dist.c'; fi`

compute_uniform_priors-compute-uniform-priors.o: compute-uniform-priors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_uniform_priors_CFLAGS) $(CFLAGS) -MT compute_uniform_priors-compute-uniform-priors.o -MD -MP -MF $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Tpo -c -o compute_uniform_priors-compute-uniform-priors.o `test -f 'compute-uniform-priors.c' || echo '$(srcdir)/'`compute-uniform-priors.c
	$(am__mv) $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Tpo $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Po
#	source='compute-uniform-priors.c' object='compute_uniform_priors-compute-uniform-priors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_uniform_priors_CFLAGS) $(CFLAGS) -c -o compute_uniform_priors-compute-uniform-priors.o `test -f 'compute-uniform-priors.c' || echo '$(srcdir)/'`compute-uniform-priors.c

compute_uniform_priors-compute-uniform-priors.obj: compute-uniform-priors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_uniform_priors_CFLAGS) $(CFLAGS) -MT compute_uniform_priors-compute-uniform-priors.obj -MD -MP -MF $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Tpo -c -o compute_uniform_priors-compute-uniform-priors.obj `if test -f 'compute-uniform-priors.c'; then $(CYGPATH_W) 'compute-uniform-priors.c'; else $(CYGPATH_W) '$(srcdir)/compute-uniform-priors.c'; fi`
	$(am__mv) $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Tpo $(DEPDIR)/compute_uniform_priors-compute-uniform-priors.Po
#	source='compute-uniform-priors.c' object='compute_uniform_priors-compute-uniform-priors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(compute_uniform_priors_CFLAGS) $(CFLAGS) -c -o compute_uniform_priors-compute-uniform-priors.obj `if test -f 'compute-uniform-priors.c'; then $(CYGPATH_W) 'compute-uniform-priors.c'; else $(CYGPATH_W) '$(srcdir)/compute-uniform-priors.c'; fi`

create_priors-create-priors.o: create-priors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_priors_CFLAGS) $(CFLAGS) -MT create_priors-create-priors.o -MD -MP -MF $(DEPDIR)/create_priors-create-priors.Tpo -c -o create_priors-create-priors.o `test -f 'create-priors.c' || echo '$(srcdir)/'`create-priors.c
	$(am__mv) $(DEPDIR)/create_priors-create-priors.Tpo $(DEPDIR)/create_priors-create-priors.Po
#	source='create-priors.c' object='create_priors-create-priors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_priors_CFLAGS) $(CFLAGS) -c -o create_priors-create-priors.o `test -f 'create-priors.c' || echo '$(srcdir)/'`create-priors.c

create_priors-create-priors.obj: create-priors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_priors_CFLAGS) $(CFLAGS) -MT create_priors-create-priors.obj -MD -MP -MF $(DEPDIR)/create_priors-create-priors.Tpo -c -o create_priors-create-priors.obj `if test -f 'create-priors.c'; then $(CYGPATH_W) 'create-priors.c'; else $(CYGPATH_W) '$(srcdir)/create-priors.c'; fi`
	$(am__mv) $(DEPDIR)/create_priors-create-priors.Tpo $(DEPDIR)/create_priors-create-priors.Po
#	source='create-priors.c' object='create_priors-create-priors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_priors_CFLAGS) $(CFLAGS) -c -o create_priors-create-priors.obj `if test -f 'create-priors.c'; then $(CYGPATH_W) 'create-priors.c'; else $(CYGPATH_W) '$(srcdir)/create-priors.c'; fi`

draw_mhmm-draw-mhmm.o: draw-mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -MT draw_mhmm-draw-mhmm.o -MD -MP -MF $(DEPDIR)/draw_mhmm-draw-mhmm.Tpo -c -o draw_mhmm-draw-mhmm.o `test -f 'draw-mhmm.c' || echo '$(srcdir)/'`draw-mhmm.c
	$(am__mv) $(DEPDIR)/draw_mhmm-draw-mhmm.Tpo $(DEPDIR)/draw_mhmm-draw-mhmm.Po
#	source='draw-mhmm.c' object='draw_mhmm-draw-mhmm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -c -o draw_mhmm-draw-mhmm.o `test -f 'draw-mhmm.c' || echo '$(srcdir)/'`draw-mhmm.c

draw_mhmm-draw-mhmm.obj: draw-mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -MT draw_mhmm-draw-mhmm.obj -MD -MP -MF $(DEPDIR)/draw_mhmm-draw-mhmm.Tpo -c -o draw_mhmm-draw-mhmm.obj `if test -f 'draw-mhmm.c'; then $(CYGPATH_W) 'draw-mhmm.c'; else $(CYGPATH_W) '$(srcdir)/draw-mhmm.c'; fi`
	$(am__mv) $(DEPDIR)/draw_mhmm-draw-mhmm.Tpo $(DEPDIR)/draw_mhmm-draw-mhmm.Po
#	source='draw-mhmm.c' object='draw_mhmm-draw-mhmm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -c -o draw_mhmm-draw-mhmm.obj `if test -f 'draw-mhmm.c'; then $(CYGPATH_W) 'draw-mhmm.c'; else $(CYGPATH_W) '$(srcdir)/draw-mhmm.c'; fi`

draw_mhmm-read-mhmm.o: read-mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -MT draw_mhmm-read-mhmm.o -MD -MP -MF $(DEPDIR)/draw_mhmm-read-mhmm.Tpo -c -o draw_mhmm-read-mhmm.o `test -f 'read-mhmm.c' || echo '$(srcdir)/'`read-mhmm.c
	$(am__mv) $(DEPDIR)/draw_mhmm-read-mhmm.Tpo $(DEPDIR)/draw_mhmm-read-mhmm.Po
#	source='read-mhmm.c' object='draw_mhmm-read-mhmm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -c -o draw_mhmm-read-mhmm.o `test -f 'read-mhmm.c' || echo '$(srcdir)/'`read-mhmm.c

draw_mhmm-read-mhmm.obj: read-mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -MT draw_mhmm-read-mhmm.obj -MD -MP -MF $(DEPDIR)/draw_mhmm-read-mhmm.Tpo -c -o draw_mhmm-read-mhmm.obj `if test -f 'read-mhmm.c'; then $(CYGPATH_W) 'read-mhmm.c'; else $(CYGPATH_W) '$(srcdir)/read-mhmm.c'; fi`
	$(am__mv) $(DEPDIR)/draw_mhmm-read-mhmm.Tpo $(DEPDIR)/draw_mhmm-read-mhmm.Po
#	source='read-mhmm.c' object='draw_mhmm-read-mhmm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(draw_mhmm_CFLAGS) $(CFLAGS) -c -o draw_mhmm-read-mhmm.obj `if test -f 'read-mhmm.c'; then $(CYGPATH_W) 'read-mhmm.c'; else $(CYGPATH_W) '$(srcdir)/read-mhmm.c'; fi`

fasta_io-fasta-io.o: fasta-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fasta_io_CFLAGS) $(CFLAGS) -MT fasta_io-fasta-io.o -MD -MP -MF $(DEPDIR)/fasta_io-fasta-io.Tpo -c -o fasta_io-fasta-io.o `test -f 'fasta-io.c' || echo '$(srcdir)/'`fasta-io.c
	$(am__mv) $(DEPDIR)/fasta_io-fasta-io.Tpo $(DEPDIR)/fasta_io-fasta-io.Po
#	source='fasta-io.c' object='fasta_io-fasta-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fasta_io_CFLAGS) $(CFLAGS) -c -o fasta_io-fasta-io.o `test -f 'fasta-io.c' || echo '$(srcdir)/'`fasta-io.c

fasta_io-fasta-io.obj: fasta-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fasta_io_CFLAGS) $(CFLAGS) -MT fasta_io-fasta-io.obj -MD -MP -MF $(DEPDIR)/fasta_io-fasta-io.Tpo -c -o fasta_io-fasta-io.obj `if test -f 'fasta-io.c'; then $(CYGPATH_W) 'fasta-io.c'; else $(CYGPATH_W) '$(srcdir)/fasta-io.c'; fi`
	$(am__mv) $(DEPDIR)/fasta_io-fasta-io.Tpo $(DEPDIR)/fasta_io-fasta-io.Po
#	source='fasta-io.c' object='fasta_io-fasta-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fasta_io_CFLAGS) $(CFLAGS) -c -o fasta_io-fasta-io.obj `if test -f 'fasta-io.c'; then $(CYGPATH_W) 'fasta-io.c'; else $(CYGPATH_W) '$(srcdir)/fasta-io.c'; fi`

fimo-fimo.o: fimo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fimo_CFLAGS) $(CFLAGS) -MT fimo-fimo.o -MD -MP -MF $(DEPDIR)/fimo-fimo.Tpo -c -o fimo-fimo.o `test -f 'fimo.c' || echo '$(srcdir)/'`fimo.c
	$(am__mv) $(DEPDIR)/fimo-fimo.Tpo $(DEPDIR)/fimo-fimo.Po
#	source='fimo.c' object='fimo-fimo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fimo_CFLAGS) $(CFLAGS) -c -o fimo-fimo.o `test -f 'fimo.c' || echo '$(srcdir)/'`fimo.c

fimo-fimo.obj: fimo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fimo_CFLAGS) $(CFLAGS) -MT fimo-fimo.obj -MD -MP -MF $(DEPDIR)/fimo-fimo.Tpo -c -o fimo-fimo.obj `if test -f 'fimo.c'; then $(CYGPATH_W) 'fimo.c'; else $(CYGPATH_W) '$(srcdir)/fimo.c'; fi`
	$(am__mv) $(DEPDIR)/fimo-fimo.Tpo $(DEPDIR)/fimo-fimo.Po
#	source='fimo.c' object='fimo-fimo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fimo_CFLAGS) $(CFLAGS) -c -o fimo-fimo.obj `if test -f 'fimo.c'; then $(CYGPATH_W) 'fimo.c'; else $(CYGPATH_W) '$(srcdir)/fimo.c'; fi`

fitevd-fitevd.o: fitevd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fitevd_CFLAGS) $(CFLAGS) -MT fitevd-fitevd.o -MD -MP -MF $(DEPDIR)/fitevd-fitevd.Tpo -c -o fitevd-fitevd.o `test -f 'fitevd.c' || echo '$(srcdir)/'`fitevd.c
	$(am__mv) $(DEPDIR)/fitevd-fitevd.Tpo $(DEPDIR)/fitevd-fitevd.Po
#	source='fitevd.c' object='fitevd-fitevd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fitevd_CFLAGS) $(CFLAGS) -c -o fitevd-fitevd.o `test -f 'fitevd.c' || echo '$(srcdir)/'`fitevd.c

fitevd-fitevd.obj: fitevd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fitevd_CFLAGS) $(CFLAGS) -MT fitevd-fitevd.obj -MD -MP -MF $(DEPDIR)/fitevd-fitevd.Tpo -c -o fitevd-fitevd.obj `if test -f 'fitevd.c'; then $(CYGPATH_W) 'fitevd.c'; else $(CYGPATH_W) '$(srcdir)/fitevd.c'; fi`
	$(am__mv) $(DEPDIR)/fitevd-fitevd.Tpo $(DEPDIR)/fitevd-fitevd.Po
#	source='fitevd.c' object='fitevd-fitevd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fitevd_CFLAGS) $(CFLAGS) -c -o fitevd-fitevd.obj `if test -f 'fitevd.c'; then $(CYGPATH_W) 'fitevd.c'; else $(CYGPATH_W) '$(srcdir)/fitevd.c'; fi`

gendb-gendb.o: gendb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gendb_CFLAGS) $(CFLAGS) -MT gendb-gendb.o -MD -MP -MF $(DEPDIR)/gendb-gendb.Tpo -c -o gendb-gendb.o `test -f 'gendb.c' || echo '$(srcdir)/'`gendb.c
	$(am__mv) $(DEPDIR)/gendb-gendb.Tpo $(DEPDIR)/gendb-gendb.Po
#	source='gendb.c' object='gendb-gendb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gendb_CFLAGS) $(CFLAGS) -c -o gendb-gendb.o `test -f 'gendb.c' || echo '$(srcdir)/'`gendb.c

gendb-gendb.obj: gendb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gendb_CFLAGS) $(CFLAGS) -MT gendb-gendb.obj -MD -MP -MF $(DEPDIR)/gendb-gendb.Tpo -c -o gendb-gendb.obj `if test -f 'gendb.c'; then $(CYGPATH_W) 'gendb.c'; else $(CYGPATH_W) '$(srcdir)/gendb.c'; fi`
	$(am__mv) $(DEPDIR)/gendb-gendb.Tpo $(DEPDIR)/gendb-gendb.Po
#	source='gendb.c' object='gendb-gendb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gendb_CFLAGS) $(CFLAGS) -c -o gendb-gendb.obj `if test -f 'gendb.c'; then $(CYGPATH_W) 'gendb.c'; else $(CYGPATH_W) '$(srcdir)/gendb.c'; fi`

glam2-glam2_alphabet.o: glam2_alphabet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_alphabet.o -MD -MP -MF $(DEPDIR)/glam2-glam2_alphabet.Tpo -c -o glam2-glam2_alphabet.o `test -f 'glam2_alphabet.c' || echo '$(srcdir)/'`glam2_alphabet.c
	$(am__mv) $(DEPDIR)/glam2-glam2_alphabet.Tpo $(DEPDIR)/glam2-glam2_alphabet.Po
#	source='glam2_alphabet.c' object='glam2-glam2_alphabet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_alphabet.o `test -f 'glam2_alphabet.c' || echo '$(srcdir)/'`glam2_alphabet.c

glam2-glam2_alphabet.obj: glam2_alphabet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_alphabet.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_alphabet.Tpo -c -o glam2-glam2_alphabet.obj `if test -f 'glam2_alphabet.c'; then $(CYGPATH_W) 'glam2_alphabet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alphabet.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_alphabet.Tpo $(DEPDIR)/glam2-glam2_alphabet.Po
#	source='glam2_alphabet.c' object='glam2-glam2_alphabet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_alphabet.obj `if test -f 'glam2_alphabet.c'; then $(CYGPATH_W) 'glam2_alphabet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alphabet.c'; fi`

glam2-glam2_args.o: glam2_args.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_args.o -MD -MP -MF $(DEPDIR)/glam2-glam2_args.Tpo -c -o glam2-glam2_args.o `test -f 'glam2_args.c' || echo '$(srcdir)/'`glam2_args.c
	$(am__mv) $(DEPDIR)/glam2-glam2_args.Tpo $(DEPDIR)/glam2-glam2_args.Po
#	source='glam2_args.c' object='glam2-glam2_args.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_args.o `test -f 'glam2_args.c' || echo '$(srcdir)/'`glam2_args.c

glam2-glam2_args.obj: glam2_args.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_args.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_args.Tpo -c -o glam2-glam2_args.obj `if test -f 'glam2_args.c'; then $(CYGPATH_W) 'glam2_args.c'; else $(CYGPATH_W) '$(srcdir)/glam2_args.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_args.Tpo $(DEPDIR)/glam2-glam2_args.Po
#	source='glam2_args.c' object='glam2-glam2_args.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_args.obj `if test -f 'glam2_args.c'; then $(CYGPATH_W) 'glam2_args.c'; else $(CYGPATH_W) '$(srcdir)/glam2_args.c'; fi`

glam2-glam2_column_sample.o: glam2_column_sample.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_column_sample.o -MD -MP -MF $(DEPDIR)/glam2-glam2_column_sample.Tpo -c -o glam2-glam2_column_sample.o `test -f 'glam2_column_sample.c' || echo '$(srcdir)/'`glam2_column_sample.c
	$(am__mv) $(DEPDIR)/glam2-glam2_column_sample.Tpo $(DEPDIR)/glam2-glam2_column_sample.Po
#	source='glam2_column_sample.c' object='glam2-glam2_column_sample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_column_sample.o `test -f 'glam2_column_sample.c' || echo '$(srcdir)/'`glam2_column_sample.c

glam2-glam2_column_sample.obj: glam2_column_sample.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_column_sample.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_column_sample.Tpo -c -o glam2-glam2_column_sample.obj `if test -f 'glam2_column_sample.c'; then $(CYGPATH_W) 'glam2_column_sample.c'; else $(CYGPATH_W) '$(srcdir)/glam2_column_sample.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_column_sample.Tpo $(DEPDIR)/glam2-glam2_column_sample.Po
#	source='glam2_column_sample.c' object='glam2-glam2_column_sample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_column_sample.obj `if test -f 'glam2_column_sample.c'; then $(CYGPATH_W) 'glam2_column_sample.c'; else $(CYGPATH_W) '$(srcdir)/glam2_column_sample.c'; fi`

glam2-glam2_dirichlet.o: glam2_dirichlet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_dirichlet.o -MD -MP -MF $(DEPDIR)/glam2-glam2_dirichlet.Tpo -c -o glam2-glam2_dirichlet.o `test -f 'glam2_dirichlet.c' || echo '$(srcdir)/'`glam2_dirichlet.c
	$(am__mv) $(DEPDIR)/glam2-glam2_dirichlet.Tpo $(DEPDIR)/glam2-glam2_dirichlet.Po
#	source='glam2_dirichlet.c' object='glam2-glam2_dirichlet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_dirichlet.o `test -f 'glam2_dirichlet.c' || echo '$(srcdir)/'`glam2_dirichlet.c

glam2-glam2_dirichlet.obj: glam2_dirichlet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_dirichlet.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_dirichlet.Tpo -c -o glam2-glam2_dirichlet.obj `if test -f 'glam2_dirichlet.c'; then $(CYGPATH_W) 'glam2_dirichlet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dirichlet.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_dirichlet.Tpo $(DEPDIR)/glam2-glam2_dirichlet.Po
#	source='glam2_dirichlet.c' object='glam2-glam2_dirichlet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_dirichlet.obj `if test -f 'glam2_dirichlet.c'; then $(CYGPATH_W) 'glam2_dirichlet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dirichlet.c'; fi`

glam2-glam2_dna_prior.o: glam2_dna_prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_dna_prior.o -MD -MP -MF $(DEPDIR)/glam2-glam2_dna_prior.Tpo -c -o glam2-glam2_dna_prior.o `test -f 'glam2_dna_prior.c' || echo '$(srcdir)/'`glam2_dna_prior.c
	$(am__mv) $(DEPDIR)/glam2-glam2_dna_prior.Tpo $(DEPDIR)/glam2-glam2_dna_prior.Po
#	source='glam2_dna_prior.c' object='glam2-glam2_dna_prior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_dna_prior.o `test -f 'glam2_dna_prior.c' || echo '$(srcdir)/'`glam2_dna_prior.c

glam2-glam2_dna_prior.obj: glam2_dna_prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_dna_prior.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_dna_prior.Tpo -c -o glam2-glam2_dna_prior.obj `if test -f 'glam2_dna_prior.c'; then $(CYGPATH_W) 'glam2_dna_prior.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dna_prior.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_dna_prior.Tpo $(DEPDIR)/glam2-glam2_dna_prior.Po
#	source='glam2_dna_prior.c' object='glam2-glam2_dna_prior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_dna_prior.obj `if test -f 'glam2_dna_prior.c'; then $(CYGPATH_W) 'glam2_dna_prior.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dna_prior.c'; fi`

glam2-glam2_fasta.o: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_fasta.o -MD -MP -MF $(DEPDIR)/glam2-glam2_fasta.Tpo -c -o glam2-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c
	$(am__mv) $(DEPDIR)/glam2-glam2_fasta.Tpo $(DEPDIR)/glam2-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2-glam2_fasta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c

glam2-glam2_fasta.obj: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_fasta.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_fasta.Tpo -c -o glam2-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_fasta.Tpo $(DEPDIR)/glam2-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2-glam2_fasta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`

glam2-glam2_glam2.o: glam2_glam2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_glam2.o -MD -MP -MF $(DEPDIR)/glam2-glam2_glam2.Tpo -c -o glam2-glam2_glam2.o `test -f 'glam2_glam2.c' || echo '$(srcdir)/'`glam2_glam2.c
	$(am__mv) $(DEPDIR)/glam2-glam2_glam2.Tpo $(DEPDIR)/glam2-glam2_glam2.Po
#	source='glam2_glam2.c' object='glam2-glam2_glam2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_glam2.o `test -f 'glam2_glam2.c' || echo '$(srcdir)/'`glam2_glam2.c

glam2-glam2_glam2.obj: glam2_glam2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_glam2.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_glam2.Tpo -c -o glam2-glam2_glam2.obj `if test -f 'glam2_glam2.c'; then $(CYGPATH_W) 'glam2_glam2.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_glam2.Tpo $(DEPDIR)/glam2-glam2_glam2.Po
#	source='glam2_glam2.c' object='glam2-glam2_glam2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_glam2.obj `if test -f 'glam2_glam2.c'; then $(CYGPATH_W) 'glam2_glam2.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2.c'; fi`

glam2-glam2_glam2_aln.o: glam2_glam2_aln.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_glam2_aln.o -MD -MP -MF $(DEPDIR)/glam2-glam2_glam2_aln.Tpo -c -o glam2-glam2_glam2_aln.o `test -f 'glam2_glam2_aln.c' || echo '$(srcdir)/'`glam2_glam2_aln.c
	$(am__mv) $(DEPDIR)/glam2-glam2_glam2_aln.Tpo $(DEPDIR)/glam2-glam2_glam2_aln.Po
#	source='glam2_glam2_aln.c' object='glam2-glam2_glam2_aln.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_glam2_aln.o `test -f 'glam2_glam2_aln.c' || echo '$(srcdir)/'`glam2_glam2_aln.c

glam2-glam2_glam2_aln.obj: glam2_glam2_aln.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_glam2_aln.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_glam2_aln.Tpo -c -o glam2-glam2_glam2_aln.obj `if test -f 'glam2_glam2_aln.c'; then $(CYGPATH_W) 'glam2_glam2_aln.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2_aln.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_glam2_aln.Tpo $(DEPDIR)/glam2-glam2_glam2_aln.Po
#	source='glam2_glam2_aln.c' object='glam2-glam2_glam2_aln.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_glam2_aln.obj `if test -f 'glam2_glam2_aln.c'; then $(CYGPATH_W) 'glam2_glam2_aln.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2_aln.c'; fi`

glam2-glam2_init.o: glam2_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_init.o -MD -MP -MF $(DEPDIR)/glam2-glam2_init.Tpo -c -o glam2-glam2_init.o `test -f 'glam2_init.c' || echo '$(srcdir)/'`glam2_init.c
	$(am__mv) $(DEPDIR)/glam2-glam2_init.Tpo $(DEPDIR)/glam2-glam2_init.Po
#	source='glam2_init.c' object='glam2-glam2_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_init.o `test -f 'glam2_init.c' || echo '$(srcdir)/'`glam2_init.c

glam2-glam2_init.obj: glam2_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_init.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_init.Tpo -c -o glam2-glam2_init.obj `if test -f 'glam2_init.c'; then $(CYGPATH_W) 'glam2_init.c'; else $(CYGPATH_W) '$(srcdir)/glam2_init.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_init.Tpo $(DEPDIR)/glam2-glam2_init.Po
#	source='glam2_init.c' object='glam2-glam2_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_init.obj `if test -f 'glam2_init.c'; then $(CYGPATH_W) 'glam2_init.c'; else $(CYGPATH_W) '$(srcdir)/glam2_init.c'; fi`

glam2-glam2_output.o: glam2_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_output.o -MD -MP -MF $(DEPDIR)/glam2-glam2_output.Tpo -c -o glam2-glam2_output.o `test -f 'glam2_output.c' || echo '$(srcdir)/'`glam2_output.c
	$(am__mv) $(DEPDIR)/glam2-glam2_output.Tpo $(DEPDIR)/glam2-glam2_output.Po
#	source='glam2_output.c' object='glam2-glam2_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_output.o `test -f 'glam2_output.c' || echo '$(srcdir)/'`glam2_output.c

glam2-glam2_output.obj: glam2_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_output.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_output.Tpo -c -o glam2-glam2_output.obj `if test -f 'glam2_output.c'; then $(CYGPATH_W) 'glam2_output.c'; else $(CYGPATH_W) '$(srcdir)/glam2_output.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_output.Tpo $(DEPDIR)/glam2-glam2_output.Po
#	source='glam2_output.c' object='glam2-glam2_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_output.obj `if test -f 'glam2_output.c'; then $(CYGPATH_W) 'glam2_output.c'; else $(CYGPATH_W) '$(srcdir)/glam2_output.c'; fi`

glam2-glam2_recode3_20comp.o: glam2_recode3_20comp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_recode3_20comp.o -MD -MP -MF $(DEPDIR)/glam2-glam2_recode3_20comp.Tpo -c -o glam2-glam2_recode3_20comp.o `test -f 'glam2_recode3_20comp.c' || echo '$(srcdir)/'`glam2_recode3_20comp.c
	$(am__mv) $(DEPDIR)/glam2-glam2_recode3_20comp.Tpo $(DEPDIR)/glam2-glam2_recode3_20comp.Po
#	source='glam2_recode3_20comp.c' object='glam2-glam2_recode3_20comp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_recode3_20comp.o `test -f 'glam2_recode3_20comp.c' || echo '$(srcdir)/'`glam2_recode3_20comp.c

glam2-glam2_recode3_20comp.obj: glam2_recode3_20comp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_recode3_20comp.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_recode3_20comp.Tpo -c -o glam2-glam2_recode3_20comp.obj `if test -f 'glam2_recode3_20comp.c'; then $(CYGPATH_W) 'glam2_recode3_20comp.c'; else $(CYGPATH_W) '$(srcdir)/glam2_recode3_20comp.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_recode3_20comp.Tpo $(DEPDIR)/glam2-glam2_recode3_20comp.Po
#	source='glam2_recode3_20comp.c' object='glam2-glam2_recode3_20comp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_recode3_20comp.obj `if test -f 'glam2_recode3_20comp.c'; then $(CYGPATH_W) 'glam2_recode3_20comp.c'; else $(CYGPATH_W) '$(srcdir)/glam2_recode3_20comp.c'; fi`

glam2-glam2_site_sample.o: glam2_site_sample.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_site_sample.o -MD -MP -MF $(DEPDIR)/glam2-glam2_site_sample.Tpo -c -o glam2-glam2_site_sample.o `test -f 'glam2_site_sample.c' || echo '$(srcdir)/'`glam2_site_sample.c
	$(am__mv) $(DEPDIR)/glam2-glam2_site_sample.Tpo $(DEPDIR)/glam2-glam2_site_sample.Po
#	source='glam2_site_sample.c' object='glam2-glam2_site_sample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_site_sample.o `test -f 'glam2_site_sample.c' || echo '$(srcdir)/'`glam2_site_sample.c

glam2-glam2_site_sample.obj: glam2_site_sample.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_site_sample.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_site_sample.Tpo -c -o glam2-glam2_site_sample.obj `if test -f 'glam2_site_sample.c'; then $(CYGPATH_W) 'glam2_site_sample.c'; else $(CYGPATH_W) '$(srcdir)/glam2_site_sample.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_site_sample.Tpo $(DEPDIR)/glam2-glam2_site_sample.Po
#	source='glam2_site_sample.c' object='glam2-glam2_site_sample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_site_sample.obj `if test -f 'glam2_site_sample.c'; then $(CYGPATH_W) 'glam2_site_sample.c'; else $(CYGPATH_W) '$(srcdir)/glam2_site_sample.c'; fi`

glam2-glam2_util.o: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_util.o -MD -MP -MF $(DEPDIR)/glam2-glam2_util.Tpo -c -o glam2-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c
	$(am__mv) $(DEPDIR)/glam2-glam2_util.Tpo $(DEPDIR)/glam2-glam2_util.Po
#	source='glam2_util.c' object='glam2-glam2_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c

glam2-glam2_util.obj: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -MT glam2-glam2_util.obj -MD -MP -MF $(DEPDIR)/glam2-glam2_util.Tpo -c -o glam2-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`
	$(am__mv) $(DEPDIR)/glam2-glam2_util.Tpo $(DEPDIR)/glam2-glam2_util.Po
#	source='glam2_util.c' object='glam2-glam2_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2_CFLAGS) $(CFLAGS) -c -o glam2-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`

glam2format-glam2_glam2format.o: glam2_glam2format.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_glam2format.o -MD -MP -MF $(DEPDIR)/glam2format-glam2_glam2format.Tpo -c -o glam2format-glam2_glam2format.o `test -f 'glam2_glam2format.c' || echo '$(srcdir)/'`glam2_glam2format.c
	$(am__mv) $(DEPDIR)/glam2format-glam2_glam2format.Tpo $(DEPDIR)/glam2format-glam2_glam2format.Po
#	source='glam2_glam2format.c' object='glam2format-glam2_glam2format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_glam2format.o `test -f 'glam2_glam2format.c' || echo '$(srcdir)/'`glam2_glam2format.c

glam2format-glam2_glam2format.obj: glam2_glam2format.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_glam2format.obj -MD -MP -MF $(DEPDIR)/glam2format-glam2_glam2format.Tpo -c -o glam2format-glam2_glam2format.obj `if test -f 'glam2_glam2format.c'; then $(CYGPATH_W) 'glam2_glam2format.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2format.c'; fi`
	$(am__mv) $(DEPDIR)/glam2format-glam2_glam2format.Tpo $(DEPDIR)/glam2format-glam2_glam2format.Po
#	source='glam2_glam2format.c' object='glam2format-glam2_glam2format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_glam2format.obj `if test -f 'glam2_glam2format.c'; then $(CYGPATH_W) 'glam2_glam2format.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2format.c'; fi`

glam2format-glam2_alignment.o: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_alignment.o -MD -MP -MF $(DEPDIR)/glam2format-glam2_alignment.Tpo -c -o glam2format-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c
	$(am__mv) $(DEPDIR)/glam2format-glam2_alignment.Tpo $(DEPDIR)/glam2format-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2format-glam2_alignment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c

glam2format-glam2_alignment.obj: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_alignment.obj -MD -MP -MF $(DEPDIR)/glam2format-glam2_alignment.Tpo -c -o glam2format-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`
	$(am__mv) $(DEPDIR)/glam2format-glam2_alignment.Tpo $(DEPDIR)/glam2format-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2format-glam2_alignment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`

glam2format-glam2_fasta.o: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_fasta.o -MD -MP -MF $(DEPDIR)/glam2format-glam2_fasta.Tpo -c -o glam2format-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c
	$(am__mv) $(DEPDIR)/glam2format-glam2_fasta.Tpo $(DEPDIR)/glam2format-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2format-glam2_fasta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c

glam2format-glam2_fasta.obj: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_fasta.obj -MD -MP -MF $(DEPDIR)/glam2format-glam2_fasta.Tpo -c -o glam2format-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`
	$(am__mv) $(DEPDIR)/glam2format-glam2_fasta.Tpo $(DEPDIR)/glam2format-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2format-glam2_fasta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`

glam2format-glam2_util.o: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_util.o -MD -MP -MF $(DEPDIR)/glam2format-glam2_util.Tpo -c -o glam2format-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c
	$(am__mv) $(DEPDIR)/glam2format-glam2_util.Tpo $(DEPDIR)/glam2format-glam2_util.Po
#	source='glam2_util.c' object='glam2format-glam2_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c

glam2format-glam2_util.obj: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -MT glam2format-glam2_util.obj -MD -MP -MF $(DEPDIR)/glam2format-glam2_util.Tpo -c -o glam2format-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`
	$(am__mv) $(DEPDIR)/glam2format-glam2_util.Tpo $(DEPDIR)/glam2format-glam2_util.Po
#	source='glam2_util.c' object='glam2format-glam2_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2format_CFLAGS) $(CFLAGS) -c -o glam2format-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`

glam2mask-glam2_glam2mask.o: glam2_glam2mask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_glam2mask.o -MD -MP -MF $(DEPDIR)/glam2mask-glam2_glam2mask.Tpo -c -o glam2mask-glam2_glam2mask.o `test -f 'glam2_glam2mask.c' || echo '$(srcdir)/'`glam2_glam2mask.c
	$(am__mv) $(DEPDIR)/glam2mask-glam2_glam2mask.Tpo $(DEPDIR)/glam2mask-glam2_glam2mask.Po
#	source='glam2_glam2mask.c' object='glam2mask-glam2_glam2mask.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_glam2mask.o `test -f 'glam2_glam2mask.c' || echo '$(srcdir)/'`glam2_glam2mask.c

glam2mask-glam2_glam2mask.obj: glam2_glam2mask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_glam2mask.obj -MD -MP -MF $(DEPDIR)/glam2mask-glam2_glam2mask.Tpo -c -o glam2mask-glam2_glam2mask.obj `if test -f 'glam2_glam2mask.c'; then $(CYGPATH_W) 'glam2_glam2mask.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2mask.c'; fi`
	$(am__mv) $(DEPDIR)/glam2mask-glam2_glam2mask.Tpo $(DEPDIR)/glam2mask-glam2_glam2mask.Po
#	source='glam2_glam2mask.c' object='glam2mask-glam2_glam2mask.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_glam2mask.obj `if test -f 'glam2_glam2mask.c'; then $(CYGPATH_W) 'glam2_glam2mask.c'; else $(CYGPATH_W) '$(srcdir)/glam2_glam2mask.c'; fi`

glam2mask-glam2_alignment.o: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_alignment.o -MD -MP -MF $(DEPDIR)/glam2mask-glam2_alignment.Tpo -c -o glam2mask-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c
	$(am__mv) $(DEPDIR)/glam2mask-glam2_alignment.Tpo $(DEPDIR)/glam2mask-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2mask-glam2_alignment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c

glam2mask-glam2_alignment.obj: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_alignment.obj -MD -MP -MF $(DEPDIR)/glam2mask-glam2_alignment.Tpo -c -o glam2mask-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`
	$(am__mv) $(DEPDIR)/glam2mask-glam2_alignment.Tpo $(DEPDIR)/glam2mask-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2mask-glam2_alignment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`

glam2mask-glam2_fasta.o: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_fasta.o -MD -MP -MF $(DEPDIR)/glam2mask-glam2_fasta.Tpo -c -o glam2mask-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c
	$(am__mv) $(DEPDIR)/glam2mask-glam2_fasta.Tpo $(DEPDIR)/glam2mask-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2mask-glam2_fasta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c

glam2mask-glam2_fasta.obj: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_fasta.obj -MD -MP -MF $(DEPDIR)/glam2mask-glam2_fasta.Tpo -c -o glam2mask-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`
	$(am__mv) $(DEPDIR)/glam2mask-glam2_fasta.Tpo $(DEPDIR)/glam2mask-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2mask-glam2_fasta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`

glam2mask-glam2_util.o: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_util.o -MD -MP -MF $(DEPDIR)/glam2mask-glam2_util.Tpo -c -o glam2mask-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c
	$(am__mv) $(DEPDIR)/glam2mask-glam2_util.Tpo $(DEPDIR)/glam2mask-glam2_util.Po
#	source='glam2_util.c' object='glam2mask-glam2_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c

glam2mask-glam2_util.obj: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -MT glam2mask-glam2_util.obj -MD -MP -MF $(DEPDIR)/glam2mask-glam2_util.Tpo -c -o glam2mask-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`
	$(am__mv) $(DEPDIR)/glam2mask-glam2_util.Tpo $(DEPDIR)/glam2mask-glam2_util.Po
#	source='glam2_util.c' object='glam2mask-glam2_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2mask_CFLAGS) $(CFLAGS) -c -o glam2mask-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`

glam2scan-glam2_alignment.o: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_alignment.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_alignment.Tpo -c -o glam2scan-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_alignment.Tpo $(DEPDIR)/glam2scan-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2scan-glam2_alignment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_alignment.o `test -f 'glam2_alignment.c' || echo '$(srcdir)/'`glam2_alignment.c

glam2scan-glam2_alignment.obj: glam2_alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_alignment.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_alignment.Tpo -c -o glam2scan-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_alignment.Tpo $(DEPDIR)/glam2scan-glam2_alignment.Po
#	source='glam2_alignment.c' object='glam2scan-glam2_alignment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_alignment.obj `if test -f 'glam2_alignment.c'; then $(CYGPATH_W) 'glam2_alignment.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alignment.c'; fi`

glam2scan-glam2_alphabet.o: glam2_alphabet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_alphabet.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_alphabet.Tpo -c -o glam2scan-glam2_alphabet.o `test -f 'glam2_alphabet.c' || echo '$(srcdir)/'`glam2_alphabet.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_alphabet.Tpo $(DEPDIR)/glam2scan-glam2_alphabet.Po
#	source='glam2_alphabet.c' object='glam2scan-glam2_alphabet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_alphabet.o `test -f 'glam2_alphabet.c' || echo '$(srcdir)/'`glam2_alphabet.c

glam2scan-glam2_alphabet.obj: glam2_alphabet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_alphabet.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_alphabet.Tpo -c -o glam2scan-glam2_alphabet.obj `if test -f 'glam2_alphabet.c'; then $(CYGPATH_W) 'glam2_alphabet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alphabet.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_alphabet.Tpo $(DEPDIR)/glam2scan-glam2_alphabet.Po
#	source='glam2_alphabet.c' object='glam2scan-glam2_alphabet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_alphabet.obj `if test -f 'glam2_alphabet.c'; then $(CYGPATH_W) 'glam2_alphabet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_alphabet.c'; fi`

glam2scan-glam2_dna_prior.o: glam2_dna_prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_dna_prior.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_dna_prior.Tpo -c -o glam2scan-glam2_dna_prior.o `test -f 'glam2_dna_prior.c' || echo '$(srcdir)/'`glam2_dna_prior.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_dna_prior.Tpo $(DEPDIR)/glam2scan-glam2_dna_prior.Po
#	source='glam2_dna_prior.c' object='glam2scan-glam2_dna_prior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_dna_prior.o `test -f 'glam2_dna_prior.c' || echo '$(srcdir)/'`glam2_dna_prior.c

glam2scan-glam2_dna_prior.obj: glam2_dna_prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_dna_prior.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_dna_prior.Tpo -c -o glam2scan-glam2_dna_prior.obj `if test -f 'glam2_dna_prior.c'; then $(CYGPATH_W) 'glam2_dna_prior.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dna_prior.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_dna_prior.Tpo $(DEPDIR)/glam2scan-glam2_dna_prior.Po
#	source='glam2_dna_prior.c' object='glam2scan-glam2_dna_prior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_dna_prior.obj `if test -f 'glam2_dna_prior.c'; then $(CYGPATH_W) 'glam2_dna_prior.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dna_prior.c'; fi`

glam2scan-glam2_fasta.o: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_fasta.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_fasta.Tpo -c -o glam2scan-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_fasta.Tpo $(DEPDIR)/glam2scan-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2scan-glam2_fasta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_fasta.o `test -f 'glam2_fasta.c' || echo '$(srcdir)/'`glam2_fasta.c

glam2scan-glam2_fasta.obj: glam2_fasta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_fasta.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_fasta.Tpo -c -o glam2scan-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_fasta.Tpo $(DEPDIR)/glam2scan-glam2_fasta.Po
#	source='glam2_fasta.c' object='glam2scan-glam2_fasta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_fasta.obj `if test -f 'glam2_fasta.c'; then $(CYGPATH_W) 'glam2_fasta.c'; else $(CYGPATH_W) '$(srcdir)/glam2_fasta.c'; fi`

glam2scan-glam2_dirichlet.o: glam2_dirichlet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_dirichlet.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_dirichlet.Tpo -c -o glam2scan-glam2_dirichlet.o `test -f 'glam2_dirichlet.c' || echo '$(srcdir)/'`glam2_dirichlet.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_dirichlet.Tpo $(DEPDIR)/glam2scan-glam2_dirichlet.Po
#	source='glam2_dirichlet.c' object='glam2scan-glam2_dirichlet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_dirichlet.o `test -f 'glam2_dirichlet.c' || echo '$(srcdir)/'`glam2_dirichlet.c

glam2scan-glam2_dirichlet.obj: glam2_dirichlet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_dirichlet.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_dirichlet.Tpo -c -o glam2scan-glam2_dirichlet.obj `if test -f 'glam2_dirichlet.c'; then $(CYGPATH_W) 'glam2_dirichlet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dirichlet.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_dirichlet.Tpo $(DEPDIR)/glam2scan-glam2_dirichlet.Po
#	source='glam2_dirichlet.c' object='glam2scan-glam2_dirichlet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_dirichlet.obj `if test -f 'glam2_dirichlet.c'; then $(CYGPATH_W) 'glam2_dirichlet.c'; else $(CYGPATH_W) '$(srcdir)/glam2_dirichlet.c'; fi`

glam2scan-glam2_heap.o: glam2_heap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_heap.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_heap.Tpo -c -o glam2scan-glam2_heap.o `test -f 'glam2_heap.c' || echo '$(srcdir)/'`glam2_heap.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_heap.Tpo $(DEPDIR)/glam2scan-glam2_heap.Po
#	source='glam2_heap.c' object='glam2scan-glam2_heap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_heap.o `test -f 'glam2_heap.c' || echo '$(srcdir)/'`glam2_heap.c

glam2scan-glam2_heap.obj: glam2_heap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_heap.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_heap.Tpo -c -o glam2scan-glam2_heap.obj `if test -f 'glam2_heap.c'; then $(CYGPATH_W) 'glam2_heap.c'; else $(CYGPATH_W) '$(srcdir)/glam2_heap.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_heap.Tpo $(DEPDIR)/glam2scan-glam2_heap.Po
#	source='glam2_heap.c' object='glam2scan-glam2_heap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_heap.obj `if test -f 'glam2_heap.c'; then $(CYGPATH_W) 'glam2_heap.c'; else $(CYGPATH_W) '$(srcdir)/glam2_heap.c'; fi`

glam2scan-glam2_motif.o: glam2_motif.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_motif.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_motif.Tpo -c -o glam2scan-glam2_motif.o `test -f 'glam2_motif.c' || echo '$(srcdir)/'`glam2_motif.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_motif.Tpo $(DEPDIR)/glam2scan-glam2_motif.Po
#	source='glam2_motif.c' object='glam2scan-glam2_motif.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_motif.o `test -f 'glam2_motif.c' || echo '$(srcdir)/'`glam2_motif.c

glam2scan-glam2_motif.obj: glam2_motif.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_motif.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_motif.Tpo -c -o glam2scan-glam2_motif.obj `if test -f 'glam2_motif.c'; then $(CYGPATH_W) 'glam2_motif.c'; else $(CYGPATH_W) '$(srcdir)/glam2_motif.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_motif.Tpo $(DEPDIR)/glam2scan-glam2_motif.Po
#	source='glam2_motif.c' object='glam2scan-glam2_motif.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_motif.obj `if test -f 'glam2_motif.c'; then $(CYGPATH_W) 'glam2_motif.c'; else $(CYGPATH_W) '$(srcdir)/glam2_motif.c'; fi`

glam2scan-glam2_scan.o: glam2_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan.Tpo -c -o glam2scan-glam2_scan.o `test -f 'glam2_scan.c' || echo '$(srcdir)/'`glam2_scan.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan.Tpo $(DEPDIR)/glam2scan-glam2_scan.Po
#	source='glam2_scan.c' object='glam2scan-glam2_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan.o `test -f 'glam2_scan.c' || echo '$(srcdir)/'`glam2_scan.c

glam2scan-glam2_scan.obj: glam2_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan.Tpo -c -o glam2scan-glam2_scan.obj `if test -f 'glam2_scan.c'; then $(CYGPATH_W) 'glam2_scan.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan.Tpo $(DEPDIR)/glam2scan-glam2_scan.Po
#	source='glam2_scan.c' object='glam2scan-glam2_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan.obj `if test -f 'glam2_scan.c'; then $(CYGPATH_W) 'glam2_scan.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan.c'; fi`

glam2scan-glam2_scan_args.o: glam2_scan_args.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_args.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_args.Tpo -c -o glam2scan-glam2_scan_args.o `test -f 'glam2_scan_args.c' || echo '$(srcdir)/'`glam2_scan_args.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_args.Tpo $(DEPDIR)/glam2scan-glam2_scan_args.Po
#	source='glam2_scan_args.c' object='glam2scan-glam2_scan_args.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_args.o `test -f 'glam2_scan_args.c' || echo '$(srcdir)/'`glam2_scan_args.c

glam2scan-glam2_scan_args.obj: glam2_scan_args.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_args.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_args.Tpo -c -o glam2scan-glam2_scan_args.obj `if test -f 'glam2_scan_args.c'; then $(CYGPATH_W) 'glam2_scan_args.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_args.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_args.Tpo $(DEPDIR)/glam2scan-glam2_scan_args.Po
#	source='glam2_scan_args.c' object='glam2scan-glam2_scan_args.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_args.obj `if test -f 'glam2_scan_args.c'; then $(CYGPATH_W) 'glam2_scan_args.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_args.c'; fi`

glam2scan-glam2_scan_init.o: glam2_scan_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_init.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_init.Tpo -c -o glam2scan-glam2_scan_init.o `test -f 'glam2_scan_init.c' || echo '$(srcdir)/'`glam2_scan_init.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_init.Tpo $(DEPDIR)/glam2scan-glam2_scan_init.Po
#	source='glam2_scan_init.c' object='glam2scan-glam2_scan_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_init.o `test -f 'glam2_scan_init.c' || echo '$(srcdir)/'`glam2_scan_init.c

glam2scan-glam2_scan_init.obj: glam2_scan_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_init.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_init.Tpo -c -o glam2scan-glam2_scan_init.obj `if test -f 'glam2_scan_init.c'; then $(CYGPATH_W) 'glam2_scan_init.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_init.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_init.Tpo $(DEPDIR)/glam2scan-glam2_scan_init.Po
#	source='glam2_scan_init.c' object='glam2scan-glam2_scan_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_init.obj `if test -f 'glam2_scan_init.c'; then $(CYGPATH_W) 'glam2_scan_init.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_init.c'; fi`

glam2scan-glam2_scan_output.o: glam2_scan_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_output.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_output.Tpo -c -o glam2scan-glam2_scan_output.o `test -f 'glam2_scan_output.c' || echo '$(srcdir)/'`glam2_scan_output.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_output.Tpo $(DEPDIR)/glam2scan-glam2_scan_output.Po
#	source='glam2_scan_output.c' object='glam2scan-glam2_scan_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_output.o `test -f 'glam2_scan_output.c' || echo '$(srcdir)/'`glam2_scan_output.c

glam2scan-glam2_scan_output.obj: glam2_scan_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_scan_output.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_scan_output.Tpo -c -o glam2scan-glam2_scan_output.obj `if test -f 'glam2_scan_output.c'; then $(CYGPATH_W) 'glam2_scan_output.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_output.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_scan_output.Tpo $(DEPDIR)/glam2scan-glam2_scan_output.Po
#	source='glam2_scan_output.c' object='glam2scan-glam2_scan_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_scan_output.obj `if test -f 'glam2_scan_output.c'; then $(CYGPATH_W) 'glam2_scan_output.c'; else $(CYGPATH_W) '$(srcdir)/glam2_scan_output.c'; fi`

glam2scan-glam2_recode3_20comp.o: glam2_recode3_20comp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_recode3_20comp.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_recode3_20comp.Tpo -c -o glam2scan-glam2_recode3_20comp.o `test -f 'glam2_recode3_20comp.c' || echo '$(srcdir)/'`glam2_recode3_20comp.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_recode3_20comp.Tpo $(DEPDIR)/glam2scan-glam2_recode3_20comp.Po
#	source='glam2_recode3_20comp.c' object='glam2scan-glam2_recode3_20comp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_recode3_20comp.o `test -f 'glam2_recode3_20comp.c' || echo '$(srcdir)/'`glam2_recode3_20comp.c

glam2scan-glam2_recode3_20comp.obj: glam2_recode3_20comp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_recode3_20comp.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_recode3_20comp.Tpo -c -o glam2scan-glam2_recode3_20comp.obj `if test -f 'glam2_recode3_20comp.c'; then $(CYGPATH_W) 'glam2_recode3_20comp.c'; else $(CYGPATH_W) '$(srcdir)/glam2_recode3_20comp.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_recode3_20comp.Tpo $(DEPDIR)/glam2scan-glam2_recode3_20comp.Po
#	source='glam2_recode3_20comp.c' object='glam2scan-glam2_recode3_20comp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_recode3_20comp.obj `if test -f 'glam2_recode3_20comp.c'; then $(CYGPATH_W) 'glam2_recode3_20comp.c'; else $(CYGPATH_W) '$(srcdir)/glam2_recode3_20comp.c'; fi`

glam2scan-glam2_util.o: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_util.o -MD -MP -MF $(DEPDIR)/glam2scan-glam2_util.Tpo -c -o glam2scan-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c
	$(am__mv) $(DEPDIR)/glam2scan-glam2_util.Tpo $(DEPDIR)/glam2scan-glam2_util.Po
#	source='glam2_util.c' object='glam2scan-glam2_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_util.o `test -f 'glam2_util.c' || echo '$(srcdir)/'`glam2_util.c

glam2scan-glam2_util.obj: glam2_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -MT glam2scan-glam2_util.obj -MD -MP -MF $(DEPDIR)/glam2scan-glam2_util.Tpo -c -o glam2scan-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`
	$(am__mv) $(DEPDIR)/glam2scan-glam2_util.Tpo $(DEPDIR)/glam2scan-glam2_util.Po
#	source='glam2_util.c' object='glam2scan-glam2_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glam2scan_CFLAGS) $(CFLAGS) -c -o glam2scan-glam2_util.obj `if test -f 'glam2_util.c'; then $(CYGPATH_W) 'glam2_util.c'; else $(CYGPATH_W) '$(srcdir)/glam2_util.c'; fi`

gomo-gomo.o: gomo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-gomo.o -MD -MP -MF $(DEPDIR)/gomo-gomo.Tpo -c -o gomo-gomo.o `test -f 'gomo.c' || echo '$(srcdir)/'`gomo.c
	$(am__mv) $(DEPDIR)/gomo-gomo.Tpo $(DEPDIR)/gomo-gomo.Po
#	source='gomo.c' object='gomo-gomo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-gomo.o `test -f 'gomo.c' || echo '$(srcdir)/'`gomo.c

gomo-gomo.obj: gomo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-gomo.obj -MD -MP -MF $(DEPDIR)/gomo-gomo.Tpo -c -o gomo-gomo.obj `if test -f 'gomo.c'; then $(CYGPATH_W) 'gomo.c'; else $(CYGPATH_W) '$(srcdir)/gomo.c'; fi`
	$(am__mv) $(DEPDIR)/gomo-gomo.Tpo $(DEPDIR)/gomo-gomo.Po
#	source='gomo.c' object='gomo-gomo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-gomo.obj `if test -f 'gomo.c'; then $(CYGPATH_W) 'gomo.c'; else $(CYGPATH_W) '$(srcdir)/gomo.c'; fi`

gomo-gomo_highlight.o: gomo_highlight.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-gomo_highlight.o -MD -MP -MF $(DEPDIR)/gomo-gomo_highlight.Tpo -c -o gomo-gomo_highlight.o `test -f 'gomo_highlight.c' || echo '$(srcdir)/'`gomo_highlight.c
	$(am__mv) $(DEPDIR)/gomo-gomo_highlight.Tpo $(DEPDIR)/gomo-gomo_highlight.Po
#	source='gomo_highlight.c' object='gomo-gomo_highlight.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-gomo_highlight.o `test -f 'gomo_highlight.c' || echo '$(srcdir)/'`gomo_highlight.c

gomo-gomo_highlight.obj: gomo_highlight.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-gomo_highlight.obj -MD -MP -MF $(DEPDIR)/gomo-gomo_highlight.Tpo -c -o gomo-gomo_highlight.obj `if test -f 'gomo_highlight.c'; then $(CYGPATH_W) 'gomo_highlight.c'; else $(CYGPATH_W) '$(srcdir)/gomo_highlight.c'; fi`
	$(am__mv) $(DEPDIR)/gomo-gomo_highlight.Tpo $(DEPDIR)/gomo-gomo_highlight.Po
#	source='gomo_highlight.c' object='gomo-gomo_highlight.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-gomo_highlight.obj `if test -f 'gomo_highlight.c'; then $(CYGPATH_W) 'gomo_highlight.c'; else $(CYGPATH_W) '$(srcdir)/gomo_highlight.c'; fi`

gomo-merger.o: merger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-merger.o -MD -MP -MF $(DEPDIR)/gomo-merger.Tpo -c -o gomo-merger.o `test -f 'merger.c' || echo '$(srcdir)/'`merger.c
	$(am__mv) $(DEPDIR)/gomo-merger.Tpo $(DEPDIR)/gomo-merger.Po
#	source='merger.c' object='gomo-merger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-merger.o `test -f 'merger.c' || echo '$(srcdir)/'`merger.c

gomo-merger.obj: merger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-merger.obj -MD -MP -MF $(DEPDIR)/gomo-merger.Tpo -c -o gomo-merger.obj `if test -f 'merger.c'; then $(CYGPATH_W) 'merger.c'; else $(CYGPATH_W) '$(srcdir)/merger.c'; fi`
	$(am__mv) $(DEPDIR)/gomo-merger.Tpo $(DEPDIR)/gomo-merger.Po
#	source='merger.c' object='gomo-merger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-merger.obj `if test -f 'merger.c'; then $(CYGPATH_W) 'merger.c'; else $(CYGPATH_W) '$(srcdir)/merger.c'; fi`

gomo-ranksum_test.o: ranksum_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-ranksum_test.o -MD -MP -MF $(DEPDIR)/gomo-ranksum_test.Tpo -c -o gomo-ranksum_test.o `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c
	$(am__mv) $(DEPDIR)/gomo-ranksum_test.Tpo $(DEPDIR)/gomo-ranksum_test.Po
#	source='ranksum_test.c' object='gomo-ranksum_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-ranksum_test.o `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c

gomo-ranksum_test.obj: ranksum_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-ranksum_test.obj -MD -MP -MF $(DEPDIR)/gomo-ranksum_test.Tpo -c -o gomo-ranksum_test.obj `if test -f 'ranksum_test.c'; then $(CYGPATH_W) 'ranksum_test.c'; else $(CYGPATH_W) '$(srcdir)/ranksum_test.c'; fi`
	$(am__mv) $(DEPDIR)/gomo-ranksum_test.Tpo $(DEPDIR)/gomo-ranksum_test.Po
#	source='ranksum_test.c' object='gomo-ranksum_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-ranksum_test.obj `if test -f 'ranksum_test.c'; then $(CYGPATH_W) 'ranksum_test.c'; else $(CYGPATH_W) '$(srcdir)/ranksum_test.c'; fi`

gomo-read_csv.o: read_csv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-read_csv.o -MD -MP -MF $(DEPDIR)/gomo-read_csv.Tpo -c -o gomo-read_csv.o `test -f 'read_csv.c' || echo '$(srcdir)/'`read_csv.c
	$(am__mv) $(DEPDIR)/gomo-read_csv.Tpo $(DEPDIR)/gomo-read_csv.Po
#	source='read_csv.c' object='gomo-read_csv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-read_csv.o `test -f 'read_csv.c' || echo '$(srcdir)/'`read_csv.c

gomo-read_csv.obj: read_csv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -MT gomo-read_csv.obj -MD -MP -MF $(DEPDIR)/gomo-read_csv.Tpo -c -o gomo-read_csv.obj `if test -f 'read_csv.c'; then $(CYGPATH_W) 'read_csv.c'; else $(CYGPATH_W) '$(srcdir)/read_csv.c'; fi`
	$(am__mv) $(DEPDIR)/gomo-read_csv.Tpo $(DEPDIR)/gomo-read_csv.Po
#	source='read_csv.c' object='gomo-read_csv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_CFLAGS) $(CFLAGS) -c -o gomo-read_csv.obj `if test -f 'read_csv.c'; then $(CYGPATH_W) 'read_csv.c'; else $(CYGPATH_W) '$(srcdir)/read_csv.c'; fi`

gomo_highlight-gomo_highlight.o: gomo_highlight.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_highlight_CFLAGS) $(CFLAGS) -MT gomo_highlight-gomo_highlight.o -MD -MP -MF $(DEPDIR)/gomo_highlight-gomo_highlight.Tpo -c -o gomo_highlight-gomo_highlight.o `test -f 'gomo_highlight.c' || echo '$(srcdir)/'`gomo_highlight.c
	$(am__mv) $(DEPDIR)/gomo_highlight-gomo_highlight.Tpo $(DEPDIR)/gomo_highlight-gomo_highlight.Po
#	source='gomo_highlight.c' object='gomo_highlight-gomo_highlight.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_highlight_CFLAGS) $(CFLAGS) -c -o gomo_highlight-gomo_highlight.o `test -f 'gomo_highlight.c' || echo '$(srcdir)/'`gomo_highlight.c

gomo_highlight-gomo_highlight.obj: gomo_highlight.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_highlight_CFLAGS) $(CFLAGS) -MT gomo_highlight-gomo_highlight.obj -MD -MP -MF $(DEPDIR)/gomo_highlight-gomo_highlight.Tpo -c -o gomo_highlight-gomo_highlight.obj `if test -f 'gomo_highlight.c'; then $(CYGPATH_W) 'gomo_highlight.c'; else $(CYGPATH_W) '$(srcdir)/gomo_highlight.c'; fi`
	$(am__mv) $(DEPDIR)/gomo_highlight-gomo_highlight.Tpo $(DEPDIR)/gomo_highlight-gomo_highlight.Po
#	source='gomo_highlight.c' object='gomo_highlight-gomo_highlight.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gomo_highlight_CFLAGS) $(CFLAGS) -c -o gomo_highlight-gomo_highlight.obj `if test -f 'gomo_highlight.c'; then $(CYGPATH_W) 'gomo_highlight.c'; else $(CYGPATH_W) '$(srcdir)/gomo_highlight.c'; fi`

llr-llr.o: llr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -MT llr-llr.o -MD -MP -MF $(DEPDIR)/llr-llr.Tpo -c -o llr-llr.o `test -f 'llr.c' || echo '$(srcdir)/'`llr.c
	$(am__mv) $(DEPDIR)/llr-llr.Tpo $(DEPDIR)/llr-llr.Po
#	source='llr.c' object='llr-llr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -c -o llr-llr.o `test -f 'llr.c' || echo '$(srcdir)/'`llr.c

llr-llr.obj: llr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -MT llr-llr.obj -MD -MP -MF $(DEPDIR)/llr-llr.Tpo -c -o llr-llr.obj `if test -f 'llr.c'; then $(CYGPATH_W) 'llr.c'; else $(CYGPATH_W) '$(srcdir)/llr.c'; fi`
	$(am__mv) $(DEPDIR)/llr-llr.Tpo $(DEPDIR)/llr-llr.Po
#	source='llr.c' object='llr-llr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -c -o llr-llr.obj `if test -f 'llr.c'; then $(CYGPATH_W) 'llr.c'; else $(CYGPATH_W) '$(srcdir)/llr.c'; fi`

llr-logs.o: logs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -MT llr-logs.o -MD -MP -MF $(DEPDIR)/llr-logs.Tpo -c -o llr-logs.o `test -f 'logs.c' || echo '$(srcdir)/'`logs.c
	$(am__mv) $(DEPDIR)/llr-logs.Tpo $(DEPDIR)/llr-logs.Po
#	source='logs.c' object='llr-logs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -c -o llr-logs.o `test -f 'logs.c' || echo '$(srcdir)/'`logs.c

llr-logs.obj: logs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -MT llr-logs.obj -MD -MP -MF $(DEPDIR)/llr-logs.Tpo -c -o llr-logs.obj `if test -f 'logs.c'; then $(CYGPATH_W) 'logs.c'; else $(CYGPATH_W) '$(srcdir)/logs.c'; fi`
	$(am__mv) $(DEPDIR)/llr-logs.Tpo $(DEPDIR)/llr-logs.Po
#	source='logs.c' object='llr-logs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(llr_CFLAGS) $(CFLAGS) -c -o llr-logs.obj `if test -f 'logs.c'; then $(CYGPATH_W) 'logs.c'; else $(CYGPATH_W) '$(srcdir)/logs.c'; fi`

mast-diagram.o: diagram.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -MT mast-diagram.o -MD -MP -MF $(DEPDIR)/mast-diagram.Tpo -c -o mast-diagram.o `test -f 'diagram.c' || echo '$(srcdir)/'`diagram.c
	$(am__mv) $(DEPDIR)/mast-diagram.Tpo $(DEPDIR)/mast-diagram.Po
#	source='diagram.c' object='mast-diagram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -c -o mast-diagram.o `test -f 'diagram.c' || echo '$(srcdir)/'`diagram.c

mast-diagram.obj: diagram.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -MT mast-diagram.obj -MD -MP -MF $(DEPDIR)/mast-diagram.Tpo -c -o mast-diagram.obj `if test -f 'diagram.c'; then $(CYGPATH_W) 'diagram.c'; else $(CYGPATH_W) '$(srcdir)/diagram.c'; fi`
	$(am__mv) $(DEPDIR)/mast-diagram.Tpo $(DEPDIR)/mast-diagram.Po
#	source='diagram.c' object='mast-diagram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -c -o mast-diagram.obj `if test -f 'diagram.c'; then $(CYGPATH_W) 'diagram.c'; else $(CYGPATH_W) '$(srcdir)/diagram.c'; fi`

mast-mast.o: mast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -MT mast-mast.o -MD -MP -MF $(DEPDIR)/mast-mast.Tpo -c -o mast-mast.o `test -f 'mast.c' || echo '$(srcdir)/'`mast.c
	$(am__mv) $(DEPDIR)/mast-mast.Tpo $(DEPDIR)/mast-mast.Po
#	source='mast.c' object='mast-mast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -c -o mast-mast.o `test -f 'mast.c' || echo '$(srcdir)/'`mast.c

mast-mast.obj: mast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -MT mast-mast.obj -MD -MP -MF $(DEPDIR)/mast-mast.Tpo -c -o mast-mast.obj `if test -f 'mast.c'; then $(CYGPATH_W) 'mast.c'; else $(CYGPATH_W) '$(srcdir)/mast.c'; fi`
	$(am__mv) $(DEPDIR)/mast-mast.Tpo $(DEPDIR)/mast-mast.Po
#	source='mast.c' object='mast-mast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast_CFLAGS) $(CFLAGS) -c -o mast-mast.obj `if test -f 'mast.c'; then $(CYGPATH_W) 'mast.c'; else $(CYGPATH_W) '$(srcdir)/mast.c'; fi`

mast2txt-mast2txt.o: mast2txt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast2txt_CFLAGS) $(CFLAGS) -MT mast2txt-mast2txt.o -MD -MP -MF $(DEPDIR)/mast2txt-mast2txt.Tpo -c -o mast2txt-mast2txt.o `test -f 'mast2txt.c' || echo '$(srcdir)/'`mast2txt.c
	$(am__mv) $(DEPDIR)/mast2txt-mast2txt.Tpo $(DEPDIR)/mast2txt-mast2txt.Po
#	source='mast2txt.c' object='mast2txt-mast2txt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast2txt_CFLAGS) $(CFLAGS) -c -o mast2txt-mast2txt.o `test -f 'mast2txt.c' || echo '$(srcdir)/'`mast2txt.c

mast2txt-mast2txt.obj: mast2txt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast2txt_CFLAGS) $(CFLAGS) -MT mast2txt-mast2txt.obj -MD -MP -MF $(DEPDIR)/mast2txt-mast2txt.Tpo -c -o mast2txt-mast2txt.obj `if test -f 'mast2txt.c'; then $(CYGPATH_W) 'mast2txt.c'; else $(CYGPATH_W) '$(srcdir)/mast2txt.c'; fi`
	$(am__mv) $(DEPDIR)/mast2txt-mast2txt.Tpo $(DEPDIR)/mast2txt-mast2txt.Po
#	source='mast2txt.c' object='mast2txt-mast2txt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mast2txt_CFLAGS) $(CFLAGS) -c -o mast2txt-mast2txt.obj `if test -f 'mast2txt.c'; then $(CYGPATH_W) 'mast2txt.c'; else $(CYGPATH_W) '$(srcdir)/mast2txt.c'; fi`

mcast-mcast.o: mcast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mcast_CFLAGS) $(CFLAGS) -MT mcast-mcast.o -MD -MP -MF $(DEPDIR)/mcast-mcast.Tpo -c -o mcast-mcast.o `test -f 'mcast.c' || echo '$(srcdir)/'`mcast.c
	$(am__mv) $(DEPDIR)/mcast-mcast.Tpo $(DEPDIR)/mcast-mcast.Po
#	source='mcast.c' object='mcast-mcast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mcast_CFLAGS) $(CFLAGS) -c -o mcast-mcast.o `test -f 'mcast.c' || echo '$(srcdir)/'`mcast.c

mcast-mcast.obj: mcast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mcast_CFLAGS) $(CFLAGS) -MT mcast-mcast.obj -MD -MP -MF $(DEPDIR)/mcast-mcast.Tpo -c -o mcast-mcast.obj `if test -f 'mcast.c'; then $(CYGPATH_W) 'mcast.c'; else $(CYGPATH_W) '$(srcdir)/mcast.c'; fi`
	$(am__mv) $(DEPDIR)/mcast-mcast.Tpo $(DEPDIR)/mcast-mcast.Po
#	source='mcast.c' object='mcast-mcast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mcast_CFLAGS) $(CFLAGS) -c -o mcast-mcast.obj `if test -f 'mcast.c'; then $(CYGPATH_W) 'mcast.c'; else $(CYGPATH_W) '$(srcdir)/mcast.c'; fi`

meme_xml_html-meme-xml-html.o: meme-xml-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -MT meme_xml_html-meme-xml-html.o -MD -MP -MF $(DEPDIR)/meme_xml_html-meme-xml-html.Tpo -c -o meme_xml_html-meme-xml-html.o `test -f 'meme-xml-html.c' || echo '$(srcdir)/'`meme-xml-html.c
	$(am__mv) $(DEPDIR)/meme_xml_html-meme-xml-html.Tpo $(DEPDIR)/meme_xml_html-meme-xml-html.Po
#	source='meme-xml-html.c' object='meme_xml_html-meme-xml-html.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -c -o meme_xml_html-meme-xml-html.o `test -f 'meme-xml-html.c' || echo '$(srcdir)/'`meme-xml-html.c

meme_xml_html-meme-xml-html.obj: meme-xml-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -MT meme_xml_html-meme-xml-html.obj -MD -MP -MF $(DEPDIR)/meme_xml_html-meme-xml-html.Tpo -c -o meme_xml_html-meme-xml-html.obj `if test -f 'meme-xml-html.c'; then $(CYGPATH_W) 'meme-xml-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-xml-html.c'; fi`
	$(am__mv) $(DEPDIR)/meme_xml_html-meme-xml-html.Tpo $(DEPDIR)/meme_xml_html-meme-xml-html.Po
#	source='meme-xml-html.c' object='meme_xml_html-meme-xml-html.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -c -o meme_xml_html-meme-xml-html.obj `if test -f 'meme-xml-html.c'; then $(CYGPATH_W) 'meme-xml-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-xml-html.c'; fi`

meme_xml_html-meme-print-html.o: meme-print-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -MT meme_xml_html-meme-print-html.o -MD -MP -MF $(DEPDIR)/meme_xml_html-meme-print-html.Tpo -c -o meme_xml_html-meme-print-html.o `test -f 'meme-print-html.c' || echo '$(srcdir)/'`meme-print-html.c
	$(am__mv) $(DEPDIR)/meme_xml_html-meme-print-html.Tpo $(DEPDIR)/meme_xml_html-meme-print-html.Po
#	source='meme-print-html.c' object='meme_xml_html-meme-print-html.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -c -o meme_xml_html-meme-print-html.o `test -f 'meme-print-html.c' || echo '$(srcdir)/'`meme-print-html.c

meme_xml_html-meme-print-html.obj: meme-print-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -MT meme_xml_html-meme-print-html.obj -MD -MP -MF $(DEPDIR)/meme_xml_html-meme-print-html.Tpo -c -o meme_xml_html-meme-print-html.obj `if test -f 'meme-print-html.c'; then $(CYGPATH_W) 'meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-print-html.c'; fi`
	$(am__mv) $(DEPDIR)/meme_xml_html-meme-print-html.Tpo $(DEPDIR)/meme_xml_html-meme-print-html.Po
#	source='meme-print-html.c' object='meme_xml_html-meme-print-html.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_xml_html_CFLAGS) $(CFLAGS) -c -o meme_xml_html-meme-print-html.obj `if test -f 'meme-print-html.c'; then $(CYGPATH_W) 'meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-print-html.c'; fi`

meme_bin-banner.o: banner.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-banner.o -MD -MP -MF $(DEPDIR)/meme_bin-banner.Tpo -c -o meme_bin-banner.o `test -f 'banner.c' || echo '$(srcdir)/'`banner.c
	$(am__mv) $(DEPDIR)/meme_bin-banner.Tpo $(DEPDIR)/meme_bin-banner.Po
#	source='banner.c' object='meme_bin-banner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-banner.o `test -f 'banner.c' || echo '$(srcdir)/'`banner.c

meme_bin-banner.obj: banner.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-banner.obj -MD -MP -MF $(DEPDIR)/meme_bin-banner.Tpo -c -o meme_bin-banner.obj `if test -f 'banner.c'; then $(CYGPATH_W) 'banner.c'; else $(CYGPATH_W) '$(srcdir)/banner.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-banner.Tpo $(DEPDIR)/meme_bin-banner.Po
#	source='banner.c' object='meme_bin-banner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-banner.obj `if test -f 'banner.c'; then $(CYGPATH_W) 'banner.c'; else $(CYGPATH_W) '$(srcdir)/banner.c'; fi`

meme_bin-branching_search.o: branching_search.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-branching_search.o -MD -MP -MF $(DEPDIR)/meme_bin-branching_search.Tpo -c -o meme_bin-branching_search.o `test -f 'branching_search.c' || echo '$(srcdir)/'`branching_search.c
	$(am__mv) $(DEPDIR)/meme_bin-branching_search.Tpo $(DEPDIR)/meme_bin-branching_search.Po
#	source='branching_search.c' object='meme_bin-branching_search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-branching_search.o `test -f 'branching_search.c' || echo '$(srcdir)/'`branching_search.c

meme_bin-branching_search.obj: branching_search.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-branching_search.obj -MD -MP -MF $(DEPDIR)/meme_bin-branching_search.Tpo -c -o meme_bin-branching_search.obj `if test -f 'branching_search.c'; then $(CYGPATH_W) 'branching_search.c'; else $(CYGPATH_W) '$(srcdir)/branching_search.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-branching_search.Tpo $(DEPDIR)/meme_bin-branching_search.Po
#	source='branching_search.c' object='meme_bin-branching_search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-branching_search.obj `if test -f 'branching_search.c'; then $(CYGPATH_W) 'branching_search.c'; else $(CYGPATH_W) '$(srcdir)/branching_search.c'; fi`

meme_bin-calculate_p_y.o: calculate_p_y.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-calculate_p_y.o -MD -MP -MF $(DEPDIR)/meme_bin-calculate_p_y.Tpo -c -o meme_bin-calculate_p_y.o `test -f 'calculate_p_y.c' || echo '$(srcdir)/'`calculate_p_y.c
	$(am__mv) $(DEPDIR)/meme_bin-calculate_p_y.Tpo $(DEPDIR)/meme_bin-calculate_p_y.Po
#	source='calculate_p_y.c' object='meme_bin-calculate_p_y.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-calculate_p_y.o `test -f 'calculate_p_y.c' || echo '$(srcdir)/'`calculate_p_y.c

meme_bin-calculate_p_y.obj: calculate_p_y.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-calculate_p_y.obj -MD -MP -MF $(DEPDIR)/meme_bin-calculate_p_y.Tpo -c -o meme_bin-calculate_p_y.obj `if test -f 'calculate_p_y.c'; then $(CYGPATH_W) 'calculate_p_y.c'; else $(CYGPATH_W) '$(srcdir)/calculate_p_y.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-calculate_p_y.Tpo $(DEPDIR)/meme_bin-calculate_p_y.Po
#	source='calculate_p_y.c' object='meme_bin-calculate_p_y.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-calculate_p_y.obj `if test -f 'calculate_p_y.c'; then $(CYGPATH_W) 'calculate_p_y.c'; else $(CYGPATH_W) '$(srcdir)/calculate_p_y.c'; fi`

meme_bin-discretize.o: discretize.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-discretize.o -MD -MP -MF $(DEPDIR)/meme_bin-discretize.Tpo -c -o meme_bin-discretize.o `test -f 'discretize.c' || echo '$(srcdir)/'`discretize.c
	$(am__mv) $(DEPDIR)/meme_bin-discretize.Tpo $(DEPDIR)/meme_bin-discretize.Po
#	source='discretize.c' object='meme_bin-discretize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-discretize.o `test -f 'discretize.c' || echo '$(srcdir)/'`discretize.c

meme_bin-discretize.obj: discretize.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-discretize.obj -MD -MP -MF $(DEPDIR)/meme_bin-discretize.Tpo -c -o meme_bin-discretize.obj `if test -f 'discretize.c'; then $(CYGPATH_W) 'discretize.c'; else $(CYGPATH_W) '$(srcdir)/discretize.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-discretize.Tpo $(DEPDIR)/meme_bin-discretize.Po
#	source='discretize.c' object='meme_bin-discretize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-discretize.obj `if test -f 'discretize.c'; then $(CYGPATH_W) 'discretize.c'; else $(CYGPATH_W) '$(srcdir)/discretize.c'; fi`

meme_bin-display.o: display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-display.o -MD -MP -MF $(DEPDIR)/meme_bin-display.Tpo -c -o meme_bin-display.o `test -f 'display.c' || echo '$(srcdir)/'`display.c
	$(am__mv) $(DEPDIR)/meme_bin-display.Tpo $(DEPDIR)/meme_bin-display.Po
#	source='display.c' object='meme_bin-display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-display.o `test -f 'display.c' || echo '$(srcdir)/'`display.c

meme_bin-display.obj: display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-display.obj -MD -MP -MF $(DEPDIR)/meme_bin-display.Tpo -c -o meme_bin-display.obj `if test -f 'display.c'; then $(CYGPATH_W) 'display.c'; else $(CYGPATH_W) '$(srcdir)/display.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-display.Tpo $(DEPDIR)/meme_bin-display.Po
#	source='display.c' object='meme_bin-display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-display.obj `if test -f 'display.c'; then $(CYGPATH_W) 'display.c'; else $(CYGPATH_W) '$(srcdir)/display.c'; fi`

meme_bin-dpalign.o: dpalign.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-dpalign.o -MD -MP -MF $(DEPDIR)/meme_bin-dpalign.Tpo -c -o meme_bin-dpalign.o `test -f 'dpalign.c' || echo '$(srcdir)/'`dpalign.c
	$(am__mv) $(DEPDIR)/meme_bin-dpalign.Tpo $(DEPDIR)/meme_bin-dpalign.Po
#	source='dpalign.c' object='meme_bin-dpalign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-dpalign.o `test -f 'dpalign.c' || echo '$(srcdir)/'`dpalign.c

meme_bin-dpalign.obj: dpalign.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-dpalign.obj -MD -MP -MF $(DEPDIR)/meme_bin-dpalign.Tpo -c -o meme_bin-dpalign.obj `if test -f 'dpalign.c'; then $(CYGPATH_W) 'dpalign.c'; else $(CYGPATH_W) '$(srcdir)/dpalign.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-dpalign.Tpo $(DEPDIR)/meme_bin-dpalign.Po
#	source='dpalign.c' object='meme_bin-dpalign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-dpalign.obj `if test -f 'dpalign.c'; then $(CYGPATH_W) 'dpalign.c'; else $(CYGPATH_W) '$(srcdir)/dpalign.c'; fi`

meme_bin-em.o: em.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-em.o -MD -MP -MF $(DEPDIR)/meme_bin-em.Tpo -c -o meme_bin-em.o `test -f 'em.c' || echo '$(srcdir)/'`em.c
	$(am__mv) $(DEPDIR)/meme_bin-em.Tpo $(DEPDIR)/meme_bin-em.Po
#	source='em.c' object='meme_bin-em.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-em.o `test -f 'em.c' || echo '$(srcdir)/'`em.c

meme_bin-em.obj: em.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-em.obj -MD -MP -MF $(DEPDIR)/meme_bin-em.Tpo -c -o meme_bin-em.obj `if test -f 'em.c'; then $(CYGPATH_W) 'em.c'; else $(CYGPATH_W) '$(srcdir)/em.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-em.Tpo $(DEPDIR)/meme_bin-em.Po
#	source='em.c' object='meme_bin-em.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-em.obj `if test -f 'em.c'; then $(CYGPATH_W) 'em.c'; else $(CYGPATH_W) '$(srcdir)/em.c'; fi`

meme_bin-init.o: init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-init.o -MD -MP -MF $(DEPDIR)/meme_bin-init.Tpo -c -o meme_bin-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c
	$(am__mv) $(DEPDIR)/meme_bin-init.Tpo $(DEPDIR)/meme_bin-init.Po
#	source='init.c' object='meme_bin-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c

meme_bin-init.obj: init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-init.obj -MD -MP -MF $(DEPDIR)/meme_bin-init.Tpo -c -o meme_bin-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-init.Tpo $(DEPDIR)/meme_bin-init.Po
#	source='init.c' object='meme_bin-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`

meme_bin-justlike.o: justlike.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-justlike.o -MD -MP -MF $(DEPDIR)/meme_bin-justlike.Tpo -c -o meme_bin-justlike.o `test -f 'justlike.c' || echo '$(srcdir)/'`justlike.c
	$(am__mv) $(DEPDIR)/meme_bin-justlike.Tpo $(DEPDIR)/meme_bin-justlike.Po
#	source='justlike.c' object='meme_bin-justlike.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-justlike.o `test -f 'justlike.c' || echo '$(srcdir)/'`justlike.c

meme_bin-justlike.obj: justlike.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-justlike.obj -MD -MP -MF $(DEPDIR)/meme_bin-justlike.Tpo -c -o meme_bin-justlike.obj `if test -f 'justlike.c'; then $(CYGPATH_W) 'justlike.c'; else $(CYGPATH_W) '$(srcdir)/justlike.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-justlike.Tpo $(DEPDIR)/meme_bin-justlike.Po
#	source='justlike.c' object='meme_bin-justlike.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-justlike.obj `if test -f 'justlike.c'; then $(CYGPATH_W) 'justlike.c'; else $(CYGPATH_W) '$(srcdir)/justlike.c'; fi`

meme_bin-likelihood.o: likelihood.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-likelihood.o -MD -MP -MF $(DEPDIR)/meme_bin-likelihood.Tpo -c -o meme_bin-likelihood.o `test -f 'likelihood.c' || echo '$(srcdir)/'`likelihood.c
	$(am__mv) $(DEPDIR)/meme_bin-likelihood.Tpo $(DEPDIR)/meme_bin-likelihood.Po
#	source='likelihood.c' object='meme_bin-likelihood.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-likelihood.o `test -f 'likelihood.c' || echo '$(srcdir)/'`likelihood.c

meme_bin-likelihood.obj: likelihood.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-likelihood.obj -MD -MP -MF $(DEPDIR)/meme_bin-likelihood.Tpo -c -o meme_bin-likelihood.obj `if test -f 'likelihood.c'; then $(CYGPATH_W) 'likelihood.c'; else $(CYGPATH_W) '$(srcdir)/likelihood.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-likelihood.Tpo $(DEPDIR)/meme_bin-likelihood.Po
#	source='likelihood.c' object='meme_bin-likelihood.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-likelihood.obj `if test -f 'likelihood.c'; then $(CYGPATH_W) 'likelihood.c'; else $(CYGPATH_W) '$(srcdir)/likelihood.c'; fi`

meme_bin-llr.o: llr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-llr.o -MD -MP -MF $(DEPDIR)/meme_bin-llr.Tpo -c -o meme_bin-llr.o `test -f 'llr.c' || echo '$(srcdir)/'`llr.c
	$(am__mv) $(DEPDIR)/meme_bin-llr.Tpo $(DEPDIR)/meme_bin-llr.Po
#	source='llr.c' object='meme_bin-llr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-llr.o `test -f 'llr.c' || echo '$(srcdir)/'`llr.c

meme_bin-llr.obj: llr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-llr.obj -MD -MP -MF $(DEPDIR)/meme_bin-llr.Tpo -c -o meme_bin-llr.obj `if test -f 'llr.c'; then $(CYGPATH_W) 'llr.c'; else $(CYGPATH_W) '$(srcdir)/llr.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-llr.Tpo $(DEPDIR)/meme_bin-llr.Po
#	source='llr.c' object='meme_bin-llr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-llr.obj `if test -f 'llr.c'; then $(CYGPATH_W) 'llr.c'; else $(CYGPATH_W) '$(srcdir)/llr.c'; fi`

meme_bin-logs.o: logs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-logs.o -MD -MP -MF $(DEPDIR)/meme_bin-logs.Tpo -c -o meme_bin-logs.o `test -f 'logs.c' || echo '$(srcdir)/'`logs.c
	$(am__mv) $(DEPDIR)/meme_bin-logs.Tpo $(DEPDIR)/meme_bin-logs.Po
#	source='logs.c' object='meme_bin-logs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-logs.o `test -f 'logs.c' || echo '$(srcdir)/'`logs.c

meme_bin-logs.obj: logs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-logs.obj -MD -MP -MF $(DEPDIR)/meme_bin-logs.Tpo -c -o meme_bin-logs.obj `if test -f 'logs.c'; then $(CYGPATH_W) 'logs.c'; else $(CYGPATH_W) '$(srcdir)/logs.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-logs.Tpo $(DEPDIR)/meme_bin-logs.Po
#	source='logs.c' object='meme_bin-logs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-logs.obj `if test -f 'logs.c'; then $(CYGPATH_W) 'logs.c'; else $(CYGPATH_W) '$(srcdir)/logs.c'; fi`

meme_bin-meme.o: meme.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme.o -MD -MP -MF $(DEPDIR)/meme_bin-meme.Tpo -c -o meme_bin-meme.o `test -f 'meme.c' || echo '$(srcdir)/'`meme.c
	$(am__mv) $(DEPDIR)/meme_bin-meme.Tpo $(DEPDIR)/meme_bin-meme.Po
#	source='meme.c' object='meme_bin-meme.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme.o `test -f 'meme.c' || echo '$(srcdir)/'`meme.c

meme_bin-meme.obj: meme.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme.obj -MD -MP -MF $(DEPDIR)/meme_bin-meme.Tpo -c -o meme_bin-meme.obj `if test -f 'meme.c'; then $(CYGPATH_W) 'meme.c'; else $(CYGPATH_W) '$(srcdir)/meme.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-meme.Tpo $(DEPDIR)/meme_bin-meme.Po
#	source='meme.c' object='meme_bin-meme.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme.obj `if test -f 'meme.c'; then $(CYGPATH_W) 'meme.c'; else $(CYGPATH_W) '$(srcdir)/meme.c'; fi`

meme_bin-meme-print-html.o: meme-print-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme-print-html.o -MD -MP -MF $(DEPDIR)/meme_bin-meme-print-html.Tpo -c -o meme_bin-meme-print-html.o `test -f 'meme-print-html.c' || echo '$(srcdir)/'`meme-print-html.c
	$(am__mv) $(DEPDIR)/meme_bin-meme-print-html.Tpo $(DEPDIR)/meme_bin-meme-print-html.Po
#	source='meme-print-html.c' object='meme_bin-meme-print-html.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme-print-html.o `test -f 'meme-print-html.c' || echo '$(srcdir)/'`meme-print-html.c

meme_bin-meme-print-html.obj: meme-print-html.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme-print-html.obj -MD -MP -MF $(DEPDIR)/meme_bin-meme-print-html.Tpo -c -o meme_bin-meme-print-html.obj `if test -f 'meme-print-html.c'; then $(CYGPATH_W) 'meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-print-html.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-meme-print-html.Tpo $(DEPDIR)/meme_bin-meme-print-html.Po
#	source='meme-print-html.c' object='meme_bin-meme-print-html.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme-print-html.obj `if test -f 'meme-print-html.c'; then $(CYGPATH_W) 'meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/meme-print-html.c'; fi`

meme_bin-meme_util.o: meme_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme_util.o -MD -MP -MF $(DEPDIR)/meme_bin-meme_util.Tpo -c -o meme_bin-meme_util.o `test -f 'meme_util.c' || echo '$(srcdir)/'`meme_util.c
	$(am__mv) $(DEPDIR)/meme_bin-meme_util.Tpo $(DEPDIR)/meme_bin-meme_util.Po
#	source='meme_util.c' object='meme_bin-meme_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme_util.o `test -f 'meme_util.c' || echo '$(srcdir)/'`meme_util.c

meme_bin-meme_util.obj: meme_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-meme_util.obj -MD -MP -MF $(DEPDIR)/meme_bin-meme_util.Tpo -c -o meme_bin-meme_util.obj `if test -f 'meme_util.c'; then $(CYGPATH_W) 'meme_util.c'; else $(CYGPATH_W) '$(srcdir)/meme_util.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-meme_util.Tpo $(DEPDIR)/meme_bin-meme_util.Po
#	source='meme_util.c' object='meme_bin-meme_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-meme_util.obj `if test -f 'meme_util.c'; then $(CYGPATH_W) 'meme_util.c'; else $(CYGPATH_W) '$(srcdir)/meme_util.c'; fi`

meme_bin-message.o: message.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-message.o -MD -MP -MF $(DEPDIR)/meme_bin-message.Tpo -c -o meme_bin-message.o `test -f 'message.c' || echo '$(srcdir)/'`message.c
	$(am__mv) $(DEPDIR)/meme_bin-message.Tpo $(DEPDIR)/meme_bin-message.Po
#	source='message.c' object='meme_bin-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-message.o `test -f 'message.c' || echo '$(srcdir)/'`message.c

meme_bin-message.obj: message.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-message.obj -MD -MP -MF $(DEPDIR)/meme_bin-message.Tpo -c -o meme_bin-message.obj `if test -f 'message.c'; then $(CYGPATH_W) 'message.c'; else $(CYGPATH_W) '$(srcdir)/message.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-message.Tpo $(DEPDIR)/meme_bin-message.Po
#	source='message.c' object='meme_bin-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-message.obj `if test -f 'message.c'; then $(CYGPATH_W) 'message.c'; else $(CYGPATH_W) '$(srcdir)/message.c'; fi`

meme_bin-mp.o: mp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-mp.o -MD -MP -MF $(DEPDIR)/meme_bin-mp.Tpo -c -o meme_bin-mp.o `test -f 'mp.c' || echo '$(srcdir)/'`mp.c
	$(am__mv) $(DEPDIR)/meme_bin-mp.Tpo $(DEPDIR)/meme_bin-mp.Po
#	source='mp.c' object='meme_bin-mp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-mp.o `test -f 'mp.c' || echo '$(srcdir)/'`mp.c

meme_bin-mp.obj: mp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-mp.obj -MD -MP -MF $(DEPDIR)/meme_bin-mp.Tpo -c -o meme_bin-mp.obj `if test -f 'mp.c'; then $(CYGPATH_W) 'mp.c'; else $(CYGPATH_W) '$(srcdir)/mp.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-mp.Tpo $(DEPDIR)/meme_bin-mp.Po
#	source='mp.c' object='meme_bin-mp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-mp.obj `if test -f 'mp.c'; then $(CYGPATH_W) 'mp.c'; else $(CYGPATH_W) '$(srcdir)/mp.c'; fi`

meme_bin-oops.o: oops.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-oops.o -MD -MP -MF $(DEPDIR)/meme_bin-oops.Tpo -c -o meme_bin-oops.o `test -f 'oops.c' || echo '$(srcdir)/'`oops.c
	$(am__mv) $(DEPDIR)/meme_bin-oops.Tpo $(DEPDIR)/meme_bin-oops.Po
#	source='oops.c' object='meme_bin-oops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-oops.o `test -f 'oops.c' || echo '$(srcdir)/'`oops.c

meme_bin-oops.obj: oops.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-oops.obj -MD -MP -MF $(DEPDIR)/meme_bin-oops.Tpo -c -o meme_bin-oops.obj `if test -f 'oops.c'; then $(CYGPATH_W) 'oops.c'; else $(CYGPATH_W) '$(srcdir)/oops.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-oops.Tpo $(DEPDIR)/meme_bin-oops.Po
#	source='oops.c' object='meme_bin-oops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-oops.obj `if test -f 'oops.c'; then $(CYGPATH_W) 'oops.c'; else $(CYGPATH_W) '$(srcdir)/oops.c'; fi`

meme_bin-partition.o: partition.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-partition.o -MD -MP -MF $(DEPDIR)/meme_bin-partition.Tpo -c -o meme_bin-partition.o `test -f 'partition.c' || echo '$(srcdir)/'`partition.c
	$(am__mv) $(DEPDIR)/meme_bin-partition.Tpo $(DEPDIR)/meme_bin-partition.Po
#	source='partition.c' object='meme_bin-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-partition.o `test -f 'partition.c' || echo '$(srcdir)/'`partition.c

meme_bin-partition.obj: partition.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-partition.obj -MD -MP -MF $(DEPDIR)/meme_bin-partition.Tpo -c -o meme_bin-partition.obj `if test -f 'partition.c'; then $(CYGPATH_W) 'partition.c'; else $(CYGPATH_W) '$(srcdir)/partition.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-partition.Tpo $(DEPDIR)/meme_bin-partition.Po
#	source='partition.c' object='meme_bin-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-partition.obj `if test -f 'partition.c'; then $(CYGPATH_W) 'partition.c'; else $(CYGPATH_W) '$(srcdir)/partition.c'; fi`

meme_bin-prior.o: prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-prior.o -MD -MP -MF $(DEPDIR)/meme_bin-prior.Tpo -c -o meme_bin-prior.o `test -f 'prior.c' || echo '$(srcdir)/'`prior.c
	$(am__mv) $(DEPDIR)/meme_bin-prior.Tpo $(DEPDIR)/meme_bin-prior.Po
#	source='prior.c' object='meme_bin-prior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-prior.o `test -f 'prior.c' || echo '$(srcdir)/'`prior.c

meme_bin-prior.obj: prior.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-prior.obj -MD -MP -MF $(DEPDIR)/meme_bin-prior.Tpo -c -o meme_bin-prior.obj `if test -f 'prior.c'; then $(CYGPATH_W) 'prior.c'; else $(CYGPATH_W) '$(srcdir)/prior.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-prior.Tpo $(DEPDIR)/meme_bin-prior.Po
#	source='prior.c' object='meme_bin-prior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-prior.obj `if test -f 'prior.c'; then $(CYGPATH_W) 'prior.c'; else $(CYGPATH_W) '$(srcdir)/prior.c'; fi`

meme_bin-psp.o: psp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-psp.o -MD -MP -MF $(DEPDIR)/meme_bin-psp.Tpo -c -o meme_bin-psp.o `test -f 'psp.c' || echo '$(srcdir)/'`psp.c
	$(am__mv) $(DEPDIR)/meme_bin-psp.Tpo $(DEPDIR)/meme_bin-psp.Po
#	source='psp.c' object='meme_bin-psp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-psp.o `test -f 'psp.c' || echo '$(srcdir)/'`psp.c

meme_bin-psp.obj: psp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-psp.obj -MD -MP -MF $(DEPDIR)/meme_bin-psp.Tpo -c -o meme_bin-psp.obj `if test -f 'psp.c'; then $(CYGPATH_W) 'psp.c'; else $(CYGPATH_W) '$(srcdir)/psp.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-psp.Tpo $(DEPDIR)/meme_bin-psp.Po
#	source='psp.c' object='meme_bin-psp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-psp.obj `if test -f 'psp.c'; then $(CYGPATH_W) 'psp.c'; else $(CYGPATH_W) '$(srcdir)/psp.c'; fi`

meme_bin-read_seq_file.o: read_seq_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-read_seq_file.o -MD -MP -MF $(DEPDIR)/meme_bin-read_seq_file.Tpo -c -o meme_bin-read_seq_file.o `test -f 'read_seq_file.c' || echo '$(srcdir)/'`read_seq_file.c
	$(am__mv) $(DEPDIR)/meme_bin-read_seq_file.Tpo $(DEPDIR)/meme_bin-read_seq_file.Po
#	source='read_seq_file.c' object='meme_bin-read_seq_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-read_seq_file.o `test -f 'read_seq_file.c' || echo '$(srcdir)/'`read_seq_file.c

meme_bin-read_seq_file.obj: read_seq_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-read_seq_file.obj -MD -MP -MF $(DEPDIR)/meme_bin-read_seq_file.Tpo -c -o meme_bin-read_seq_file.obj `if test -f 'read_seq_file.c'; then $(CYGPATH_W) 'read_seq_file.c'; else $(CYGPATH_W) '$(srcdir)/read_seq_file.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-read_seq_file.Tpo $(DEPDIR)/meme_bin-read_seq_file.Po
#	source='read_seq_file.c' object='meme_bin-read_seq_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-read_seq_file.obj `if test -f 'read_seq_file.c'; then $(CYGPATH_W) 'read_seq_file.c'; else $(CYGPATH_W) '$(srcdir)/read_seq_file.c'; fi`

meme_bin-seed.o: seed.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seed.o -MD -MP -MF $(DEPDIR)/meme_bin-seed.Tpo -c -o meme_bin-seed.o `test -f 'seed.c' || echo '$(srcdir)/'`seed.c
	$(am__mv) $(DEPDIR)/meme_bin-seed.Tpo $(DEPDIR)/meme_bin-seed.Po
#	source='seed.c' object='meme_bin-seed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seed.o `test -f 'seed.c' || echo '$(srcdir)/'`seed.c

meme_bin-seed.obj: seed.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seed.obj -MD -MP -MF $(DEPDIR)/meme_bin-seed.Tpo -c -o meme_bin-seed.obj `if test -f 'seed.c'; then $(CYGPATH_W) 'seed.c'; else $(CYGPATH_W) '$(srcdir)/seed.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-seed.Tpo $(DEPDIR)/meme_bin-seed.Po
#	source='seed.c' object='meme_bin-seed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seed.obj `if test -f 'seed.c'; then $(CYGPATH_W) 'seed.c'; else $(CYGPATH_W) '$(srcdir)/seed.c'; fi`

meme_bin-seed_diffs.o: seed_diffs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seed_diffs.o -MD -MP -MF $(DEPDIR)/meme_bin-seed_diffs.Tpo -c -o meme_bin-seed_diffs.o `test -f 'seed_diffs.c' || echo '$(srcdir)/'`seed_diffs.c
	$(am__mv) $(DEPDIR)/meme_bin-seed_diffs.Tpo $(DEPDIR)/meme_bin-seed_diffs.Po
#	source='seed_diffs.c' object='meme_bin-seed_diffs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seed_diffs.o `test -f 'seed_diffs.c' || echo '$(srcdir)/'`seed_diffs.c

meme_bin-seed_diffs.obj: seed_diffs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seed_diffs.obj -MD -MP -MF $(DEPDIR)/meme_bin-seed_diffs.Tpo -c -o meme_bin-seed_diffs.obj `if test -f 'seed_diffs.c'; then $(CYGPATH_W) 'seed_diffs.c'; else $(CYGPATH_W) '$(srcdir)/seed_diffs.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-seed_diffs.Tpo $(DEPDIR)/meme_bin-seed_diffs.Po
#	source='seed_diffs.c' object='meme_bin-seed_diffs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seed_diffs.obj `if test -f 'seed_diffs.c'; then $(CYGPATH_W) 'seed_diffs.c'; else $(CYGPATH_W) '$(srcdir)/seed_diffs.c'; fi`

meme_bin-seq2theta.o: seq2theta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seq2theta.o -MD -MP -MF $(DEPDIR)/meme_bin-seq2theta.Tpo -c -o meme_bin-seq2theta.o `test -f 'seq2theta.c' || echo '$(srcdir)/'`seq2theta.c
	$(am__mv) $(DEPDIR)/meme_bin-seq2theta.Tpo $(DEPDIR)/meme_bin-seq2theta.Po
#	source='seq2theta.c' object='meme_bin-seq2theta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seq2theta.o `test -f 'seq2theta.c' || echo '$(srcdir)/'`seq2theta.c

meme_bin-seq2theta.obj: seq2theta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-seq2theta.obj -MD -MP -MF $(DEPDIR)/meme_bin-seq2theta.Tpo -c -o meme_bin-seq2theta.obj `if test -f 'seq2theta.c'; then $(CYGPATH_W) 'seq2theta.c'; else $(CYGPATH_W) '$(srcdir)/seq2theta.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-seq2theta.Tpo $(DEPDIR)/meme_bin-seq2theta.Po
#	source='seq2theta.c' object='meme_bin-seq2theta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-seq2theta.obj `if test -f 'seq2theta.c'; then $(CYGPATH_W) 'seq2theta.c'; else $(CYGPATH_W) '$(srcdir)/seq2theta.c'; fi`

meme_bin-sp_matrix.o: sp_matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-sp_matrix.o -MD -MP -MF $(DEPDIR)/meme_bin-sp_matrix.Tpo -c -o meme_bin-sp_matrix.o `test -f 'sp_matrix.c' || echo '$(srcdir)/'`sp_matrix.c
	$(am__mv) $(DEPDIR)/meme_bin-sp_matrix.Tpo $(DEPDIR)/meme_bin-sp_matrix.Po
#	source='sp_matrix.c' object='meme_bin-sp_matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-sp_matrix.o `test -f 'sp_matrix.c' || echo '$(srcdir)/'`sp_matrix.c

meme_bin-sp_matrix.obj: sp_matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-sp_matrix.obj -MD -MP -MF $(DEPDIR)/meme_bin-sp_matrix.Tpo -c -o meme_bin-sp_matrix.obj `if test -f 'sp_matrix.c'; then $(CYGPATH_W) 'sp_matrix.c'; else $(CYGPATH_W) '$(srcdir)/sp_matrix.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-sp_matrix.Tpo $(DEPDIR)/meme_bin-sp_matrix.Po
#	source='sp_matrix.c' object='meme_bin-sp_matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-sp_matrix.obj `if test -f 'sp_matrix.c'; then $(CYGPATH_W) 'sp_matrix.c'; else $(CYGPATH_W) '$(srcdir)/sp_matrix.c'; fi`

meme_bin-starts.o: starts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-starts.o -MD -MP -MF $(DEPDIR)/meme_bin-starts.Tpo -c -o meme_bin-starts.o `test -f 'starts.c' || echo '$(srcdir)/'`starts.c
	$(am__mv) $(DEPDIR)/meme_bin-starts.Tpo $(DEPDIR)/meme_bin-starts.Po
#	source='starts.c' object='meme_bin-starts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-starts.o `test -f 'starts.c' || echo '$(srcdir)/'`starts.c

meme_bin-starts.obj: starts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-starts.obj -MD -MP -MF $(DEPDIR)/meme_bin-starts.Tpo -c -o meme_bin-starts.obj `if test -f 'starts.c'; then $(CYGPATH_W) 'starts.c'; else $(CYGPATH_W) '$(srcdir)/starts.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-starts.Tpo $(DEPDIR)/meme_bin-starts.Po
#	source='starts.c' object='meme_bin-starts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-starts.obj `if test -f 'starts.c'; then $(CYGPATH_W) 'starts.c'; else $(CYGPATH_W) '$(srcdir)/starts.c'; fi`

meme_bin-subseq7.o: subseq7.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-subseq7.o -MD -MP -MF $(DEPDIR)/meme_bin-subseq7.Tpo -c -o meme_bin-subseq7.o `test -f 'subseq7.c' || echo '$(srcdir)/'`subseq7.c
	$(am__mv) $(DEPDIR)/meme_bin-subseq7.Tpo $(DEPDIR)/meme_bin-subseq7.Po
#	source='subseq7.c' object='meme_bin-subseq7.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-subseq7.o `test -f 'subseq7.c' || echo '$(srcdir)/'`subseq7.c

meme_bin-subseq7.obj: subseq7.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-subseq7.obj -MD -MP -MF $(DEPDIR)/meme_bin-subseq7.Tpo -c -o meme_bin-subseq7.obj `if test -f 'subseq7.c'; then $(CYGPATH_W) 'subseq7.c'; else $(CYGPATH_W) '$(srcdir)/subseq7.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-subseq7.Tpo $(DEPDIR)/meme_bin-subseq7.Po
#	source='subseq7.c' object='meme_bin-subseq7.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-subseq7.obj `if test -f 'subseq7.c'; then $(CYGPATH_W) 'subseq7.c'; else $(CYGPATH_W) '$(srcdir)/subseq7.c'; fi`

meme_bin-tcm.o: tcm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-tcm.o -MD -MP -MF $(DEPDIR)/meme_bin-tcm.Tpo -c -o meme_bin-tcm.o `test -f 'tcm.c' || echo '$(srcdir)/'`tcm.c
	$(am__mv) $(DEPDIR)/meme_bin-tcm.Tpo $(DEPDIR)/meme_bin-tcm.Po
#	source='tcm.c' object='meme_bin-tcm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-tcm.o `test -f 'tcm.c' || echo '$(srcdir)/'`tcm.c

meme_bin-tcm.obj: tcm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-tcm.obj -MD -MP -MF $(DEPDIR)/meme_bin-tcm.Tpo -c -o meme_bin-tcm.obj `if test -f 'tcm.c'; then $(CYGPATH_W) 'tcm.c'; else $(CYGPATH_W) '$(srcdir)/tcm.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-tcm.Tpo $(DEPDIR)/meme_bin-tcm.Po
#	source='tcm.c' object='meme_bin-tcm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-tcm.obj `if test -f 'tcm.c'; then $(CYGPATH_W) 'tcm.c'; else $(CYGPATH_W) '$(srcdir)/tcm.c'; fi`

meme_bin-verbosity.o: verbosity.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-verbosity.o -MD -MP -MF $(DEPDIR)/meme_bin-verbosity.Tpo -c -o meme_bin-verbosity.o `test -f 'verbosity.c' || echo '$(srcdir)/'`verbosity.c
	$(am__mv) $(DEPDIR)/meme_bin-verbosity.Tpo $(DEPDIR)/meme_bin-verbosity.Po
#	source='verbosity.c' object='meme_bin-verbosity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-verbosity.o `test -f 'verbosity.c' || echo '$(srcdir)/'`verbosity.c

meme_bin-verbosity.obj: verbosity.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -MT meme_bin-verbosity.obj -MD -MP -MF $(DEPDIR)/meme_bin-verbosity.Tpo -c -o meme_bin-verbosity.obj `if test -f 'verbosity.c'; then $(CYGPATH_W) 'verbosity.c'; else $(CYGPATH_W) '$(srcdir)/verbosity.c'; fi`
	$(am__mv) $(DEPDIR)/meme_bin-verbosity.Tpo $(DEPDIR)/meme_bin-verbosity.Po
#	source='verbosity.c' object='meme_bin-verbosity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_bin_CFLAGS) $(CFLAGS) -c -o meme_bin-verbosity.obj `if test -f 'verbosity.c'; then $(CYGPATH_W) 'verbosity.c'; else $(CYGPATH_W) '$(srcdir)/verbosity.c'; fi`

meme2images-meme2images.o: meme2images.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme2images_CFLAGS) $(CFLAGS) -MT meme2images-meme2images.o -MD -MP -MF $(DEPDIR)/meme2images-meme2images.Tpo -c -o meme2images-meme2images.o `test -f 'meme2images.c' || echo '$(srcdir)/'`meme2images.c
	$(am__mv) $(DEPDIR)/meme2images-meme2images.Tpo $(DEPDIR)/meme2images-meme2images.Po
#	source='meme2images.c' object='meme2images-meme2images.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme2images_CFLAGS) $(CFLAGS) -c -o meme2images-meme2images.o `test -f 'meme2images.c' || echo '$(srcdir)/'`meme2images.c

meme2images-meme2images.obj: meme2images.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme2images_CFLAGS) $(CFLAGS) -MT meme2images-meme2images.obj -MD -MP -MF $(DEPDIR)/meme2images-meme2images.Tpo -c -o meme2images-meme2images.obj `if test -f 'meme2images.c'; then $(CYGPATH_W) 'meme2images.c'; else $(CYGPATH_W) '$(srcdir)/meme2images.c'; fi`
	$(am__mv) $(DEPDIR)/meme2images-meme2images.Tpo $(DEPDIR)/meme2images-meme2images.Po
#	source='meme2images.c' object='meme2images-meme2images.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme2images_CFLAGS) $(CFLAGS) -c -o meme2images-meme2images.obj `if test -f 'meme2images.c'; then $(CYGPATH_W) 'meme2images.c'; else $(CYGPATH_W) '$(srcdir)/meme2images.c'; fi`

mhmm-mhmm.o: mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_CFLAGS) $(CFLAGS) -MT mhmm-mhmm.o -MD -MP -MF $(DEPDIR)/mhmm-mhmm.Tpo -c -o mhmm-mhmm.o `test -f 'mhmm.c' || echo '$(srcdir)/'`mhmm.c
	$(am__mv) $(DEPDIR)/mhmm-mhmm.Tpo $(DEPDIR)/mhmm-mhmm.Po
#	source='mhmm.c' object='mhmm-mhmm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_CFLAGS) $(CFLAGS) -c -o mhmm-mhmm.o `test -f 'mhmm.c' || echo '$(srcdir)/'`mhmm.c

mhmm-mhmm.obj: mhmm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_CFLAGS) $(CFLAGS) -MT mhmm-mhmm.obj -MD -MP -MF $(DEPDIR)/mhmm-mhmm.Tpo -c -o mhmm-mhmm.obj `if test -f 'mhmm.c'; then $(CYGPATH_W) 'mhmm.c'; else $(CYGPATH_W) '$(srcdir)/mhmm.c'; fi`
	$(am__mv) $(DEPDIR)/mhmm-mhmm.Tpo $(DEPDIR)/mhmm-mhmm.Po
#	source='mhmm.c' object='mhmm-mhmm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_CFLAGS) $(CFLAGS) -c -o mhmm-mhmm.obj `if test -f 'mhmm.c'; then $(CYGPATH_W) 'mhmm.c'; else $(CYGPATH_W) '$(srcdir)/mhmm.c'; fi`

mhmm_io-mhmm-io.o: mhmm-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_io_CFLAGS) $(CFLAGS) -MT mhmm_io-mhmm-io.o -MD -MP -MF $(DEPDIR)/mhmm_io-mhmm-io.Tpo -c -o mhmm_io-mhmm-io.o `test -f 'mhmm-io.c' || echo '$(srcdir)/'`mhmm-io.c
	$(am__mv) $(DEPDIR)/mhmm_io-mhmm-io.Tpo $(DEPDIR)/mhmm_io-mhmm-io.Po
#	source='mhmm-io.c' object='mhmm_io-mhmm-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_io_CFLAGS) $(CFLAGS) -c -o mhmm_io-mhmm-io.o `test -f 'mhmm-io.c' || echo '$(srcdir)/'`mhmm-io.c

mhmm_io-mhmm-io.obj: mhmm-io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_io_CFLAGS) $(CFLAGS) -MT mhmm_io-mhmm-io.obj -MD -MP -MF $(DEPDIR)/mhmm_io-mhmm-io.Tpo -c -o mhmm_io-mhmm-io.obj `if test -f 'mhmm-io.c'; then $(CYGPATH_W) 'mhmm-io.c'; else $(CYGPATH_W) '$(srcdir)/mhmm-io.c'; fi`
	$(am__mv) $(DEPDIR)/mhmm_io-mhmm-io.Tpo $(DEPDIR)/mhmm_io-mhmm-io.Po
#	source='mhmm-io.c' object='mhmm_io-mhmm-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmm_io_CFLAGS) $(CFLAGS) -c -o mhmm_io-mhmm-io.obj `if test -f 'mhmm-io.c'; then $(CYGPATH_W) 'mhmm-io.c'; else $(CYGPATH_W) '$(srcdir)/mhmm-io.c'; fi`

mhmme-mhmme.o: mhmme.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmme_CFLAGS) $(CFLAGS) -MT mhmme-mhmme.o -MD -MP -MF $(DEPDIR)/mhmme-mhmme.Tpo -c -o mhmme-mhmme.o `test -f 'mhmme.c' || echo '$(srcdir)/'`mhmme.c
	$(am__mv) $(DEPDIR)/mhmme-mhmme.Tpo $(DEPDIR)/mhmme-mhmme.Po
#	source='mhmme.c' object='mhmme-mhmme.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmme_CFLAGS) $(CFLAGS) -c -o mhmme-mhmme.o `test -f 'mhmme.c' || echo '$(srcdir)/'`mhmme.c

mhmme-mhmme.obj: mhmme.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmme_CFLAGS) $(CFLAGS) -MT mhmme-mhmme.obj -MD -MP -MF $(DEPDIR)/mhmme-mhmme.Tpo -c -o mhmme-mhmme.obj `if test -f 'mhmme.c'; then $(CYGPATH_W) 'mhmme.c'; else $(CYGPATH_W) '$(srcdir)/mhmme.c'; fi`
	$(am__mv) $(DEPDIR)/mhmme-mhmme.Tpo $(DEPDIR)/mhmme-mhmme.Po
#	source='mhmme.c' object='mhmme-mhmme.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmme_CFLAGS) $(CFLAGS) -c -o mhmme-mhmme.obj `if test -f 'mhmme.c'; then $(CYGPATH_W) 'mhmme.c'; else $(CYGPATH_W) '$(srcdir)/mhmme.c'; fi`

mhmms-mhmms.o: mhmms.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmms_CFLAGS) $(CFLAGS) -MT mhmms-mhmms.o -MD -MP -MF $(DEPDIR)/mhmms-mhmms.Tpo -c -o mhmms-mhmms.o `test -f 'mhmms.c' || echo '$(srcdir)/'`mhmms.c
	$(am__mv) $(DEPDIR)/mhmms-mhmms.Tpo $(DEPDIR)/mhmms-mhmms.Po
#	source='mhmms.c' object='mhmms-mhmms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmms_CFLAGS) $(CFLAGS) -c -o mhmms-mhmms.o `test -f 'mhmms.c' || echo '$(srcdir)/'`mhmms.c

mhmms-mhmms.obj: mhmms.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmms_CFLAGS) $(CFLAGS) -MT mhmms-mhmms.obj -MD -MP -MF $(DEPDIR)/mhmms-mhmms.Tpo -c -o mhmms-mhmms.obj `if test -f 'mhmms.c'; then $(CYGPATH_W) 'mhmms.c'; else $(CYGPATH_W) '$(srcdir)/mhmms.c'; fi`
	$(am__mv) $(DEPDIR)/mhmms-mhmms.Tpo $(DEPDIR)/mhmms-mhmms.Po
#	source='mhmms.c' object='mhmms-mhmms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmms_CFLAGS) $(CFLAGS) -c -o mhmms-mhmms.obj `if test -f 'mhmms.c'; then $(CYGPATH_W) 'mhmms.c'; else $(CYGPATH_W) '$(srcdir)/mhmms.c'; fi`

mhmmscan-mhmmscan.o: mhmmscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmmscan_CFLAGS) $(CFLAGS) -MT mhmmscan-mhmmscan.o -MD -MP -MF $(DEPDIR)/mhmmscan-mhmmscan.Tpo -c -o mhmmscan-mhmmscan.o `test -f 'mhmmscan.c' || echo '$(srcdir)/'`mhmmscan.c
	$(am__mv) $(DEPDIR)/mhmmscan-mhmmscan.Tpo $(DEPDIR)/mhmmscan-mhmmscan.Po
#	source='mhmmscan.c' object='mhmmscan-mhmmscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmmscan_CFLAGS) $(CFLAGS) -c -o mhmmscan-mhmmscan.o `test -f 'mhmmscan.c' || echo '$(srcdir)/'`mhmmscan.c

mhmmscan-mhmmscan.obj: mhmmscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmmscan_CFLAGS) $(CFLAGS) -MT mhmmscan-mhmmscan.obj -MD -MP -MF $(DEPDIR)/mhmmscan-mhmmscan.Tpo -c -o mhmmscan-mhmmscan.obj `if test -f 'mhmmscan.c'; then $(CYGPATH_W) 'mhmmscan.c'; else $(CYGPATH_W) '$(srcdir)/mhmmscan.c'; fi`
	$(am__mv) $(DEPDIR)/mhmmscan-mhmmscan.Tpo $(DEPDIR)/mhmmscan-mhmmscan.Po
#	source='mhmmscan.c' object='mhmmscan-mhmmscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mhmmscan_CFLAGS) $(CFLAGS) -c -o mhmmscan-mhmmscan.obj `if test -f 'mhmmscan.c'; then $(CYGPATH_W) 'mhmmscan.c'; else $(CYGPATH_W) '$(srcdir)/mhmmscan.c'; fi`

motiph-motiph.o: motiph.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(motiph_CFLAGS) $(CFLAGS) -MT motiph-motiph.o -MD -MP -MF $(DEPDIR)/motiph-motiph.Tpo -c -o motiph-motiph.o `test -f 'motiph.c' || echo '$(srcdir)/'`motiph.c
	$(am__mv) $(DEPDIR)/motiph-motiph.Tpo $(DEPDIR)/motiph-motiph.Po
#	source='motiph.c' object='motiph-motiph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(motiph_CFLAGS) $(CFLAGS) -c -o motiph-motiph.o `test -f 'motiph.c' || echo '$(srcdir)/'`motiph.c

motiph-motiph.obj: motiph.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(motiph_CFLAGS) $(CFLAGS) -MT motiph-motiph.obj -MD -MP -MF $(DEPDIR)/motiph-motiph.Tpo -c -o motiph-motiph.obj `if test -f 'motiph.c'; then $(CYGPATH_W) 'motiph.c'; else $(CYGPATH_W) '$(srcdir)/motiph.c'; fi`
	$(am__mv) $(DEPDIR)/motiph-motiph.Tpo $(DEPDIR)/motiph-motiph.Po
#	source='motiph.c' object='motiph-motiph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(motiph_CFLAGS) $(CFLAGS) -c -o motiph-motiph.obj `if test -f 'motiph.c'; then $(CYGPATH_W) 'motiph.c'; else $(CYGPATH_W) '$(srcdir)/motiph.c'; fi`

pmp_bf-pmp_bf.o: pmp_bf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pmp_bf_CFLAGS) $(CFLAGS) -MT pmp_bf-pmp_bf.o -MD -MP -MF $(DEPDIR)/pmp_bf-pmp_bf.Tpo -c -o pmp_bf-pmp_bf.o `test -f 'pmp_bf.c' || echo '$(srcdir)/'`pmp_bf.c
	$(am__mv) $(DEPDIR)/pmp_bf-pmp_bf.Tpo $(DEPDIR)/pmp_bf-pmp_bf.Po
#	source='pmp_bf.c' object='pmp_bf-pmp_bf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pmp_bf_CFLAGS) $(CFLAGS) -c -o pmp_bf-pmp_bf.o `test -f 'pmp_bf.c' || echo '$(srcdir)/'`pmp_bf.c

pmp_bf-pmp_bf.obj: pmp_bf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pmp_bf_CFLAGS) $(CFLAGS) -MT pmp_bf-pmp_bf.obj -MD -MP -MF $(DEPDIR)/pmp_bf-pmp_bf.Tpo -c -o pmp_bf-pmp_bf.obj `if test -f 'pmp_bf.c'; then $(CYGPATH_W) 'pmp_bf.c'; else $(CYGPATH_W) '$(srcdir)/pmp_bf.c'; fi`
	$(am__mv) $(DEPDIR)/pmp_bf-pmp_bf.Tpo $(DEPDIR)/pmp_bf-pmp_bf.Po
#	source='pmp_bf.c' object='pmp_bf-pmp_bf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pmp_bf_CFLAGS) $(CFLAGS) -c -o pmp_bf-pmp_bf.obj `if test -f 'pmp_bf.c'; then $(CYGPATH_W) 'pmp_bf.c'; else $(CYGPATH_W) '$(srcdir)/pmp_bf.c'; fi`

qvalue-qvalue.o: qvalue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvalue_CFLAGS) $(CFLAGS) -MT qvalue-qvalue.o -MD -MP -MF $(DEPDIR)/qvalue-qvalue.Tpo -c -o qvalue-qvalue.o `test -f 'qvalue.c' || echo '$(srcdir)/'`qvalue.c
	$(am__mv) $(DEPDIR)/qvalue-qvalue.Tpo $(DEPDIR)/qvalue-qvalue.Po
#	source='qvalue.c' object='qvalue-qvalue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvalue_CFLAGS) $(CFLAGS) -c -o qvalue-qvalue.o `test -f 'qvalue.c' || echo '$(srcdir)/'`qvalue.c

qvalue-qvalue.obj: qvalue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvalue_CFLAGS) $(CFLAGS) -MT qvalue-qvalue.obj -MD -MP -MF $(DEPDIR)/qvalue-qvalue.Tpo -c -o qvalue-qvalue.obj `if test -f 'qvalue.c'; then $(CYGPATH_W) 'qvalue.c'; else $(CYGPATH_W) '$(srcdir)/qvalue.c'; fi`
	$(am__mv) $(DEPDIR)/qvalue-qvalue.Tpo $(DEPDIR)/qvalue-qvalue.Po
#	source='qvalue.c' object='qvalue-qvalue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvalue_CFLAGS) $(CFLAGS) -c -o qvalue-qvalue.obj `if test -f 'qvalue.c'; then $(CYGPATH_W) 'qvalue.c'; else $(CYGPATH_W) '$(srcdir)/qvalue.c'; fi`

ramen-ramen.o: ramen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -MT ramen-ramen.o -MD -MP -MF $(DEPDIR)/ramen-ramen.Tpo -c -o ramen-ramen.o `test -f 'ramen.c' || echo '$(srcdir)/'`ramen.c
	$(am__mv) $(DEPDIR)/ramen-ramen.Tpo $(DEPDIR)/ramen-ramen.Po
#	source='ramen.c' object='ramen-ramen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -c -o ramen-ramen.o `test -f 'ramen.c' || echo '$(srcdir)/'`ramen.c

ramen-ramen.obj: ramen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -MT ramen-ramen.obj -MD -MP -MF $(DEPDIR)/ramen-ramen.Tpo -c -o ramen-ramen.obj `if test -f 'ramen.c'; then $(CYGPATH_W) 'ramen.c'; else $(CYGPATH_W) '$(srcdir)/ramen.c'; fi`
	$(am__mv) $(DEPDIR)/ramen-ramen.Tpo $(DEPDIR)/ramen-ramen.Po
#	source='ramen.c' object='ramen-ramen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -c -o ramen-ramen.obj `if test -f 'ramen.c'; then $(CYGPATH_W) 'ramen.c'; else $(CYGPATH_W) '$(srcdir)/ramen.c'; fi`

ramen-ramen_scan.o: ramen_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -MT ramen-ramen_scan.o -MD -MP -MF $(DEPDIR)/ramen-ramen_scan.Tpo -c -o ramen-ramen_scan.o `test -f 'ramen_scan.c' || echo '$(srcdir)/'`ramen_scan.c
	$(am__mv) $(DEPDIR)/ramen-ramen_scan.Tpo $(DEPDIR)/ramen-ramen_scan.Po
#	source='ramen_scan.c' object='ramen-ramen_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -c -o ramen-ramen_scan.o `test -f 'ramen_scan.c' || echo '$(srcdir)/'`ramen_scan.c

ramen-ramen_scan.obj: ramen_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -MT ramen-ramen_scan.obj -MD -MP -MF $(DEPDIR)/ramen-ramen_scan.Tpo -c -o ramen-ramen_scan.obj `if test -f 'ramen_scan.c'; then $(CYGPATH_W) 'ramen_scan.c'; else $(CYGPATH_W) '$(srcdir)/ramen_scan.c'; fi`
	$(am__mv) $(DEPDIR)/ramen-ramen_scan.Tpo $(DEPDIR)/ramen-ramen_scan.Po
#	source='ramen_scan.c' object='ramen-ramen_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ramen_CFLAGS) $(CFLAGS) -c -o ramen-ramen_scan.obj `if test -f 'ramen_scan.c'; then $(CYGPATH_W) 'ramen_scan.c'; else $(CYGPATH_W) '$(srcdir)/ramen_scan.c'; fi`

ranksum_test-ranksum_test.o: ranksum_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ranksum_test_CFLAGS) $(CFLAGS) -MT ranksum_test-ranksum_test.o -MD -MP -MF $(DEPDIR)/ranksum_test-ranksum_test.Tpo -c -o ranksum_test-ranksum_test.o `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c
	$(am__mv) $(DEPDIR)/ranksum_test-ranksum_test.Tpo $(DEPDIR)/ranksum_test-ranksum_test.Po
#	source='ranksum_test.c' object='ranksum_test-ranksum_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ranksum_test_CFLAGS) $(CFLAGS) -c -o ranksum_test-ranksum_test.o `test -f 'ranksum_test.c' || echo '$(srcdir)/'`ranksum_test.c

ranksum_test-ranksum_test.obj: ranksum_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ranksum_test_CFLAGS) $(CFLAGS) -MT ranksum_test-ranksum_test.obj -MD -MP -MF $(DEPDIR)/ranksum_test-ranksum_test.Tpo -c -o ranksum_test-ranksum_test.obj `if test -f 'ranksum_test.c'; then $(CYGPATH_W) 'ranksum_test.c'; else $(CYGPATH_W) '$(srcdir)/ranksum_test.c'; fi`
	$(am__mv) $(DEPDIR)/ranksum_test-ranksum_test.Tpo $(DEPDIR)/ranksum_test-ranksum_test.Po
#	source='ranksum_test.c' object='ranksum_test-ranksum_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ranksum_test_CFLAGS) $(CFLAGS) -c -o ranksum_test-ranksum_test.obj `if test -f 'ranksum_test.c'; then $(CYGPATH_W) 'ranksum_test.c'; else $(CYGPATH_W) '$(srcdir)/ranksum_test.c'; fi`

readseq-readseq.o: readseq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -MT readseq-readseq.o -MD -MP -MF $(DEPDIR)/readseq-readseq.Tpo -c -o readseq-readseq.o `test -f 'readseq.c' || echo '$(srcdir)/'`readseq.c
	$(am__mv) $(DEPDIR)/readseq-readseq.Tpo $(DEPDIR)/readseq-readseq.Po
#	source='readseq.c' object='readseq-readseq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -c -o readseq-readseq.o `test -f 'readseq.c' || echo '$(srcdir)/'`readseq.c

readseq-readseq.obj: readseq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -MT readseq-readseq.obj -MD -MP -MF $(DEPDIR)/readseq-readseq.Tpo -c -o readseq-readseq.obj `if test -f 'readseq.c'; then $(CYGPATH_W) 'readseq.c'; else $(CYGPATH_W) '$(srcdir)/readseq.c'; fi`
	$(am__mv) $(DEPDIR)/readseq-readseq.Tpo $(DEPDIR)/readseq-readseq.Po
#	source='readseq.c' object='readseq-readseq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -c -o readseq-readseq.obj `if test -f 'readseq.c'; then $(CYGPATH_W) 'readseq.c'; else $(CYGPATH_W) '$(srcdir)/readseq.c'; fi`

readseq-ureadseq.o: ureadseq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -MT readseq-ureadseq.o -MD -MP -MF $(DEPDIR)/readseq-ureadseq.Tpo -c -o readseq-ureadseq.o `test -f 'ureadseq.c' || echo '$(srcdir)/'`ureadseq.c
	$(am__mv) $(DEPDIR)/readseq-ureadseq.Tpo $(DEPDIR)/readseq-ureadseq.Po
#	source='ureadseq.c' object='readseq-ureadseq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -c -o readseq-ureadseq.o `test -f 'ureadseq.c' || echo '$(srcdir)/'`ureadseq.c

readseq-ureadseq.obj: ureadseq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -MT readseq-ureadseq.obj -MD -MP -MF $(DEPDIR)/readseq-ureadseq.Tpo -c -o readseq-ureadseq.obj `if test -f 'ureadseq.c'; then $(CYGPATH_W) 'ureadseq.c'; else $(CYGPATH_W) '$(srcdir)/ureadseq.c'; fi`
	$(am__mv) $(DEPDIR)/readseq-ureadseq.Tpo $(DEPDIR)/readseq-ureadseq.Po
#	source='ureadseq.c' object='readseq-ureadseq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(readseq_CFLAGS) $(CFLAGS) -c -o readseq-ureadseq.obj `if test -f 'ureadseq.c'; then $(CYGPATH_W) 'ureadseq.c'; else $(CYGPATH_W) '$(srcdir)/ureadseq.c'; fi`

reconcile_tree_alignment-reconcile-tree-alignment.o: reconcile-tree-alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reconcile_tree_alignment_CFLAGS) $(CFLAGS) -MT reconcile_tree_alignment-reconcile-tree-alignment.o -MD -MP -MF $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Tpo -c -o reconcile_tree_alignment-reconcile-tree-alignment.o `test -f 'reconcile-tree-alignment.c' || echo '$(srcdir)/'`reconcile-tree-alignment.c
	$(am__mv) $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Tpo $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Po
#	source='reconcile-tree-alignment.c' object='reconcile_tree_alignment-reconcile-tree-alignment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reconcile_tree_alignment_CFLAGS) $(CFLAGS) -c -o reconcile_tree_alignment-reconcile-tree-alignment.o `test -f 'reconcile-tree-alignment.c' || echo '$(srcdir)/'`reconcile-tree-alignment.c

reconcile_tree_alignment-reconcile-tree-alignment.obj: reconcile-tree-alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reconcile_tree_alignment_CFLAGS) $(CFLAGS) -MT reconcile_tree_alignment-reconcile-tree-alignment.obj -MD -MP -MF $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Tpo -c -o reconcile_tree_alignment-reconcile-tree-alignment.obj `if test -f 'reconcile-tree-alignment.c'; then $(CYGPATH_W) 'reconcile-tree-alignment.c'; else $(CYGPATH_W) '$(srcdir)/reconcile-tree-alignment.c'; fi`
	$(am__mv) $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Tpo $(DEPDIR)/reconcile_tree_alignment-reconcile-tree-alignment.Po
#	source='reconcile-tree-alignment.c' object='reconcile_tree_alignment-reconcile-tree-alignment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reconcile_tree_alignment_CFLAGS) $(CFLAGS) -c -o reconcile_tree_alignment-reconcile-tree-alignment.obj `if test -f 'reconcile-tree-alignment.c'; then $(CYGPATH_W) 'reconcile-tree-alignment.c'; else $(CYGPATH_W) '$(srcdir)/reconcile-tree-alignment.c'; fi`

reduce_alignment-reduce-alignment.o: reduce-alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reduce_alignment_CFLAGS) $(CFLAGS) -MT reduce_alignment-reduce-alignment.o -MD -MP -MF $(DEPDIR)/reduce_alignment-reduce-alignment.Tpo -c -o reduce_alignment-reduce-alignment.o `test -f 'reduce-alignment.c' || echo '$(srcdir)/'`reduce-alignment.c
	$(am__mv) $(DEPDIR)/reduce_alignment-reduce-alignment.Tpo $(DEPDIR)/reduce_alignment-reduce-alignment.Po
#	source='reduce-alignment.c' object='reduce_alignment-reduce-alignment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reduce_alignment_CFLAGS) $(CFLAGS) -c -o reduce_alignment-reduce-alignment.o `test -f 'reduce-alignment.c' || echo '$(srcdir)/'`reduce-alignment.c

reduce_alignment-reduce-alignment.obj: reduce-alignment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reduce_alignment_CFLAGS) $(CFLAGS) -MT reduce_alignment-reduce-alignment.obj -MD -MP -MF $(DEPDIR)/reduce_alignment-reduce-alignment.Tpo -c -o reduce_alignment-reduce-alignment.obj `if test -f 'reduce-alignment.c'; then $(CYGPATH_W) 'reduce-alignment.c'; else $(CYGPATH_W) '$(srcdir)/reduce-alignment.c'; fi`
	$(am__mv) $(DEPDIR)/reduce_alignment-reduce-alignment.Tpo $(DEPDIR)/reduce_alignment-reduce-alignment.Po
#	source='reduce-alignment.c' object='reduce_alignment-reduce-alignment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reduce_alignment_CFLAGS) $(CFLAGS) -c -o reduce_alignment-reduce-alignment.obj `if test -f 'reduce-alignment.c'; then $(CYGPATH_W) 'reduce-alignment.c'; else $(CYGPATH_W) '$(srcdir)/reduce-alignment.c'; fi`

remove_alignment_gaps-remove-alignment-gaps.o: remove-alignment-gaps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remove_alignment_gaps_CFLAGS) $(CFLAGS) -MT remove_alignment_gaps-remove-alignment-gaps.o -MD -MP -MF $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Tpo -c -o remove_alignment_gaps-remove-alignment-gaps.o `test -f 'remove-alignment-gaps.c' || echo '$(srcdir)/'`remove-alignment-gaps.c
	$(am__mv) $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Tpo $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Po
#	source='remove-alignment-gaps.c' object='remove_alignment_gaps-remove-alignment-gaps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remove_alignment_gaps_CFLAGS) $(CFLAGS) -c -o remove_alignment_gaps-remove-alignment-gaps.o `test -f 'remove-alignment-gaps.c' || echo '$(srcdir)/'`remove-alignment-gaps.c

remove_alignment_gaps-remove-alignment-gaps.obj: remove-alignment-gaps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remove_alignment_gaps_CFLAGS) $(CFLAGS) -MT remove_alignment_gaps-remove-alignment-gaps.obj -MD -MP -MF $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Tpo -c -o remove_alignment_gaps-remove-alignment-gaps.obj `if test -f 'remove-alignment-gaps.c'; then $(CYGPATH_W) 'remove-alignment-gaps.c'; else $(CYGPATH_W) '$(srcdir)/remove-alignment-gaps.c'; fi`
	$(am__mv) $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Tpo $(DEPDIR)/remove_alignment_gaps-remove-alignment-gaps.Po
#	source='remove-alignment-gaps.c' object='remove_alignment_gaps-remove-alignment-gaps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remove_alignment_gaps_CFLAGS) $(CFLAGS) -c -o remove_alignment_gaps-remove-alignment-gaps.obj `if test -f 'remove-alignment-gaps.c'; then $(CYGPATH_W) 'remove-alignment-gaps.c'; else $(CYGPATH_W) '$(srcdir)/remove-alignment-gaps.c'; fi`

shadow-shadow.o: shadow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shadow_CFLAGS) $(CFLAGS) -MT shadow-shadow.o -MD -MP -MF $(DEPDIR)/shadow-shadow.Tpo -c -o shadow-shadow.o `test -f 'shadow.c' || echo '$(srcdir)/'`shadow.c
	$(am__mv) $(DEPDIR)/shadow-shadow.Tpo $(DEPDIR)/shadow-shadow.Po
#	source='shadow.c' object='shadow-shadow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shadow_CFLAGS) $(CFLAGS) -c -o shadow-shadow.o `test -f 'shadow.c' || echo '$(srcdir)/'`shadow.c

shadow-shadow.obj: shadow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shadow_CFLAGS) $(CFLAGS) -MT shadow-shadow.obj -MD -MP -MF $(DEPDIR)/shadow-shadow.Tpo -c -o shadow-shadow.obj `if test -f 'shadow.c'; then $(CYGPATH_W) 'shadow.c'; else $(CYGPATH_W) '$(srcdir)/shadow.c'; fi`
	$(am__mv) $(DEPDIR)/shadow-shadow.Tpo $(DEPDIR)/shadow-shadow.Po
#	source='shadow.c' object='shadow-shadow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shadow_CFLAGS) $(CFLAGS) -c -o shadow-shadow.obj `if test -f 'shadow.c'; then $(CYGPATH_W) 'shadow.c'; else $(CYGPATH_W) '$(srcdir)/shadow.c'; fi`

spamo-cisml-sax.o: cisml-sax.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-cisml-sax.o -MD -MP -MF $(DEPDIR)/spamo-cisml-sax.Tpo -c -o spamo-cisml-sax.o `test -f 'cisml-sax.c' || echo '$(srcdir)/'`cisml-sax.c
	$(am__mv) $(DEPDIR)/spamo-cisml-sax.Tpo $(DEPDIR)/spamo-cisml-sax.Po
#	source='cisml-sax.c' object='spamo-cisml-sax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-cisml-sax.o `test -f 'cisml-sax.c' || echo '$(srcdir)/'`cisml-sax.c

spamo-cisml-sax.obj: cisml-sax.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-cisml-sax.obj -MD -MP -MF $(DEPDIR)/spamo-cisml-sax.Tpo -c -o spamo-cisml-sax.obj `if test -f 'cisml-sax.c'; then $(CYGPATH_W) 'cisml-sax.c'; else $(CYGPATH_W) '$(srcdir)/cisml-sax.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-cisml-sax.Tpo $(DEPDIR)/spamo-cisml-sax.Po
#	source='cisml-sax.c' object='spamo-cisml-sax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-cisml-sax.obj `if test -f 'cisml-sax.c'; then $(CYGPATH_W) 'cisml-sax.c'; else $(CYGPATH_W) '$(srcdir)/cisml-sax.c'; fi`

spamo-spamo.o: spamo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo.o -MD -MP -MF $(DEPDIR)/spamo-spamo.Tpo -c -o spamo-spamo.o `test -f 'spamo.c' || echo '$(srcdir)/'`spamo.c
	$(am__mv) $(DEPDIR)/spamo-spamo.Tpo $(DEPDIR)/spamo-spamo.Po
#	source='spamo.c' object='spamo-spamo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo.o `test -f 'spamo.c' || echo '$(srcdir)/'`spamo.c

spamo-spamo.obj: spamo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo.obj -MD -MP -MF $(DEPDIR)/spamo-spamo.Tpo -c -o spamo-spamo.obj `if test -f 'spamo.c'; then $(CYGPATH_W) 'spamo.c'; else $(CYGPATH_W) '$(srcdir)/spamo.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-spamo.Tpo $(DEPDIR)/spamo-spamo.Po
#	source='spamo.c' object='spamo-spamo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo.obj `if test -f 'spamo.c'; then $(CYGPATH_W) 'spamo.c'; else $(CYGPATH_W) '$(srcdir)/spamo.c'; fi`

spamo-spamo-cisml.o: spamo-cisml.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-cisml.o -MD -MP -MF $(DEPDIR)/spamo-spamo-cisml.Tpo -c -o spamo-spamo-cisml.o `test -f 'spamo-cisml.c' || echo '$(srcdir)/'`spamo-cisml.c
	$(am__mv) $(DEPDIR)/spamo-spamo-cisml.Tpo $(DEPDIR)/spamo-spamo-cisml.Po
#	source='spamo-cisml.c' object='spamo-spamo-cisml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-cisml.o `test -f 'spamo-cisml.c' || echo '$(srcdir)/'`spamo-cisml.c

spamo-spamo-cisml.obj: spamo-cisml.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-cisml.obj -MD -MP -MF $(DEPDIR)/spamo-spamo-cisml.Tpo -c -o spamo-spamo-cisml.obj `if test -f 'spamo-cisml.c'; then $(CYGPATH_W) 'spamo-cisml.c'; else $(CYGPATH_W) '$(srcdir)/spamo-cisml.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-spamo-cisml.Tpo $(DEPDIR)/spamo-spamo-cisml.Po
#	source='spamo-cisml.c' object='spamo-spamo-cisml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-cisml.obj `if test -f 'spamo-cisml.c'; then $(CYGPATH_W) 'spamo-cisml.c'; else $(CYGPATH_W) '$(srcdir)/spamo-cisml.c'; fi`

spamo-spamo-matches.o: spamo-matches.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-matches.o -MD -MP -MF $(DEPDIR)/spamo-spamo-matches.Tpo -c -o spamo-spamo-matches.o `test -f 'spamo-matches.c' || echo '$(srcdir)/'`spamo-matches.c
	$(am__mv) $(DEPDIR)/spamo-spamo-matches.Tpo $(DEPDIR)/spamo-spamo-matches.Po
#	source='spamo-matches.c' object='spamo-spamo-matches.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-matches.o `test -f 'spamo-matches.c' || echo '$(srcdir)/'`spamo-matches.c

spamo-spamo-matches.obj: spamo-matches.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-matches.obj -MD -MP -MF $(DEPDIR)/spamo-spamo-matches.Tpo -c -o spamo-spamo-matches.obj `if test -f 'spamo-matches.c'; then $(CYGPATH_W) 'spamo-matches.c'; else $(CYGPATH_W) '$(srcdir)/spamo-matches.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-spamo-matches.Tpo $(DEPDIR)/spamo-spamo-matches.Po
#	source='spamo-matches.c' object='spamo-spamo-matches.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-matches.obj `if test -f 'spamo-matches.c'; then $(CYGPATH_W) 'spamo-matches.c'; else $(CYGPATH_W) '$(srcdir)/spamo-matches.c'; fi`

spamo-spamo-output.o: spamo-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-output.o -MD -MP -MF $(DEPDIR)/spamo-spamo-output.Tpo -c -o spamo-spamo-output.o `test -f 'spamo-output.c' || echo '$(srcdir)/'`spamo-output.c
	$(am__mv) $(DEPDIR)/spamo-spamo-output.Tpo $(DEPDIR)/spamo-spamo-output.Po
#	source='spamo-output.c' object='spamo-spamo-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-output.o `test -f 'spamo-output.c' || echo '$(srcdir)/'`spamo-output.c

spamo-spamo-output.obj: spamo-output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-output.obj -MD -MP -MF $(DEPDIR)/spamo-spamo-output.Tpo -c -o spamo-spamo-output.obj `if test -f 'spamo-output.c'; then $(CYGPATH_W) 'spamo-output.c'; else $(CYGPATH_W) '$(srcdir)/spamo-output.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-spamo-output.Tpo $(DEPDIR)/spamo-spamo-output.Po
#	source='spamo-output.c' object='spamo-spamo-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-output.obj `if test -f 'spamo-output.c'; then $(CYGPATH_W) 'spamo-output.c'; else $(CYGPATH_W) '$(srcdir)/spamo-output.c'; fi`

spamo-spamo-scan.o: spamo-scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-scan.o -MD -MP -MF $(DEPDIR)/spamo-spamo-scan.Tpo -c -o spamo-spamo-scan.o `test -f 'spamo-scan.c' || echo '$(srcdir)/'`spamo-scan.c
	$(am__mv) $(DEPDIR)/spamo-spamo-scan.Tpo $(DEPDIR)/spamo-spamo-scan.Po
#	source='spamo-scan.c' object='spamo-spamo-scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-scan.o `test -f 'spamo-scan.c' || echo '$(srcdir)/'`spamo-scan.c

spamo-spamo-scan.obj: spamo-scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -MT spamo-spamo-scan.obj -MD -MP -MF $(DEPDIR)/spamo-spamo-scan.Tpo -c -o spamo-spamo-scan.obj `if test -f 'spamo-scan.c'; then $(CYGPATH_W) 'spamo-scan.c'; else $(CYGPATH_W) '$(srcdir)/spamo-scan.c'; fi`
	$(am__mv) $(DEPDIR)/spamo-spamo-scan.Tpo $(DEPDIR)/spamo-spamo-scan.Po
#	source='spamo-scan.c' object='spamo-spamo-scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(spamo_CFLAGS) $(CFLAGS) -c -o spamo-spamo-scan.obj `if test -f 'spamo-scan.c'; then $(CYGPATH_W) 'spamo-scan.c'; else $(CYGPATH_W) '$(srcdir)/spamo-scan.c'; fi`

tomtom-tomtom.o: tomtom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tomtom_CFLAGS) $(CFLAGS) -MT tomtom-tomtom.o -MD -MP -MF $(DEPDIR)/tomtom-tomtom.Tpo -c -o tomtom-tomtom.o `test -f 'tomtom.c' || echo '$(srcdir)/'`tomtom.c
	$(am__mv) $(DEPDIR)/tomtom-tomtom.Tpo $(DEPDIR)/tomtom-tomtom.Po
#	source='tomtom.c' object='tomtom-tomtom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tomtom_CFLAGS) $(CFLAGS) -c -o tomtom-tomtom.o `test -f 'tomtom.c' || echo '$(srcdir)/'`tomtom.c

tomtom-tomtom.obj: tomtom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tomtom_CFLAGS) $(CFLAGS) -MT tomtom-tomtom.obj -MD -MP -MF $(DEPDIR)/tomtom-tomtom.Tpo -c -o tomtom-tomtom.obj `if test -f 'tomtom.c'; then $(CYGPATH_W) 'tomtom.c'; else $(CYGPATH_W) '$(srcdir)/tomtom.c'; fi`
	$(am__mv) $(DEPDIR)/tomtom-tomtom.Tpo $(DEPDIR)/tomtom-tomtom.Po
#	source='tomtom.c' object='tomtom-tomtom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tomtom_CFLAGS) $(CFLAGS) -c -o tomtom-tomtom.obj `if test -f 'tomtom.c'; then $(CYGPATH_W) 'tomtom.c'; else $(CYGPATH_W) '$(srcdir)/tomtom.c'; fi`

tree-tree.o: tree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tree_CFLAGS) $(CFLAGS) -MT tree-tree.o -MD -MP -MF $(DEPDIR)/tree-tree.Tpo -c -o tree-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c
	$(am__mv) $(DEPDIR)/tree-tree.Tpo $(DEPDIR)/tree-tree.Po
#	source='tree.c' object='tree-tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tree_CFLAGS) $(CFLAGS) -c -o tree-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

tree-tree.obj: tree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tree_CFLAGS) $(CFLAGS) -MT tree-tree.obj -MD -MP -MF $(DEPDIR)/tree-tree.Tpo -c -o tree-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`
	$(am__mv) $(DEPDIR)/tree-tree.Tpo $(DEPDIR)/tree-tree.Po
#	source='tree.c' object='tree-tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tree_CFLAGS) $(CFLAGS) -c -o tree-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`

xsltproc_lite-xsltproc_lite.o: xsltproc_lite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xsltproc_lite_CFLAGS) $(CFLAGS) -MT xsltproc_lite-xsltproc_lite.o -MD -MP -MF $(DEPDIR)/xsltproc_lite-xsltproc_lite.Tpo -c -o xsltproc_lite-xsltproc_lite.o `test -f 'xsltproc_lite.c' || echo '$(srcdir)/'`xsltproc_lite.c
	$(am__mv) $(DEPDIR)/xsltproc_lite-xsltproc_lite.Tpo $(DEPDIR)/xsltproc_lite-xsltproc_lite.Po
#	source='xsltproc_lite.c' object='xsltproc_lite-xsltproc_lite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xsltproc_lite_CFLAGS) $(CFLAGS) -c -o xsltproc_lite-xsltproc_lite.o `test -f 'xsltproc_lite.c' || echo '$(srcdir)/'`xsltproc_lite.c

xsltproc_lite-xsltproc_lite.obj: xsltproc_lite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xsltproc_lite_CFLAGS) $(CFLAGS) -MT xsltproc_lite-xsltproc_lite.obj -MD -MP -MF $(DEPDIR)/xsltproc_lite-xsltproc_lite.Tpo -c -o xsltproc_lite-xsltproc_lite.obj `if test -f 'xsltproc_lite.c'; then $(CYGPATH_W) 'xsltproc_lite.c'; else $(CYGPATH_W) '$(srcdir)/xsltproc_lite.c'; fi`
	$(am__mv) $(DEPDIR)/xsltproc_lite-xsltproc_lite.Tpo $(DEPDIR)/xsltproc_lite-xsltproc_lite.Po
#	source='xsltproc_lite.c' object='xsltproc_lite-xsltproc_lite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xsltproc_lite_CFLAGS) $(CFLAGS) -c -o xsltproc_lite-xsltproc_lite.obj `if test -f 'xsltproc_lite.c'; then $(CYGPATH_W) 'xsltproc_lite.c'; else $(CYGPATH_W) '$(srcdir)/xsltproc_lite.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS


dir.h: Makefile
	echo '#define MEME_DIR "$(prefix)"' >$@
	echo '#define ETC_DIR "$(sysconfdir)" ' >> $@  
	echo '#define BIN_DIR "$(bindir)" ' >> $@

projrel.h: ../ARCHIVE_REVISION ../ARCHIVE_DATE
	echo "#define REVISION \"`cat ../ARCHIVE_REVISION`\"" > projrel.h
	echo "#define ARCHIVE_DATE \"`cat ../ARCHIVE_DATE`\"" >> projrel.h

# If .svnignore file doesn't exist
# create an empty one
.svnignore:
	if [ -e .svn ] ; then touch .svnignore ; fi

# Update SVN svn:ignore property
# If .svnignore exists and longer then 0 bytes.
.svnignore.old:.svnignore
	if [ -e .svn ] ; \
  then \
    if [ -s .svnignore ] ; \
    then \
      svn propset svn:ignore -F .svnignore .  ; \
      cp .svnignore .svnignore.old; \
    fi \
  fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
